{
  "api/Surfer.ConditionChecks.html": {
    "href": "api/Surfer.ConditionChecks.html",
    "title": "Class ConditionChecks | Copyright © 2021 ATStudio",
    "keywords": "Class ConditionChecks Data that contains all the runtime logic for conditions Inheritance Object ConditionChecks Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public static class ConditionChecks Fields All Declaration public static readonly Dictionary<string, PathFunc> All Field Value Type Description Dictionary < String , PathFunc > Methods GetAllNames() Get all the names/paths of the conditions. Used for the inspector Declaration public static string[] GetAllNames() Returns Type Description String [] Names/paths list GetKey(String) Get the key of a specific condition. Used for the inspector Declaration public static string GetKey(string path) Parameters Type Name Description String path Condition name/path to retrieve the key Returns Type Description String Condition key GetName(String) Get the name/path of a specific condition. Used for the inspector Declaration public static string GetName(string key) Parameters Type Name Description String key Condition key to retrieve the name/path Returns Type Description String Condition name/path"
  },
  "api/Surfer.ConditionChecksExtensions.html": {
    "href": "api/Surfer.ConditionChecksExtensions.html",
    "title": "Class ConditionChecksExtensions | Copyright © 2021 ATStudio",
    "keywords": "Class ConditionChecksExtensions Inheritance Object ConditionChecksExtensions Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public static class ConditionChecksExtensions Methods GetFieldsList(String) Declaration public static List<PathField> GetFieldsList(string key) Parameters Type Name Description String key Returns Type Description List < PathField >"
  },
  "api/Surfer.CustomReactions.html": {
    "href": "api/Surfer.CustomReactions.html",
    "title": "Class CustomReactions | Copyright © 2021 ATStudio",
    "keywords": "Class CustomReactions Data that contains all the runtime logic for custom reactions Inheritance Object CustomReactions Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public static class CustomReactions Fields All Declaration public static readonly Dictionary<string, PathAction> All Field Value Type Description Dictionary < String , PathAction > Methods GetAllNames() Get all the names/paths of the reactions. Used for the inspector Declaration public static string[] GetAllNames() Returns Type Description String [] Names/paths list GetKey(String) Get the key of a specific reaction. Used for the inspector Declaration public static string GetKey(string path) Parameters Type Name Description String path Reaction name/path to retrieve the key Returns Type Description String Reaction key GetName(String) Get the name/path of a specific reaction. Used for the inspector Declaration public static string GetName(string key) Parameters Type Name Description String key Reaction key to retrieve the name/path Returns Type Description String Reaction name/path"
  },
  "api/Surfer.CustomReactionsExtensions.html": {
    "href": "api/Surfer.CustomReactionsExtensions.html",
    "title": "Class CustomReactionsExtensions | Copyright © 2021 ATStudio",
    "keywords": "Class CustomReactionsExtensions Inheritance Object CustomReactionsExtensions Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public static class CustomReactionsExtensions Methods GetFieldsList(String) Declaration public static List<PathField> GetFieldsList(string key) Parameters Type Name Description String key Returns Type Description List < PathField >"
  },
  "api/Surfer.DictCamKey.html": {
    "href": "api/Surfer.DictCamKey.html",
    "title": "Struct DictCamKey | Copyright © 2021 ATStudio",
    "keywords": "Struct DictCamKey Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public struct DictCamKey Constructors DictCamKey(RenderMode, Camera) Declaration public DictCamKey(RenderMode renderMode, Camera cam) Parameters Type Name Description RenderMode renderMode Camera cam Properties Cam Declaration public Camera Cam { get; } Property Value Type Description Camera RenderMode Declaration public RenderMode RenderMode { get; } Property Value Type Description RenderMode"
  },
  "api/Surfer.EventsDictionary.html": {
    "href": "api/Surfer.EventsDictionary.html",
    "title": "Class EventsDictionary | Copyright © 2021 ATStudio",
    "keywords": "Class EventsDictionary Inheritance Object Dictionary < String , String > SerializableDictionary < String , String > EventsDictionary Inherited Members SerializableDictionary<String, String>.OnBeforeSerialize() SerializableDictionary<String, String>.OnAfterDeserialize() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class EventsDictionary : SerializableDictionary<string, string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback, ISerializationCallbackReceiver"
  },
  "api/Surfer.FuncInput.html": {
    "href": "api/Surfer.FuncInput.html",
    "title": "Struct FuncInput | Copyright © 2021 ATStudio",
    "keywords": "Struct FuncInput Input parameters of a custom condition or reaction Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public struct FuncInput Constructors FuncInput(GameObject, SUFieldValuesData) Declaration public FuncInput(GameObject obj, SUFieldValuesData vals) Parameters Type Name Description GameObject obj SUFieldValuesData vals Properties fieldsValues Declaration public SUFieldValuesData fieldsValues { get; } Property Value Type Description SUFieldValuesData gameObj Declaration public GameObject gameObj { get; } Property Value Type Description GameObject"
  },
  "api/Surfer.html": {
    "href": "api/Surfer.html",
    "title": "Namespace Surfer | Copyright © 2021 ATStudio",
    "keywords": "Namespace Surfer Classes ConditionChecks Data that contains all the runtime logic for conditions ConditionChecksExtensions CustomReactions Data that contains all the runtime logic for custom reactions CustomReactionsExtensions EventsDictionary ScenesDictionary SerializableDictionary<TKey, TValue> A serializable dictionary for Surfer. SerializedPropertyExtensions StatesDictionary SUAction Monobehaviour representation of the SUActionData with multiple entries SUActionData Data used to setup Surfer Actions by the inspector SUActionDataDrawer SUAnchoredAnimationData Data to setup a Screen-related animation by the inspector SUAnchoredPositionData Data to setup an AnchoredPosition animation by the inspector SUAnimationData Data used to setup (DOTween) Animations by the inspector SUAnimationDataDrawer SUAnimationsData Data used to easily view/group/setup multiple (DOTween) Animations by the inspector SUAnimatorBehaviour Class to make a Surfer Action when entering or exiting an Animator State SUBaseUIEvent Class to handle base UI events (like click,enter,exit,select,deselect) and make an action or play an animation after they have been triggered SUBehaviourData SUBehavioursData SUCamData SUCamItemsManager SUCGroupData Data to setup a Canvas Group animation by the inspector SUCharTweenData Data to setup a Shake animation by the inspector SUCharTweenDataDrawer SUColorData Data to setup a Color animation by the inspector SUConditionData Data to setup condition in the inspector and to check if it's satisfied SUConditionDataDrawer SUConditionsData Data to better view/group/setup multiple conditions in the inspector and to check if they're satisfied SUConditionsDataDrawer SUCustomEventData Class to choose a custom event in the inspector SUCustomEventDataDrawer SUCustomEventEventData Event data for Custom Event Trigger SUCustomEventsData Class to choose a custom event in the inspector SUCustomEventsDataDrawer SUDropdownBehaviour SUElement SUElement.DictEvents SUElementData SUElementDataDrawer SUElementEditor SUEvent SUEventDrawer SUEventSystemManager SUFastConditionData SUFastConditionDataDrawer SUFastConditionsData SUFastConditionsDataDrawer SUFastReactionData SUFastReactionDataDrawer SUFastReactionsData SUFastReactionsDataDrawer SUFieldValuesData SUGroupsBehaviour SUGroupStateUI Class to handle multiple (child) states by focus on the one just opened SUGroupStateUIEditor SUHealthBarCamData SUHealthBarData SUHealthBarDataExtensions SUHealthBarLink SUHealthBarLinkData SUHealthBarsManager SUHealthBarVisualData SUHierarchyMonitor SUIndicatorCamData SUIndicatorData SUIndicatorDataDrawer SUIndicatorLink SUIndicatorLinkData SUIndicatorsManager SUIndicatorVisualData SUInputBehaviour SUInputFieldBehaviour SUItemLinkData SUJumpData Data to setup a Jump animation by the inspector SUJumpDataDrawer SULastSelectionEventData Event data for Last State Selection Event handler SULinkData SULoadingProgress Class to easily show SceneLoading progress on a Text or on an filled-image. SUPositionData Data to setup a Position animation by the inspector SUPreBuildManager SUPunchData Data to setup a Punch animation by the inspector SUPunchDataDrawer SUReactionData Data to setup a custom reaction in the inspector SUReactionDataDrawer SUReactionsData Data to better view/group/setup multiple custom reactions in the inspector SUReactionsDataDrawer SURectSizeData Data to setup a Rect Size animation by the inspector SURectSizeDataDrawer SurferHelper Helper class of Surfer for editor and runtime code. SurferManager Surfer Singleton that manages states, scene, conditions and actions. SurferSO Scriptable object of Surfer that stores the state names SURotationData Data to setup a Rotation animation by the inspector SUScaleData Data to setup a Scale animation by the inspector SUSceneActivatedEventData Event data for Scene Activation callback SUSceneData Class to choose a scene in the inspector SUSceneDataDrawer SUSceneDeactivatedEventData Event data for Scene Deactivation callback SUSceneEvent Class to easily receive scene related events in the inspector SUSceneEventEditor SUSceneLoadedEventData Event data for Scene Loaded callback SUSceneLoadingEventData Event data for Scene Loading callback SUScenesData Class to choose a scene in the inspector SUScenesDataDrawer SUSceneUnloadedEventData Event data for Scene Unloaded callback SUSceneUnloadingEventData Event data for Scene Unloading callback SUScreenAnimationData Data to setup a Screen-related animation by the inspector SUScreenAnimationDataDrawer SUScrollBehaviour SUSettingsRegister SUShakeData Data to setup a Shake animation by the inspector SUShakeDataDrawer SUSliderBehaviour SUSliderEvent Class to make a Surfer Action after the slider reaches specific values SUStatedAnimation Class to play animations setup in the inspector , when a specific state has entered or exited SUStatedAnimationEditor SUStateData Class to choose a state in the inspector SUStateDataDrawer SUStatedFocus Class to automatically focus on an object when a specific state has entered or exited SUStatedInput Class to make an action only when a specific input has been pressed and only if the current StateUI parent of this object is open. SUStatedReaction Class to automatically react when a specific state has entered or exited. It uses conditions and state versioning. SUStatedReactionEditor SUStatedVisibility Class to automatically set active (or not) an object when a specific state has entered or exited SUStateEvent Class to easily receive state related events in the inspector SUStateEventData Event data for State Enter/Exit callback SUStateEventEditor SUStatesData Class to easily choose states in the inspector SUStatesDataDrawer SUStateUI Class to make a UI Panel an actual state SUStateUIEditor SUToggleBehaviour SUToggleEvent Class to make a Surfer Action when the toggle is true or false SUToolsMenu SUTriggerEvent Class to make a Surfer Action when a Trigger(2d/3d) callback is triggered SUVersionBehaviour VersionsDictionary Structs DictCamKey FuncInput Input parameters of a custom condition or reaction PathAction Data to store reaction name/path and runtime logic PathField PathFunc Data to store condition name/path and runtime logic SUHealthBarEventData SUIndicatorEventData SUStateInfo Interfaces ILastStateSelectionHandler Interface for registering to a deselection that brings to another state When a new state is open, it is called on the last object of the previous state IResetLastStateSelectionHandler Interface for reset the history focus selection state of an object ISUCustomEventHandler Interface for registering to a Custom Event trigger callback ISUHealthBarHPStateHandler ISUHealthBarStateHandler ISUHealthBarVisualHandler ISUIndicatorDistanceHandler ISUIndicatorStateHandler ISUIndicatorVisualHandler ISUSceneActivatedHandler Interface for registering to Scene Activation callback ISUSceneDeactivatedHandler Interface for registering to Scene Deactivation callback ISUSceneLoadedHandler Interface for registering to Scene Loaded callback ISUSceneLoadingHandler Interface for registering to Scene Loading callback ISUSceneUnloadedHandler Interface for registering to Scene Unloaded callback ISUSceneUnloadingHandler Interface for registering to Scene Unloading callback ISUStateEnterHandler Interface for registering to State Entering callback ISUStateExitHandler Interface for registering to State Exiting callback Enums PathFieldType_ID SUActionData.SUAction_ID SUActionData.SUPrefabParent_ID SUAnimationData.DelayMode_ID SUAnimationData.EndMode_ID SUAnimationData.StartMode_ID SUAnimatorBehaviour.SUAnimatorEvent_ID SUBaseUIEvent.SUBaseEvent_ID SUCharTweenData.Mode_ID SUElementData.StateCloseMode_ID When a state has just been opened, should automatically close other states? Example : a TabMenu panel should automatically close sibling states with the mode set to Siblings SUElementData.Type_ID SUEvent.Type_ID SUFastConditionData.Type_ID SUFastReactionData.Type_ID SUHealthBarHPState_ID SUHealthBarState_ID SUIndicatorData.Type_ID SUIndicatorDistanceState_ID SUIndicatorState_ID SUPunchData.Mode_ID SURectSizeData.Mode_ID SUSceneEvent.SUSceneEvent_ID SUShakeData.Mode_ID SUSliderEvent.SUSliderEvent_ID SUStateEvent.SUStateEvent_ID SUToggleEvent.SUToggleEvent_ID SUTriggerEvent.SUTriggerEvent_ID"
  },
  "api/Surfer.ILastStateSelectionHandler.html": {
    "href": "api/Surfer.ILastStateSelectionHandler.html",
    "title": "Interface ILastStateSelectionHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ILastStateSelectionHandler Interface for registering to a deselection that brings to another state When a new state is open, it is called on the last object of the previous state Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ILastStateSelectionHandler Methods OnBecomeLastStateSelection(SULastSelectionEventData) Declaration void OnBecomeLastStateSelection(SULastSelectionEventData eventInfo) Parameters Type Name Description SULastSelectionEventData eventInfo"
  },
  "api/Surfer.IResetLastStateSelectionHandler.html": {
    "href": "api/Surfer.IResetLastStateSelectionHandler.html",
    "title": "Interface IResetLastStateSelectionHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface IResetLastStateSelectionHandler Interface for reset the history focus selection state of an object Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface IResetLastStateSelectionHandler Methods OnResetLastStateSelection() Declaration void OnResetLastStateSelection()"
  },
  "api/Surfer.ISUCustomEventHandler.html": {
    "href": "api/Surfer.ISUCustomEventHandler.html",
    "title": "Interface ISUCustomEventHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUCustomEventHandler Interface for registering to a Custom Event trigger callback Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUCustomEventHandler Methods OnSUCustomEvent(SUCustomEventEventData) Declaration void OnSUCustomEvent(SUCustomEventEventData eventInfo) Parameters Type Name Description SUCustomEventEventData eventInfo"
  },
  "api/Surfer.ISUHealthBarHPStateHandler.html": {
    "href": "api/Surfer.ISUHealthBarHPStateHandler.html",
    "title": "Interface ISUHealthBarHPStateHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUHealthBarHPStateHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUHealthBarHPStateHandler Methods OnHealthBarHPStateUpdate(SUHealthBarEventData) Declaration void OnHealthBarHPStateUpdate(SUHealthBarEventData eventData) Parameters Type Name Description SUHealthBarEventData eventData"
  },
  "api/Surfer.ISUHealthBarStateHandler.html": {
    "href": "api/Surfer.ISUHealthBarStateHandler.html",
    "title": "Interface ISUHealthBarStateHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUHealthBarStateHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUHealthBarStateHandler Methods OnHealthBarStateUpdate(SUHealthBarEventData) Declaration void OnHealthBarStateUpdate(SUHealthBarEventData eventData) Parameters Type Name Description SUHealthBarEventData eventData"
  },
  "api/Surfer.ISUHealthBarVisualHandler.html": {
    "href": "api/Surfer.ISUHealthBarVisualHandler.html",
    "title": "Interface ISUHealthBarVisualHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUHealthBarVisualHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUHealthBarVisualHandler Methods OnHealthBarVisualSetUp() Declaration SUHealthBarVisualData OnHealthBarVisualSetUp() Returns Type Description SUHealthBarVisualData"
  },
  "api/Surfer.ISUIndicatorDistanceHandler.html": {
    "href": "api/Surfer.ISUIndicatorDistanceHandler.html",
    "title": "Interface ISUIndicatorDistanceHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUIndicatorDistanceHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUIndicatorDistanceHandler Methods OnIndicatorDistanceUpdate(SUIndicatorEventData) Declaration void OnIndicatorDistanceUpdate(SUIndicatorEventData eventData) Parameters Type Name Description SUIndicatorEventData eventData"
  },
  "api/Surfer.ISUIndicatorStateHandler.html": {
    "href": "api/Surfer.ISUIndicatorStateHandler.html",
    "title": "Interface ISUIndicatorStateHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUIndicatorStateHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUIndicatorStateHandler Methods OnIndicatorStateUpdate(SUIndicatorEventData) Declaration void OnIndicatorStateUpdate(SUIndicatorEventData eventData) Parameters Type Name Description SUIndicatorEventData eventData"
  },
  "api/Surfer.ISUIndicatorVisualHandler.html": {
    "href": "api/Surfer.ISUIndicatorVisualHandler.html",
    "title": "Interface ISUIndicatorVisualHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUIndicatorVisualHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUIndicatorVisualHandler Methods OnIndicatorVisualSetUp() Declaration SUIndicatorVisualData OnIndicatorVisualSetUp() Returns Type Description SUIndicatorVisualData"
  },
  "api/Surfer.ISUSceneActivatedHandler.html": {
    "href": "api/Surfer.ISUSceneActivatedHandler.html",
    "title": "Interface ISUSceneActivatedHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUSceneActivatedHandler Interface for registering to Scene Activation callback Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUSceneActivatedHandler Methods OnSUSceneActivated(SUSceneActivatedEventData) Declaration void OnSUSceneActivated(SUSceneActivatedEventData eventInfo) Parameters Type Name Description SUSceneActivatedEventData eventInfo"
  },
  "api/Surfer.ISUSceneDeactivatedHandler.html": {
    "href": "api/Surfer.ISUSceneDeactivatedHandler.html",
    "title": "Interface ISUSceneDeactivatedHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUSceneDeactivatedHandler Interface for registering to Scene Deactivation callback Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUSceneDeactivatedHandler Methods OnSUSceneDeactivated(SUSceneDeactivatedEventData) Declaration void OnSUSceneDeactivated(SUSceneDeactivatedEventData eventInfo) Parameters Type Name Description SUSceneDeactivatedEventData eventInfo"
  },
  "api/Surfer.ISUSceneLoadedHandler.html": {
    "href": "api/Surfer.ISUSceneLoadedHandler.html",
    "title": "Interface ISUSceneLoadedHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUSceneLoadedHandler Interface for registering to Scene Loaded callback Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUSceneLoadedHandler Methods OnSUSceneLoaded(SUSceneLoadedEventData) Declaration void OnSUSceneLoaded(SUSceneLoadedEventData eventInfo) Parameters Type Name Description SUSceneLoadedEventData eventInfo"
  },
  "api/Surfer.ISUSceneLoadingHandler.html": {
    "href": "api/Surfer.ISUSceneLoadingHandler.html",
    "title": "Interface ISUSceneLoadingHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUSceneLoadingHandler Interface for registering to Scene Loading callback Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUSceneLoadingHandler Methods OnSUSceneLoading(SUSceneLoadingEventData) Declaration void OnSUSceneLoading(SUSceneLoadingEventData eventInfo) Parameters Type Name Description SUSceneLoadingEventData eventInfo"
  },
  "api/Surfer.ISUSceneUnloadedHandler.html": {
    "href": "api/Surfer.ISUSceneUnloadedHandler.html",
    "title": "Interface ISUSceneUnloadedHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUSceneUnloadedHandler Interface for registering to Scene Unloaded callback Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUSceneUnloadedHandler Methods OnSUSceneUnloaded(SUSceneUnloadedEventData) Declaration void OnSUSceneUnloaded(SUSceneUnloadedEventData eventInfo) Parameters Type Name Description SUSceneUnloadedEventData eventInfo"
  },
  "api/Surfer.ISUSceneUnloadingHandler.html": {
    "href": "api/Surfer.ISUSceneUnloadingHandler.html",
    "title": "Interface ISUSceneUnloadingHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUSceneUnloadingHandler Interface for registering to Scene Unloading callback Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUSceneUnloadingHandler Methods OnSUSceneUnloading(SUSceneUnloadingEventData) Declaration void OnSUSceneUnloading(SUSceneUnloadingEventData eventInfo) Parameters Type Name Description SUSceneUnloadingEventData eventInfo"
  },
  "api/Surfer.ISUStateEnterHandler.html": {
    "href": "api/Surfer.ISUStateEnterHandler.html",
    "title": "Interface ISUStateEnterHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUStateEnterHandler Interface for registering to State Entering callback Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUStateEnterHandler Methods OnSUStateEnter(SUStateEventData) Declaration void OnSUStateEnter(SUStateEventData eventInfo) Parameters Type Name Description SUStateEventData eventInfo"
  },
  "api/Surfer.ISUStateExitHandler.html": {
    "href": "api/Surfer.ISUStateExitHandler.html",
    "title": "Interface ISUStateExitHandler | Copyright © 2021 ATStudio",
    "keywords": "Interface ISUStateExitHandler Interface for registering to State Exiting callback Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public interface ISUStateExitHandler Methods OnSUStateExit(SUStateEventData) Declaration void OnSUStateExit(SUStateEventData eventInfo) Parameters Type Name Description SUStateEventData eventInfo"
  },
  "api/Surfer.PathAction.html": {
    "href": "api/Surfer.PathAction.html",
    "title": "Struct PathAction | Copyright © 2021 ATStudio",
    "keywords": "Struct PathAction Data to store reaction name/path and runtime logic Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public struct PathAction Constructors PathAction(String, Action<FuncInput>) Declaration public PathAction(string path, Action<FuncInput> act) Parameters Type Name Description String path Action < FuncInput > act PathAction(String, List<PathField>, Action<FuncInput>) Declaration public PathAction(string path, List<PathField> fields, Action<FuncInput> act) Parameters Type Name Description String path List < PathField > fields Action < FuncInput > act Properties Action Declaration public Action<FuncInput> Action { get; } Property Value Type Description Action < FuncInput > Fields Declaration public List<PathField> Fields { get; } Property Value Type Description List < PathField > Path Declaration public string Path { get; } Property Value Type Description String"
  },
  "api/Surfer.PathField.html": {
    "href": "api/Surfer.PathField.html",
    "title": "Struct PathField | Copyright © 2021 ATStudio",
    "keywords": "Struct PathField Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public struct PathField Constructors PathField(String, PathFieldType_ID) Declaration public PathField(string name, PathFieldType_ID fieldID) Parameters Type Name Description String name PathFieldType_ID fieldID PathField(String, PathFieldType_ID, Type) Declaration public PathField(string name, PathFieldType_ID fieldID, Type objType) Parameters Type Name Description String name PathFieldType_ID fieldID Type objType Properties Field_ID Declaration public PathFieldType_ID Field_ID { get; } Property Value Type Description PathFieldType_ID Name Declaration public string Name { get; } Property Value Type Description String Type Declaration public Type Type { get; } Property Value Type Description Type"
  },
  "api/Surfer.PathFieldType_ID.html": {
    "href": "api/Surfer.PathFieldType_ID.html",
    "title": "Enum PathFieldType_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum PathFieldType_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum PathFieldType_ID Fields Name Description Bool_1 Bool_2 Bool_3 Color_1 Color_2 Color_3 Enum_1 Enum_2 Enum_3 Float_1 Float_2 Float_3 Int_1 Int_2 Int_3 None Object_1 Object_2 Object_3 Object_4 Object_5 String_1 String_2 String_3"
  },
  "api/Surfer.PathFunc.html": {
    "href": "api/Surfer.PathFunc.html",
    "title": "Struct PathFunc | Copyright © 2021 ATStudio",
    "keywords": "Struct PathFunc Data to store condition name/path and runtime logic Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public struct PathFunc Constructors PathFunc(String, Func<FuncInput, Boolean>) Declaration public PathFunc(string path, Func<FuncInput, bool> func) Parameters Type Name Description String path Func < FuncInput , Boolean > func PathFunc(String, List<PathField>, Func<FuncInput, Boolean>) Declaration public PathFunc(string path, List<PathField> fields, Func<FuncInput, bool> func) Parameters Type Name Description String path List < PathField > fields Func < FuncInput , Boolean > func Properties Fields Declaration public List<PathField> Fields { get; } Property Value Type Description List < PathField > Function Declaration public Func<FuncInput, bool> Function { get; } Property Value Type Description Func < FuncInput , Boolean > Path Declaration public string Path { get; } Property Value Type Description String"
  },
  "api/Surfer.ScenesDictionary.html": {
    "href": "api/Surfer.ScenesDictionary.html",
    "title": "Class ScenesDictionary | Copyright © 2021 ATStudio",
    "keywords": "Class ScenesDictionary Inheritance Object Dictionary < String , String > SerializableDictionary < String , String > ScenesDictionary Inherited Members SerializableDictionary<String, String>.OnBeforeSerialize() SerializableDictionary<String, String>.OnAfterDeserialize() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class ScenesDictionary : SerializableDictionary<string, string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback, ISerializationCallbackReceiver"
  },
  "api/Surfer.SerializableDictionary-2.html": {
    "href": "api/Surfer.SerializableDictionary-2.html",
    "title": "Class SerializableDictionary<TKey, TValue> | Copyright © 2021 ATStudio",
    "keywords": "Class SerializableDictionary<TKey, TValue> A serializable dictionary for Surfer. Inheritance Object Dictionary <TKey, TValue> SerializableDictionary<TKey, TValue> EventsDictionary ScenesDictionary StatesDictionary SUElement.DictEvents VersionsDictionary Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, ISerializable, IDeserializationCallback, ISerializationCallbackReceiver Type Parameters Name Description TKey TValue Methods OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize()"
  },
  "api/Surfer.SerializedPropertyExtensions.html": {
    "href": "api/Surfer.SerializedPropertyExtensions.html",
    "title": "Class SerializedPropertyExtensions | Copyright © 2021 ATStudio",
    "keywords": "Class SerializedPropertyExtensions Inheritance Object SerializedPropertyExtensions Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public static class SerializedPropertyExtensions Methods AddCustomUserFields(SerializedProperty, ref Rect, List<PathField>, ref SerializedProperty) Declaration public static void AddCustomUserFields(this SerializedProperty prop, ref Rect pos, List<PathField> fields, ref SerializedProperty vals) Parameters Type Name Description SerializedProperty prop Rect pos List < PathField > fields SerializedProperty vals AddField<T>(SerializedProperty, ref Rect, SerializedProperty, Boolean) Declaration public static void AddField<T>(this SerializedProperty prop, ref Rect pos, SerializedProperty fieldProperty, bool inParent = false) where T : Component Parameters Type Name Description SerializedProperty prop Rect pos SerializedProperty fieldProperty Boolean inParent Type Parameters Name Description T AddGOField(SerializedProperty, ref Rect, SerializedProperty) Declaration public static void AddGOField(this SerializedProperty prop, ref Rect pos, SerializedProperty fieldProperty) Parameters Type Name Description SerializedProperty prop Rect pos SerializedProperty fieldProperty AddIntList(SerializedProperty, ref Rect, String[]) Declaration public static void AddIntList(this SerializedProperty prop, ref Rect pos, string[] list) Parameters Type Name Description SerializedProperty prop Rect pos String [] list AddValueField(SerializedProperty, ref Rect, Int32, GUIContent) Declaration public static void AddValueField(this SerializedProperty prop, ref Rect pos, int position = 2, GUIContent content = null) Parameters Type Name Description SerializedProperty prop Rect pos Int32 position GUIContent content"
  },
  "api/Surfer.StatesDictionary.html": {
    "href": "api/Surfer.StatesDictionary.html",
    "title": "Class StatesDictionary | Copyright © 2021 ATStudio",
    "keywords": "Class StatesDictionary Inheritance Object Dictionary < String , String > SerializableDictionary < String , String > StatesDictionary Inherited Members SerializableDictionary<String, String>.OnBeforeSerialize() SerializableDictionary<String, String>.OnAfterDeserialize() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class StatesDictionary : SerializableDictionary<string, string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IDictionary, ICollection, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IEnumerable, ISerializable, IDeserializationCallback, ISerializationCallbackReceiver"
  },
  "api/Surfer.SUAction.html": {
    "href": "api/Surfer.SUAction.html",
    "title": "Class SUAction | Copyright © 2021 ATStudio",
    "keywords": "Class SUAction Monobehaviour representation of the SUActionData with multiple entries Inheritance Object SUAction Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUAction : MonoBehaviour Methods Play() Play the action setup in the inspector Declaration public void Play()"
  },
  "api/Surfer.SUActionData.html": {
    "href": "api/Surfer.SUActionData.html",
    "title": "Class SUActionData | Copyright © 2021 ATStudio",
    "keywords": "Class SUActionData Data used to setup Surfer Actions by the inspector Inheritance Object SUActionData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUActionData Methods Play(GameObject) Play the action setup in the inspector Declaration public virtual void Play(GameObject go) Parameters Type Name Description GameObject go GameObject where to play AudioClip on (if setup)"
  },
  "api/Surfer.SUActionData.SUAction_ID.html": {
    "href": "api/Surfer.SUActionData.SUAction_ID.html",
    "title": "Enum SUActionData.SUAction_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUActionData.SUAction_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUAction_ID Fields Name Description CloseMyState CloseState LoadScene LoadSceneAsync None OpenPrefabState OpenState SendCustomEvent SetActiveScene ToggleState UnloadSceneAsync"
  },
  "api/Surfer.SUActionData.SUPrefabParent_ID.html": {
    "href": "api/Surfer.SUActionData.SUPrefabParent_ID.html",
    "title": "Enum SUActionData.SUPrefabParent_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUActionData.SUPrefabParent_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUPrefabParent_ID Fields Name Description RootCanvas The main-root canvas of the caller will be the parent Scene The scene will be the parent ThisState The state of the caller will be the parent ThisStateParent The parent state of caller's state will be the parent"
  },
  "api/Surfer.SUActionDataDrawer.html": {
    "href": "api/Surfer.SUActionDataDrawer.html",
    "title": "Class SUActionDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUActionDataDrawer Inheritance Object SUActionDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUActionDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUAnchoredAnimationData.html": {
    "href": "api/Surfer.SUAnchoredAnimationData.html",
    "title": "Class SUAnchoredAnimationData | Copyright © 2021 ATStudio",
    "keywords": "Class SUAnchoredAnimationData Data to setup a Screen-related animation by the inspector Inheritance Object SUAnimationData SUAnchoredAnimationData SUAnchoredPositionData Inherited Members SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.IsAvailable SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.OnPlay(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class SUAnchoredAnimationData : SUAnimationData Fields _rectCp Declaration protected RectTransform _rectCp Field Value Type Description RectTransform Methods GetFromPosition() Get position \"from\" animation value based on StartMode Declaration protected Vector2 GetFromPosition() Returns Type Description Vector2 position value GetToPosition() Get position \"to\" animation value based on EndMode Declaration protected Vector2 GetToPosition() Returns Type Description Vector2 position value OnCache(GameObject) Declaration protected override void OnCache(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnCache(GameObject)"
  },
  "api/Surfer.SUAnchoredPositionData.html": {
    "href": "api/Surfer.SUAnchoredPositionData.html",
    "title": "Class SUAnchoredPositionData | Copyright © 2021 ATStudio",
    "keywords": "Class SUAnchoredPositionData Data to setup an AnchoredPosition animation by the inspector Inheritance Object SUAnimationData SUAnchoredAnimationData SUAnchoredPositionData Inherited Members SUAnchoredAnimationData._rectCp SUAnchoredAnimationData.OnCache(GameObject) SUAnchoredAnimationData.GetFromPosition() SUAnchoredAnimationData.GetToPosition() SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.IsAvailable SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class SUAnchoredPositionData : SUAnchoredAnimationData Methods OnPlay(GameObject) Declaration protected override void OnPlay(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnPlay(GameObject)"
  },
  "api/Surfer.SUAnimationData.DelayMode_ID.html": {
    "href": "api/Surfer.SUAnimationData.DelayMode_ID.html",
    "title": "Enum SUAnimationData.DelayMode_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUAnimationData.DelayMode_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum DelayMode_ID Fields Name Description Normal Uses the delay setup in the inspector WithSiblingIndex Uses the delay setup in the inspector multiplied by the sibling index of the object WithSiblingIndexShifted Uses the delay setup in the inspector multiplied by the sibling index of the object (sibling indexes will be shifted starting from 1 )"
  },
  "api/Surfer.SUAnimationData.EndMode_ID.html": {
    "href": "api/Surfer.SUAnimationData.EndMode_ID.html",
    "title": "Enum SUAnimationData.EndMode_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUAnimationData.EndMode_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum EndMode_ID Fields Name Description To To the values setup in the inspector ToBottom To the bottom (out) side of the parent rect ToCenter To the center of the parent rect ToCurrent To the current values (the ones before starting the whole animation) ToLeft To the left (out) side of the parent rect ToRight To the right (out) side of the parent rect ToStarting To the values cached during Awake (if CacheComponents method is used ) ToTop To the top (out) side of the parent rect"
  },
  "api/Surfer.SUAnimationData.html": {
    "href": "api/Surfer.SUAnimationData.html",
    "title": "Class SUAnimationData | Copyright © 2021 ATStudio",
    "keywords": "Class SUAnimationData Data used to setup (DOTween) Animations by the inspector Inheritance Object SUAnimationData SUAnchoredAnimationData SUCGroupData SUCharTweenData SUColorData SUPunchData SURectSizeData SURotationData SUScaleData SUScreenAnimationData SUShakeData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class SUAnimationData Fields _alreadyCached Declaration protected bool _alreadyCached Field Value Type Description Boolean _delay Declaration protected float _delay Field Value Type Description Single _delayMode Declaration protected SUAnimationData.DelayMode_ID _delayMode Field Value Type Description SUAnimationData.DelayMode_ID _duration Declaration protected float _duration Field Value Type Description Single _ease Declaration protected Ease _ease Field Value Type Description Ease _endMode Declaration protected SUAnimationData.EndMode_ID _endMode Field Value Type Description SUAnimationData.EndMode_ID _idTween Declaration protected string _idTween Field Value Type Description String _loop Declaration protected LoopType _loop Field Value Type Description LoopType _looped Declaration protected bool _looped Field Value Type Description Boolean _startMode Declaration protected SUAnimationData.StartMode_ID _startMode Field Value Type Description SUAnimationData.StartMode_ID _transf Declaration protected Transform _transf Field Value Type Description Transform _tween Declaration protected Tween _tween Field Value Type Description Tween AllPlaying Declaration public static Dictionary<string, Tween> AllPlaying Field Value Type Description Dictionary < String , Tween > CGroupPrefix Declaration public const string CGroupPrefix = \"_cg\" Field Value Type Description String CharTweenPrefix Declaration public const string CharTweenPrefix = \"_charT\" Field Value Type Description String ColorPrefix Declaration public const string ColorPrefix = \"_col\" Field Value Type Description String JumpPrefix Declaration public const string JumpPrefix = \"_po\" Field Value Type Description String PositionPrefix Declaration public const string PositionPrefix = \"_po\" Field Value Type Description String PunchPrefix Declaration public const string PunchPrefix = \"_pu\" Field Value Type Description String RectSizePrefix Declaration public const string RectSizePrefix = \"_rec\" Field Value Type Description String RotationPrefix Declaration public const string RotationPrefix = \"_rot\" Field Value Type Description String ScalePrefix Declaration public const string ScalePrefix = \"_sc\" Field Value Type Description String ShakePrefix Declaration public const string ShakePrefix = \"_sh\" Field Value Type Description String Properties Delay Adjusted delay based (or not) on the sibling index of the gameObject Declaration public float Delay { get; } Property Value Type Description Single IsAvailable Check if animation can be played (i.e. not set to None) Declaration protected virtual bool IsAvailable { get; } Property Value Type Description Boolean Methods CacheComponents(GameObject) Cache all the components need to play the animation Declaration public void CacheComponents(GameObject go) Parameters Type Name Description GameObject go GameObject where to cache the components from KillIt() Kill the tween by using its id Declaration public void KillIt() OnCache(GameObject) Declaration protected virtual void OnCache(GameObject go) Parameters Type Name Description GameObject go OnCompleteTweenLogic() Declaration protected void OnCompleteTweenLogic() OnPlay(GameObject) Declaration protected virtual void OnPlay(GameObject go) Parameters Type Name Description GameObject go OnPlayTweenLogic() Declaration protected void OnPlayTweenLogic() Play(GameObject) Play animation set up in the inspector Declaration public void Play(GameObject go) Parameters Type Name Description GameObject go GameObject that will play the animation"
  },
  "api/Surfer.SUAnimationData.StartMode_ID.html": {
    "href": "api/Surfer.SUAnimationData.StartMode_ID.html",
    "title": "Enum SUAnimationData.StartMode_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUAnimationData.StartMode_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum StartMode_ID Fields Name Description From From the values setup in the inspector FromBottom From the bottom (out) side of the parent rect FromCenter From the center of the parent rect FromCurrent From the current values FromLeft From the left (out) side of the parent rect FromRight From the right (out) side of the parent rect FromStarting From the values cached during Awake (if CacheComponents method is used ) FromTop From the top (out) side of the parent rect None"
  },
  "api/Surfer.SUAnimationDataDrawer.html": {
    "href": "api/Surfer.SUAnimationDataDrawer.html",
    "title": "Class SUAnimationDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUAnimationDataDrawer Inheritance Object SUAnimationDataDrawer SUCharTweenDataDrawer SUPunchDataDrawer SURectSizeDataDrawer SUScreenAnimationDataDrawer SUShakeDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUAnimationDataDrawer : PropertyDrawer Fields _ease Declaration protected SerializedProperty _ease Field Value Type Description SerializedProperty _endMode Declaration protected SerializedProperty _endMode Field Value Type Description SerializedProperty _looped Declaration protected SerializedProperty _looped Field Value Type Description SerializedProperty _obj Declaration protected SerializedProperty _obj Field Value Type Description SerializedProperty _startMode Declaration protected SerializedProperty _startMode Field Value Type Description SerializedProperty Methods GetHeightCommonFields() Declaration protected virtual int GetHeightCommonFields() Returns Type Description Int32 GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single IsNone() Declaration protected virtual bool IsNone() Returns Type Description Boolean OnCanBeLooped() Declaration protected virtual bool OnCanBeLooped() Returns Type Description Boolean OnCanUseDefaultModes(ref Rect, SerializedProperty) Declaration protected virtual bool OnCanUseDefaultModes(ref Rect position, SerializedProperty property) Parameters Type Name Description Rect position SerializedProperty property Returns Type Description Boolean OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUAnimationsData.html": {
    "href": "api/Surfer.SUAnimationsData.html",
    "title": "Class SUAnimationsData | Copyright © 2021 ATStudio",
    "keywords": "Class SUAnimationsData Data used to easily view/group/setup multiple (DOTween) Animations by the inspector Inheritance Object SUAnimationsData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUAnimationsData Methods CacheComponents(GameObject) Cache components for all the animations Declaration public void CacheComponents(GameObject go) Parameters Type Name Description GameObject go GameObject where to cache the components from KillAll() Kill all the animations by their id Declaration public void KillAll() Play(GameObject) Play all the animations set up in the inspector Declaration public void Play(GameObject go) Parameters Type Name Description GameObject go GameObject that will play the animations"
  },
  "api/Surfer.SUAnimatorBehaviour.html": {
    "href": "api/Surfer.SUAnimatorBehaviour.html",
    "title": "Class SUAnimatorBehaviour | Copyright © 2021 ATStudio",
    "keywords": "Class SUAnimatorBehaviour Class to make a Surfer Action when entering or exiting an Animator State Inheritance Object SUAnimatorBehaviour Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUAnimatorBehaviour : StateMachineBehaviour Fields OnEnter Declaration public UnityEvent OnEnter Field Value Type Description UnityEvent OnExit Declaration public UnityEvent OnExit Field Value Type Description UnityEvent Methods OnStateEnter(Animator, AnimatorStateInfo, Int32) Declaration public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex OnStateExit(Animator, AnimatorStateInfo, Int32) Declaration public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex) Parameters Type Name Description Animator animator AnimatorStateInfo stateInfo Int32 layerIndex"
  },
  "api/Surfer.SUAnimatorBehaviour.SUAnimatorEvent_ID.html": {
    "href": "api/Surfer.SUAnimatorBehaviour.SUAnimatorEvent_ID.html",
    "title": "Enum SUAnimatorBehaviour.SUAnimatorEvent_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUAnimatorBehaviour.SUAnimatorEvent_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUAnimatorEvent_ID Fields Name Description Enter Exit"
  },
  "api/Surfer.SUBaseUIEvent.html": {
    "href": "api/Surfer.SUBaseUIEvent.html",
    "title": "Class SUBaseUIEvent | Copyright © 2021 ATStudio",
    "keywords": "Class SUBaseUIEvent Class to handle base UI events (like click,enter,exit,select,deselect) and make an action or play an animation after they have been triggered Inheritance Object SUBaseUIEvent Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUBaseUIEvent : MonoBehaviour, IPointerClickHandler, IPointerDownHandler, IPointerUpHandler, ISelectHandler, IDeselectHandler, IPointerEnterHandler, IPointerExitHandler Methods Awake() Declaration protected virtual void Awake() OnDeselect(BaseEventData) Declaration public virtual void OnDeselect(BaseEventData eventData) Parameters Type Name Description BaseEventData eventData OnDestroy() Declaration protected virtual void OnDestroy() OnPointerClick(PointerEventData) Declaration public virtual void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerDown(PointerEventData) Declaration public virtual void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerEnter(PointerEventData) Declaration public virtual void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public virtual void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerUp(PointerEventData) Declaration public virtual void OnPointerUp(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnSelect(BaseEventData) Declaration public virtual void OnSelect(BaseEventData eventData) Parameters Type Name Description BaseEventData eventData PlayAll() Play all the animations and actions setup Declaration public virtual void PlayAll()"
  },
  "api/Surfer.SUBaseUIEvent.SUBaseEvent_ID.html": {
    "href": "api/Surfer.SUBaseUIEvent.SUBaseEvent_ID.html",
    "title": "Enum SUBaseUIEvent.SUBaseEvent_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUBaseUIEvent.SUBaseEvent_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUBaseEvent_ID Fields Name Description OnClick OnDeselect OnDoubleClick OnEnter OnExit OnMouseRightClick OnPointerDown OnPointerUp OnSelect"
  },
  "api/Surfer.SUBehaviourData.html": {
    "href": "api/Surfer.SUBehaviourData.html",
    "title": "Class SUBehaviourData | Copyright © 2021 ATStudio",
    "keywords": "Class SUBehaviourData Inheritance Object SUBehaviourData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUBehaviourData Fields OnFail Declaration public UnityEvent OnFail Field Value Type Description UnityEvent OnSuccess Declaration public UnityEvent OnSuccess Field Value Type Description UnityEvent Properties Event Declaration public SUEvent Event { get; } Property Value Type Description SUEvent EventType Declaration public SUEvent.Type_ID EventType { get; } Property Value Type Description SUEvent.Type_ID Methods CacheAnimations(GameObject) Declaration public void CacheAnimations(GameObject go) Parameters Type Name Description GameObject go KillAnimations() Declaration public void KillAnimations() Run(GameObject) Declaration public void Run(GameObject go) Parameters Type Name Description GameObject go Run(GameObject, String) Declaration public void Run(GameObject go, string eventName) Parameters Type Name Description GameObject go String eventName"
  },
  "api/Surfer.SUBehavioursData.html": {
    "href": "api/Surfer.SUBehavioursData.html",
    "title": "Class SUBehavioursData | Copyright © 2021 ATStudio",
    "keywords": "Class SUBehavioursData Inheritance Object SUBehavioursData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUBehavioursData Properties Behaviours Declaration public List<SUBehaviourData> Behaviours { get; } Property Value Type Description List < SUBehaviourData > Methods Run(GameObject) Declaration public void Run(GameObject go) Parameters Type Name Description GameObject go RunWithParams(GameObject, String) Declaration public void RunWithParams(GameObject go, string stringVal) Parameters Type Name Description GameObject go String stringVal RunWithParamsCustomEvent(GameObject, String) Declaration public void RunWithParamsCustomEvent(GameObject go, string stringVal) Parameters Type Name Description GameObject go String stringVal RunWithParamsScene(GameObject, String) Declaration public void RunWithParamsScene(GameObject go, string stringVal) Parameters Type Name Description GameObject go String stringVal RunWithParamsState(GameObject, SUStateEventData, Boolean) Declaration public void RunWithParamsState(GameObject go, SUStateEventData eventData, bool onlyVersionCheck = false) Parameters Type Name Description GameObject go SUStateEventData eventData Boolean onlyVersionCheck"
  },
  "api/Surfer.SUCamData.html": {
    "href": "api/Surfer.SUCamData.html",
    "title": "Class SUCamData | Copyright © 2021 ATStudio",
    "keywords": "Class SUCamData Inheritance Object SUCamData SUHealthBarCamData SUIndicatorCamData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class SUCamData Properties Cam Declaration public Camera Cam { get; set; } Property Value Type Description Camera CamCanvas Declaration public Canvas CamCanvas { get; set; } Property Value Type Description Canvas CamCanvasRect Declaration public RectTransform CamCanvasRect { get; set; } Property Value Type Description RectTransform"
  },
  "api/Surfer.SUCamItemsManager.html": {
    "href": "api/Surfer.SUCamItemsManager.html",
    "title": "Class SUCamItemsManager | Copyright © 2021 ATStudio",
    "keywords": "Class SUCamItemsManager Inheritance Object SUCamItemsManager SUHealthBarsManager SUIndicatorsManager Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public abstract class SUCamItemsManager : MonoBehaviour Fields _mainParent Declaration protected GameObject _mainParent Field Value Type Description GameObject _mustClean Declaration protected bool _mustClean Field Value Type Description Boolean _rendersList Declaration protected List<RenderMode> _rendersList Field Value Type Description List < RenderMode > _suPersistentCanvas Declaration protected GameObject _suPersistentCanvas Field Value Type Description GameObject _targetPos Declaration protected Vector2 _targetPos Field Value Type Description Vector2 Properties MainParentName Declaration protected virtual string MainParentName { get; set; } Property Value Type Description String SortOrder Declaration protected virtual int SortOrder { get; set; } Property Value Type Description Int32 Methods CreateCameKey(Camera, RenderMode) Declaration protected DictCamKey CreateCameKey(Camera cam, RenderMode renderMode) Parameters Type Name Description Camera cam RenderMode renderMode Returns Type Description DictCamKey GetPersistentCanvas() Declaration protected void GetPersistentCanvas() MainLoop() Declaration public virtual void MainLoop() StopFollow(Camera) Declaration public virtual void StopFollow(Camera cam) Parameters Type Name Description Camera cam StopFollow(String) Declaration public virtual void StopFollow(string customTag) Parameters Type Name Description String customTag"
  },
  "api/Surfer.SUCGroupData.html": {
    "href": "api/Surfer.SUCGroupData.html",
    "title": "Class SUCGroupData | Copyright © 2021 ATStudio",
    "keywords": "Class SUCGroupData Data to setup a Canvas Group animation by the inspector Inheritance Object SUAnimationData SUCGroupData Inherited Members SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.IsAvailable SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class SUCGroupData : SUAnimationData Methods OnCache(GameObject) Declaration protected override void OnCache(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnCache(GameObject) OnPlay(GameObject) Declaration protected override void OnPlay(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnPlay(GameObject)"
  },
  "api/Surfer.SUCharTweenData.html": {
    "href": "api/Surfer.SUCharTweenData.html",
    "title": "Class SUCharTweenData | Copyright © 2021 ATStudio",
    "keywords": "Class SUCharTweenData Data to setup a Shake animation by the inspector Inheritance Object SUAnimationData SUCharTweenData Inherited Members SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class SUCharTweenData : SUAnimationData Properties IsAvailable Declaration protected override bool IsAvailable { get; } Property Value Type Description Boolean Overrides SUAnimationData.IsAvailable Methods OnCache(GameObject) Declaration protected override void OnCache(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnCache(GameObject) OnPlay(GameObject) Declaration protected override void OnPlay(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnPlay(GameObject)"
  },
  "api/Surfer.SUCharTweenData.Mode_ID.html": {
    "href": "api/Surfer.SUCharTweenData.Mode_ID.html",
    "title": "Enum SUCharTweenData.Mode_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUCharTweenData.Mode_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum Mode_ID Fields Name Description JumpIn JumpInFull JumpOut JumpOutFull LeftToRight Text characters will appear from left and disappear to right, one by one. None RightToLeft Text characters will appear from right and disappear to left, one by one. Shaking Shaking characters effect. Duration will determine for how much time the should shake SplitIn The text will be split in half and the left side will appear from left and the right one from right SplitOut The text will be split in half and the left side will go left and the right one will go right Wave Simple wave effect. Duration will determine the time required for the characters to make a single \"move\" up and down. WaveLoop As Wave, but looped."
  },
  "api/Surfer.SUCharTweenDataDrawer.html": {
    "href": "api/Surfer.SUCharTweenDataDrawer.html",
    "title": "Class SUCharTweenDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUCharTweenDataDrawer Inheritance Object SUAnimationDataDrawer SUCharTweenDataDrawer Inherited Members SUAnimationDataDrawer._startMode SUAnimationDataDrawer._endMode SUAnimationDataDrawer._ease SUAnimationDataDrawer._looped SUAnimationDataDrawer._obj SUAnimationDataDrawer.OnGUI(Rect, SerializedProperty, GUIContent) SUAnimationDataDrawer.GetHeightCommonFields() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUCharTweenDataDrawer : SUAnimationDataDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single Overrides SUAnimationDataDrawer.GetPropertyHeight(SerializedProperty, GUIContent) IsNone() Declaration protected override bool IsNone() Returns Type Description Boolean Overrides SUAnimationDataDrawer.IsNone() OnCanBeLooped() Declaration protected override bool OnCanBeLooped() Returns Type Description Boolean Overrides SUAnimationDataDrawer.OnCanBeLooped() OnCanUseDefaultModes(ref Rect, SerializedProperty) Declaration protected override bool OnCanUseDefaultModes(ref Rect position, SerializedProperty property) Parameters Type Name Description Rect position SerializedProperty property Returns Type Description Boolean Overrides SUAnimationDataDrawer.OnCanUseDefaultModes(ref Rect, SerializedProperty)"
  },
  "api/Surfer.SUColorData.html": {
    "href": "api/Surfer.SUColorData.html",
    "title": "Class SUColorData | Copyright © 2021 ATStudio",
    "keywords": "Class SUColorData Data to setup a Color animation by the inspector Inheritance Object SUAnimationData SUColorData Inherited Members SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.IsAvailable SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class SUColorData : SUAnimationData Methods OnCache(GameObject) Declaration protected override void OnCache(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnCache(GameObject) OnPlay(GameObject) Declaration protected override void OnPlay(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnPlay(GameObject)"
  },
  "api/Surfer.SUConditionData.html": {
    "href": "api/Surfer.SUConditionData.html",
    "title": "Class SUConditionData | Copyright © 2021 ATStudio",
    "keywords": "Class SUConditionData Data to setup condition in the inspector and to check if it's satisfied Inheritance Object SUConditionData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUConditionData Constructors SUConditionData(String, String) Declaration public SUConditionData(string key, string name) Parameters Type Name Description String key String name Properties Key Declaration public string Key { get; } Property Value Type Description String Name Declaration public string Name { get; } Property Value Type Description String Methods IsSatisfied(GameObject) Declaration public bool IsSatisfied(GameObject caller) Parameters Type Name Description GameObject caller Returns Type Description Boolean"
  },
  "api/Surfer.SUConditionDataDrawer.html": {
    "href": "api/Surfer.SUConditionDataDrawer.html",
    "title": "Class SUConditionDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUConditionDataDrawer Inheritance Object SUConditionDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUConditionDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUConditionsData.html": {
    "href": "api/Surfer.SUConditionsData.html",
    "title": "Class SUConditionsData | Copyright © 2021 ATStudio",
    "keywords": "Class SUConditionsData Data to better view/group/setup multiple conditions in the inspector and to check if they're satisfied Inheritance Object SUConditionsData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUConditionsData Methods AreAllSatisfied(GameObject) Declaration public bool AreAllSatisfied(GameObject go) Parameters Type Name Description GameObject go Returns Type Description Boolean"
  },
  "api/Surfer.SUConditionsDataDrawer.html": {
    "href": "api/Surfer.SUConditionsDataDrawer.html",
    "title": "Class SUConditionsDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUConditionsDataDrawer Inheritance Object SUConditionsDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUConditionsDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUCustomEventData.html": {
    "href": "api/Surfer.SUCustomEventData.html",
    "title": "Class SUCustomEventData | Copyright © 2021 ATStudio",
    "keywords": "Class SUCustomEventData Class to choose a custom event in the inspector Inheritance Object SUCustomEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUCustomEventData Constructors SUCustomEventData(String, String) Declaration public SUCustomEventData(string name, string guid) Parameters Type Name Description String name String guid Properties GUID Declaration public string GUID { get; } Property Value Type Description String Name Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/Surfer.SUCustomEventDataDrawer.html": {
    "href": "api/Surfer.SUCustomEventDataDrawer.html",
    "title": "Class SUCustomEventDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUCustomEventDataDrawer Inheritance Object SUCustomEventDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUCustomEventDataDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUCustomEventEventData.html": {
    "href": "api/Surfer.SUCustomEventEventData.html",
    "title": "Class SUCustomEventEventData | Copyright © 2021 ATStudio",
    "keywords": "Class SUCustomEventEventData Event data for Custom Event Trigger Inheritance Object SUCustomEventEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUCustomEventEventData Constructors SUCustomEventEventData(String, Object[]) Declaration public SUCustomEventEventData(string eventName, object[] customData) Parameters Type Name Description String eventName Object [] customData Properties CustomData Declaration public object[] CustomData { get; } Property Value Type Description Object [] Name Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/Surfer.SUCustomEventsData.html": {
    "href": "api/Surfer.SUCustomEventsData.html",
    "title": "Class SUCustomEventsData | Copyright © 2021 ATStudio",
    "keywords": "Class SUCustomEventsData Class to choose a custom event in the inspector Inheritance Object SUCustomEventsData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUCustomEventsData Properties AllNames Declaration public List<string> AllNames { get; } Property Value Type Description List < String > AllNamesArray Declaration public string[] AllNamesArray { get; } Property Value Type Description String [] List Declaration public List<SUCustomEventData> List { get; } Property Value Type Description List < SUCustomEventData >"
  },
  "api/Surfer.SUCustomEventsDataDrawer.html": {
    "href": "api/Surfer.SUCustomEventsDataDrawer.html",
    "title": "Class SUCustomEventsDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUCustomEventsDataDrawer Inheritance Object SUCustomEventsDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUCustomEventsDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUDropdownBehaviour.html": {
    "href": "api/Surfer.SUDropdownBehaviour.html",
    "title": "Class SUDropdownBehaviour | Copyright © 2021 ATStudio",
    "keywords": "Class SUDropdownBehaviour Inheritance Object SUDropdownBehaviour Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUDropdownBehaviour Constructors SUDropdownBehaviour(GameObject, SUElement) Declaration public SUDropdownBehaviour(GameObject go, SUElement element) Parameters Type Name Description GameObject go SUElement element Methods HandleDestroy() Declaration public void HandleDestroy()"
  },
  "api/Surfer.SUElement.DictEvents.html": {
    "href": "api/Surfer.SUElement.DictEvents.html",
    "title": "Class SUElement.DictEvents | Copyright © 2021 ATStudio",
    "keywords": "Class SUElement.DictEvents Inheritance Object Dictionary < SUEvent.Type_ID , SUBehavioursData > SerializableDictionary < SUEvent.Type_ID , SUBehavioursData > SUElement.DictEvents Inherited Members SerializableDictionary<SUEvent.Type_ID, SUBehavioursData>.OnBeforeSerialize() SerializableDictionary<SUEvent.Type_ID, SUBehavioursData>.OnAfterDeserialize() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class DictEvents : SerializableDictionary<SUEvent.Type_ID, SUBehavioursData>, IDictionary<SUEvent.Type_ID, SUBehavioursData>, ICollection<KeyValuePair<SUEvent.Type_ID, SUBehavioursData>>, IDictionary, ICollection, IReadOnlyDictionary<SUEvent.Type_ID, SUBehavioursData>, IReadOnlyCollection<KeyValuePair<SUEvent.Type_ID, SUBehavioursData>>, IEnumerable<KeyValuePair<SUEvent.Type_ID, SUBehavioursData>>, IEnumerable, ISerializable, IDeserializationCallback, ISerializationCallbackReceiver"
  },
  "api/Surfer.SUElement.html": {
    "href": "api/Surfer.SUElement.html",
    "title": "Class SUElement | Copyright © 2021 ATStudio",
    "keywords": "Class SUElement Inheritance Object SUElement Implements ISUStateEnterHandler ISUStateExitHandler ISUSceneActivatedHandler ISUSceneLoadedHandler ISUSceneUnloadedHandler ISUSceneUnloadingHandler ISUSceneDeactivatedHandler ISUSceneLoadingHandler IResetLastStateSelectionHandler ISUCustomEventHandler ISUIndicatorDistanceHandler ISUIndicatorStateHandler ISUIndicatorVisualHandler ISUHealthBarVisualHandler ISUHealthBarHPStateHandler ISUHealthBarStateHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUElement : MonoBehaviour, ISUStateEnterHandler, ISUStateExitHandler, ISUSceneActivatedHandler, ISUSceneLoadedHandler, ISUSceneUnloadedHandler, ISUSceneUnloadingHandler, ISUSceneDeactivatedHandler, ISUSceneLoadingHandler, IPointerClickHandler, IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, ISelectHandler, IDeselectHandler, ISubmitHandler, IResetLastStateSelectionHandler, ISUCustomEventHandler, IDragHandler, IBeginDragHandler, IEndDragHandler, ISUIndicatorDistanceHandler, ISUIndicatorStateHandler, ISUIndicatorVisualHandler, ISUHealthBarVisualHandler, ISUHealthBarHPStateHandler, ISUHealthBarStateHandler, ISUChildrenMonitorHandler, ISUOrientationHandler Properties Behaviours Declaration public SUBehavioursData Behaviours { get; } Property Value Type Description SUBehavioursData ElementData Declaration public SUElementData ElementData { get; } Property Value Type Description SUElementData Events Declaration public SUElement.DictEvents Events { get; } Property Value Type Description SUElement.DictEvents IsState Declaration public bool IsState { get; } Property Value Type Description Boolean Methods OnBeginDrag(PointerEventData) Declaration public void OnBeginDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnChildrenChanged(SUChildrenMonitorData) Declaration public void OnChildrenChanged(SUChildrenMonitorData data) Parameters Type Name Description SUChildrenMonitorData data OnDeselect(BaseEventData) Declaration public void OnDeselect(BaseEventData eventData) Parameters Type Name Description BaseEventData eventData OnDrag(PointerEventData) Declaration public void OnDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnEndDrag(PointerEventData) Declaration public void OnEndDrag(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnHealthBarHPStateUpdate(SUHealthBarEventData) Declaration public void OnHealthBarHPStateUpdate(SUHealthBarEventData eventData) Parameters Type Name Description SUHealthBarEventData eventData OnHealthBarStateUpdate(SUHealthBarEventData) Declaration public void OnHealthBarStateUpdate(SUHealthBarEventData eventData) Parameters Type Name Description SUHealthBarEventData eventData OnHealthBarVisualSetUp() Declaration public SUHealthBarVisualData OnHealthBarVisualSetUp() Returns Type Description SUHealthBarVisualData OnIndicatorDistanceUpdate(SUIndicatorEventData) Declaration public void OnIndicatorDistanceUpdate(SUIndicatorEventData eventData) Parameters Type Name Description SUIndicatorEventData eventData OnIndicatorStateUpdate(SUIndicatorEventData) Declaration public void OnIndicatorStateUpdate(SUIndicatorEventData eventData) Parameters Type Name Description SUIndicatorEventData eventData OnIndicatorVisualSetUp() Declaration public SUIndicatorVisualData OnIndicatorVisualSetUp() Returns Type Description SUIndicatorVisualData OnOrientationChanged(SUOrientationInfo) Declaration public void OnOrientationChanged(SUOrientationInfo info) Parameters Type Name Description SUOrientationInfo info OnPointerClick(PointerEventData) Declaration public void OnPointerClick(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerDown(PointerEventData) Declaration public void OnPointerDown(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerEnter(PointerEventData) Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerExit(PointerEventData) Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnPointerUp(PointerEventData) Declaration public void OnPointerUp(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData OnResetLastStateSelection() Declaration public void OnResetLastStateSelection() OnSelect(BaseEventData) Declaration public void OnSelect(BaseEventData eventData) Parameters Type Name Description BaseEventData eventData OnSubmit(BaseEventData) Declaration public void OnSubmit(BaseEventData eventData) Parameters Type Name Description BaseEventData eventData OnSUCustomEvent(SUCustomEventEventData) Declaration public void OnSUCustomEvent(SUCustomEventEventData eventInfo) Parameters Type Name Description SUCustomEventEventData eventInfo OnSUSceneActivated(SUSceneActivatedEventData) Declaration public void OnSUSceneActivated(SUSceneActivatedEventData eventInfo) Parameters Type Name Description SUSceneActivatedEventData eventInfo OnSUSceneDeactivated(SUSceneDeactivatedEventData) Declaration public void OnSUSceneDeactivated(SUSceneDeactivatedEventData eventInfo) Parameters Type Name Description SUSceneDeactivatedEventData eventInfo OnSUSceneLoaded(SUSceneLoadedEventData) Declaration public void OnSUSceneLoaded(SUSceneLoadedEventData eventInfo) Parameters Type Name Description SUSceneLoadedEventData eventInfo OnSUSceneLoading(SUSceneLoadingEventData) Declaration public void OnSUSceneLoading(SUSceneLoadingEventData eventInfo) Parameters Type Name Description SUSceneLoadingEventData eventInfo OnSUSceneUnloaded(SUSceneUnloadedEventData) Declaration public void OnSUSceneUnloaded(SUSceneUnloadedEventData eventInfo) Parameters Type Name Description SUSceneUnloadedEventData eventInfo OnSUSceneUnloading(SUSceneUnloadingEventData) Declaration public void OnSUSceneUnloading(SUSceneUnloadingEventData eventInfo) Parameters Type Name Description SUSceneUnloadingEventData eventInfo OnSUStateEnter(SUStateEventData) Declaration public void OnSUStateEnter(SUStateEventData eventInfo) Parameters Type Name Description SUStateEventData eventInfo OnSUStateExit(SUStateEventData) Declaration public void OnSUStateExit(SUStateEventData eventInfo) Parameters Type Name Description SUStateEventData eventInfo RunCustomEventBehaviour(String) Declaration public void RunCustomEventBehaviour(string eventName) Parameters Type Name Description String eventName RunEventBehaviour(SUEvent.Type_ID) Declaration public void RunEventBehaviour(SUEvent.Type_ID eventID) Parameters Type Name Description SUEvent.Type_ID eventID RunEventBehaviourParams(SUEvent.Type_ID, String) Declaration public void RunEventBehaviourParams(SUEvent.Type_ID eventID, string stringVal) Parameters Type Name Description SUEvent.Type_ID eventID String stringVal Implements ISUStateEnterHandler ISUStateExitHandler ISUSceneActivatedHandler ISUSceneLoadedHandler ISUSceneUnloadedHandler ISUSceneUnloadingHandler ISUSceneDeactivatedHandler ISUSceneLoadingHandler IResetLastStateSelectionHandler ISUCustomEventHandler ISUIndicatorDistanceHandler ISUIndicatorStateHandler ISUIndicatorVisualHandler ISUHealthBarVisualHandler ISUHealthBarHPStateHandler ISUHealthBarStateHandler"
  },
  "api/Surfer.SUElementData.html": {
    "href": "api/Surfer.SUElementData.html",
    "title": "Class SUElementData | Copyright © 2021 ATStudio",
    "keywords": "Class SUElementData Inheritance Object SUElementData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUElementData Fields IsStackDelayRunning Declaration public bool IsStackDelayRunning Field Value Type Description Boolean Properties AllUIStates List that contains all StatesUI loaded in the scene/game Declaration public static HashSet<SUElementData> AllUIStates { get; } Property Value Type Description HashSet < SUElementData > ChildUIStates Declaration public List<SUStateInfo> ChildUIStates { get; } Property Value Type Description List < SUStateInfo > CloseDelay Declaration public float CloseDelay { get; } Property Value Type Description Single GroupStates Declaration public SUStatesData GroupStates { get; } Property Value Type Description SUStatesData HbVisualData Declaration public SUHealthBarVisualData HbVisualData { get; } Property Value Type Description SUHealthBarVisualData IndVisualData Declaration public SUIndicatorVisualData IndVisualData { get; } Property Value Type Description SUIndicatorVisualData IntVal Declaration public int IntVal { get; } Property Value Type Description Int32 IsDrag Declaration public bool IsDrag { get; } Property Value Type Description Boolean IsGroup Declaration public bool IsGroup { get; } Property Value Type Description Boolean IsGroupButtons Declaration public bool IsGroupButtons { get; } Property Value Type Description Boolean IsGroupStates Declaration public bool IsGroupStates { get; } Property Value Type Description Boolean IsLoading Declaration public bool IsLoading { get; } Property Value Type Description Boolean IsStackable Declaration public bool IsStackable { get; } Property Value Type Description Boolean IsState Declaration public bool IsState { get; } Property Value Type Description Boolean IsTooltip Declaration public bool IsTooltip { get; } Property Value Type Description Boolean ParentUIStates Declaration public List<SUStateInfo> ParentUIStates { get; } Property Value Type Description List < SUStateInfo > PlayerID Declaration public int PlayerID { get; } Property Value Type Description Int32 StackDelay Declaration public float StackDelay { get; } Property Value Type Description Single StateData Declaration public SUStateData StateData { get; } Property Value Type Description SUStateData StatesToClose Declaration public List<SUStateInfo> StatesToClose { get; } Property Value Type Description List < SUStateInfo > StringVal Declaration public string StringVal { get; } Property Value Type Description String StringVal2 Declaration public string StringVal2 { get; } Property Value Type Description String Type Declaration public SUElementData.Type_ID Type { get; } Property Value Type Description SUElementData.Type_ID Vector Declaration public Vector2 Vector { get; } Property Value Type Description Vector2 Methods HandleOnDestroy() Declaration public void HandleOnDestroy() SetUp(GameObject) Declaration public void SetUp(GameObject go) Parameters Type Name Description GameObject go"
  },
  "api/Surfer.SUElementData.StateCloseMode_ID.html": {
    "href": "api/Surfer.SUElementData.StateCloseMode_ID.html",
    "title": "Enum SUElementData.StateCloseMode_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUElementData.StateCloseMode_ID When a state has just been opened, should automatically close other states? Example : a TabMenu panel should automatically close sibling states with the mode set to Siblings Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum StateCloseMode_ID Fields Name Description CustomList Myself None Siblings It will close all the sibling states SiblingsAndCustomList"
  },
  "api/Surfer.SUElementData.Type_ID.html": {
    "href": "api/Surfer.SUElementData.Type_ID.html",
    "title": "Enum SUElementData.Type_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUElementData.Type_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum Type_ID Fields Name Description BuildVersion_Text If the object is a TextMeshPro element, it will show the app/game version and build number DragDown_State State element that behaves like a draggable Menu can be dragged to the bottom DragLeft_State State element that behaves like a draggable Menu can be dragged to the left DragRight_State State element that behaves like a draggable Menu can be dragged to the right DragUp_State State element that behaves like a draggable Menu can be dragged to the top GroupButtons Some children will become buttons that will open specific states GroupStates_InOut Some children will become States and will move in on enter and move out on exit GroupStates_OnOff Some children will become States and will activate on enter and deactivate on exit GroupStates_OnOffAndInOut Some children will become States and will move in and activate on enter and move out and deactivate on exit HealthBar HealthBar-like element Indicator On/Off screen indicator-like element Loading_Image If the object is an Image element, it will \"fill\" itself with the progress of whatever scene loading Loading_Text If the object is a TextMeshPro element, it will show the progress of whatever scene loading Normal Generic type of element Selection_Indicator The element will positionate and scale itself to match the current selected UI object position and scale, in order to \"indicate\" it Slider_OverallVolume If the object is a Slider element, it will control the overall game audio volume State State element type, like a menu, popup, notification or whatever kind of generic panel Tooltip_State State element that behaves like a tooltip shown next to the mouse cursor"
  },
  "api/Surfer.SUElementDataDrawer.html": {
    "href": "api/Surfer.SUElementDataDrawer.html",
    "title": "Class SUElementDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUElementDataDrawer Inheritance Object SUElementDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUElementDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUElementEditor.html": {
    "href": "api/Surfer.SUElementEditor.html",
    "title": "Class SUElementEditor | Copyright © 2021 ATStudio",
    "keywords": "Class SUElementEditor Inheritance Object SUElementEditor Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUElementEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Surfer.SUEvent.html": {
    "href": "api/Surfer.SUEvent.html",
    "title": "Class SUEvent | Copyright © 2021 ATStudio",
    "keywords": "Class SUEvent Inheritance Object SUEvent Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUEvent Properties CEventsData Declaration public SUCustomEventsData CEventsData { get; } Property Value Type Description SUCustomEventsData FloatVal Declaration public float FloatVal { get; } Property Value Type Description Single IntVal Declaration public int IntVal { get; } Property Value Type Description Int32 IntVal2 Declaration public int IntVal2 { get; } Property Value Type Description Int32 KeyCodeVal Declaration public KeyCode KeyCodeVal { get; } Property Value Type Description KeyCode ScenesData Declaration public SUScenesData ScenesData { get; } Property Value Type Description SUScenesData StatesData Declaration public SUStatesData StatesData { get; } Property Value Type Description SUStatesData StringVal Declaration public string StringVal { get; } Property Value Type Description String Type Declaration public SUEvent.Type_ID Type { get; } Property Value Type Description SUEvent.Type_ID"
  },
  "api/Surfer.SUEvent.Type_ID.html": {
    "href": "api/Surfer.SUEvent.Type_ID.html",
    "title": "Enum SUEvent.Type_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUEvent.Type_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum Type_ID Fields Name Description Dropdown_OnFirstOptionSelected Dropdown_OnOptionSelected HealthBar_OnEmptyHp HealthBar_OnFullHp HealthBar_OnLessThanHalfHp HealthBar_OnMoreThanHalfHp Indicator_OnClose Indicator_OnCloseAndCentered Indicator_OnFar Indicator_OnStandby Indicator_OnStartOffScreenMode Indicator_OnStartOnScreenMode Input_NewInput_OnAction Input_OldInput_OnButtonDown Input_OldInput_OnKeyDown Input_Rewired_OnAction InputField_OnEndEdit InputField_OnValueChanged MonoBehaviour_OnAwake MonoBehaviour_OnDisable MonoBehaviour_OnEnable MonoBehaviour_OnStart MyCustomEvent Orientation_ToLandscapeLeft Orientation_ToLandscapeRight Orientation_ToPortrait Orientation_ToPortraitUpsideDown Scene_Activated Scene_Deactivated Scene_Loaded Scene_Loading Scene_MySceneActivated Scene_MySceneDeactivated Scene_MySceneLoaded Scene_MySceneLoading Scene_MySceneUnloaded Scene_MySceneUnloading Scene_Unloaded Scene_Unloading ScrollRect_OnNotReachedAnySide ScrollRect_OnReachedBottom ScrollRect_OnReachedLeft ScrollRect_OnReachedRight ScrollRect_OnReachedTop Slider_OnGreaterThan Slider_OnLowerThan Slider_OnMax Slider_OnMin State_Enter State_Exit State_MyStateEnter State_MyStateExit Toggle_OnFalse Toggle_OnTrue Transform_OnChildAdded Transform_OnChildRemoved Transform_OnChildrenCountChanged Transform_OnParentChanged Transform_OnParentLost UIGeneric_OnBecomeLastStateSelection When a new state is opened, this event will be fired on the last selected object of the previous state. Useful to show graphically the ui history selection. UIGeneric_OnClick UIGeneric_OnDeselect UIGeneric_OnDoubleClick UIGeneric_OnEnter UIGeneric_OnExit UIGeneric_OnMouseRightClick UIGeneric_OnPointerDown UIGeneric_OnPointerUp UIGeneric_OnSelect UIGeneric_OnSubmit"
  },
  "api/Surfer.SUEventDrawer.html": {
    "href": "api/Surfer.SUEventDrawer.html",
    "title": "Class SUEventDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUEventDrawer Inheritance Object SUEventDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUEventDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUEventSystemManager.html": {
    "href": "api/Surfer.SUEventSystemManager.html",
    "title": "Class SUEventSystemManager | Copyright © 2021 ATStudio",
    "keywords": "Class SUEventSystemManager Inheritance Object SUEventSystemManager Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUEventSystemManager : MonoBehaviour Properties I Declaration public static SUEventSystemManager I { get; } Property Value Type Description SUEventSystemManager Methods CheckHistoryFocus(Int32, String) When a state is open, check and register history focus receiver Declaration public void CheckHistoryFocus(int playerID, string stateOpened) Parameters Type Name Description Int32 playerID String stateOpened FocusOnObject(GameObject) Make the EventSystem focus on a particular gameObject by making it selected Declaration public void FocusOnObject(GameObject obj) Parameters Type Name Description GameObject obj object to select/focus on FocusOnObject(GameObject, Int32) Make the EventSystem focus on a particular gameObject by making it selected Declaration public void FocusOnObject(GameObject obj, int playerID) Parameters Type Name Description GameObject obj object to select/focus on Int32 playerID FocusOnObjectOrLast(GameObject) If the state of the object has a \"last object selection\" the EventSystem will focus on that object, otherwise it will focus on the object chosen Declaration public void FocusOnObjectOrLast(GameObject obj) Parameters Type Name Description GameObject obj object to select/focus on GetAllEventSystems() Declaration public void GetAllEventSystems() GetEventSystem(Int32) Declaration public EventSystem GetEventSystem(int playerID) Parameters Type Name Description Int32 playerID Returns Type Description EventSystem IsHistoryReceiver(GameObject) Check if the object was the last state object and therefore it received the history event callback Declaration public bool IsHistoryReceiver(GameObject obj) Parameters Type Name Description GameObject obj Returns Type Description Boolean MainLoop() Declaration public void MainLoop() RegisterSelectionIndicator(SUElement) Register a SUElement as selection indicator for a Player's EventSystem Declaration public void RegisterSelectionIndicator(SUElement item) Parameters Type Name Description SUElement item ResetHistoryReceiver(Int32, String) Call OnDeselect on the object that was the last object of its state Declaration public void ResetHistoryReceiver(int playerID, string stateName) Parameters Type Name Description Int32 playerID String stateName ResetStateHistoryFocus(Int32, String) Reset the history of a state which contains the last object selected Declaration public void ResetStateHistoryFocus(int playerID, string stateName) Parameters Type Name Description Int32 playerID String stateName"
  },
  "api/Surfer.SUFastConditionData.html": {
    "href": "api/Surfer.SUFastConditionData.html",
    "title": "Class SUFastConditionData | Copyright © 2021 ATStudio",
    "keywords": "Class SUFastConditionData Inheritance Object SUFastConditionData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUFastConditionData Methods IsSatisfied(GameObject) Declaration public bool IsSatisfied(GameObject caller) Parameters Type Name Description GameObject caller Returns Type Description Boolean"
  },
  "api/Surfer.SUFastConditionData.Type_ID.html": {
    "href": "api/Surfer.SUFastConditionData.Type_ID.html",
    "title": "Enum SUFastConditionData.Type_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUFastConditionData.Type_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum Type_ID Fields Name Description Application_IsConsolePlatform Application_IsLanguage Application_IsMobileDevice Application_IsNotConsolePlatform Application_IsNotLanguage Application_IsNotMobileDevice Application_IsNotPlatform Application_IsPlatform CanvasGroup_IsAlpha CanvasGroup_IsAlphaGreaterThan CanvasGroup_IsAlphaLowerThan CanvasGroup_IsNotAlpha DateTime_IsChristmas DateTime_IsDay DateTime_IsHalloween DateTime_IsMonth DateTime_IsYear Dropdown_IsSelected GameObject_IsLayer GameObject_IsName GameObject_IsNotLayer GameObject_IsNotName GameObject_IsNotTag GameObject_IsTag InputField_IsEqual InputField_IsNotEqual InputField_IsNotNullOrEmpty InputField_IsNotValidEmailAddress InputField_IsNullOrEmpty InputField_IsValidEmailAddress None PlayerPrefs_HasKey PlayerPrefs_IsFloatEqualTo PlayerPrefs_IsFloatGreaterThan PlayerPrefs_IsFloatLowerThan PlayerPrefs_IsIntEqualTo PlayerPrefs_IsIntGreaterThan PlayerPrefs_IsIntLowerThan PlayerPrefs_IsStringEqualTo PlayerPrefs_StringContains Scene_IsLastClosed Slider_IsGreaterThan Slider_IsLowerThan Slider_IsMax Slider_IsMin State_IsMyStateOpen State_IsOpen Text_IsEqual Text_IsNotEqual Text_IsNotNullOrEmpty Text_IsNotValidEmailAddress Text_IsNullOrEmpty Text_IsValidEmailAddress Toggle_IsOff Toggle_IsOn"
  },
  "api/Surfer.SUFastConditionDataDrawer.html": {
    "href": "api/Surfer.SUFastConditionDataDrawer.html",
    "title": "Class SUFastConditionDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUFastConditionDataDrawer Inheritance Object SUFastConditionDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUFastConditionDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUFastConditionsData.html": {
    "href": "api/Surfer.SUFastConditionsData.html",
    "title": "Class SUFastConditionsData | Copyright © 2021 ATStudio",
    "keywords": "Class SUFastConditionsData Inheritance Object SUFastConditionsData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUFastConditionsData Methods AreAllSatisfied(GameObject) Declaration public bool AreAllSatisfied(GameObject go) Parameters Type Name Description GameObject go Returns Type Description Boolean"
  },
  "api/Surfer.SUFastConditionsDataDrawer.html": {
    "href": "api/Surfer.SUFastConditionsDataDrawer.html",
    "title": "Class SUFastConditionsDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUFastConditionsDataDrawer Inheritance Object SUFastConditionsDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUFastConditionsDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUFastReactionData.html": {
    "href": "api/Surfer.SUFastReactionData.html",
    "title": "Class SUFastReactionData | Copyright © 2021 ATStudio",
    "keywords": "Class SUFastReactionData Inheritance Object SUFastReactionData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUFastReactionData Methods Play(GameObject) Declaration public void Play(GameObject go) Parameters Type Name Description GameObject go"
  },
  "api/Surfer.SUFastReactionData.Type_ID.html": {
    "href": "api/Surfer.SUFastReactionData.Type_ID.html",
    "title": "Enum SUFastReactionData.Type_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUFastReactionData.Type_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum Type_ID Fields Name Description Animations_StopCanvasGroup Stop the Surfer Canvas Group animation (the one in the \"Animated!\" list) Animations_StopCharTweener Stop the Surfer CharTweener animation (the one in the \"Animated!\" list) Animations_StopColor Stop the Surfer Color animation (the one in the \"Animated!\" list) Animations_StopJump Stop the Surfer Jump animation (the one in the \"Animated!\" list) Animations_StopPosition Stop the Surfer Position/Anchor Position animation (the one in the \"Animated!\" list) Animations_StopPunch Stop the Surfer Punch animation (the one in the \"Animated!\" list) Animations_StopRectSize Stop the Surfer RectSize animation (the one in the \"Animated!\" list) Animations_StopRotation Stop the Surfer Rotation animation (the one in the \"Animated!\" list) Animations_StopScale Stop the Surfer Scale animation (the one in the \"Animated!\" list) Animations_StopShake Stop the Surfer Shake animation (the one in the \"Animated!\" list) Animator_PlayState Animator_Stop Application_OpenURL Audio_PlayClip Audio_PlaySource Canvas_BringToFront Canvas_SendToBack CanvasGroup_Alpha0 CanvasGroup_Alpha1 CanvasGroup_BlockRaycastOff CanvasGroup_BlockRaycastOn CanvasGroup_IgnoreParentGroupsOff CanvasGroup_IgnoreParentGroupsOn CanvasGroup_InteractableOff CanvasGroup_InteractableOn CanvasGroup_SetAlpha Cursor_SetDefaultIcon Cursor_SetIcon Set a new icon for the mouse cursor, with the default offset (top-left) Cursor_SetIconCentered Set a new icon for the mouse cursor, without offset (centered) Dropdown_SelectOption GameObject_Disable GameObject_Enable GameObject_SetLayer GameObject_SetName GameObject_SetTag Graphic_RaycastOff Graphic_RaycastOn Graphic_SetColor Image_SetSprite InputField_Empty InputField_SetText None PlayerPrefs_DeleteAll PlayerPrefs_DeleteKey PlayerPrefs_SetFloat PlayerPrefs_SetInt PlayerPrefs_SetString Selectable_InteractableOff Selectable_InteractableOn Slider_SetValue State_ResetMyStateHistoryFocus Reset the state's history selection/focus. The last selected object of the caller's state , will become null. Text_Empty Text_SetText Toggle_False Toggle_ToggleValue Toggle_True Transform_JustMoveIn The object will be locally moved at x=0, y=0, z=0 Transform_JustMoveOut The object will be locally moved out of camera at x=0, y= -10_000, z=0 Transform_SetAnchoredPosition Transform_SetLocalEuler Transform_SetLocalPosition Transform_SetLocalScale Transform_SetSizeDelta UIGenerics_DisableClickConstraint UIGenerics_EnableClickConstraint UIGenerics_FocusOnObject UIGenerics_FocusOnObjectOrStateLast Focus on/Select the last selected object of the caller state history. If null, focus on/select the specified object."
  },
  "api/Surfer.SUFastReactionDataDrawer.html": {
    "href": "api/Surfer.SUFastReactionDataDrawer.html",
    "title": "Class SUFastReactionDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUFastReactionDataDrawer Inheritance Object SUFastReactionDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUFastReactionDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUFastReactionsData.html": {
    "href": "api/Surfer.SUFastReactionsData.html",
    "title": "Class SUFastReactionsData | Copyright © 2021 ATStudio",
    "keywords": "Class SUFastReactionsData Inheritance Object SUFastReactionsData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUFastReactionsData Methods Play(GameObject) Declaration public void Play(GameObject go) Parameters Type Name Description GameObject go"
  },
  "api/Surfer.SUFastReactionsDataDrawer.html": {
    "href": "api/Surfer.SUFastReactionsDataDrawer.html",
    "title": "Class SUFastReactionsDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUFastReactionsDataDrawer Inheritance Object SUFastReactionsDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUFastReactionsDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUFieldValuesData.html": {
    "href": "api/Surfer.SUFieldValuesData.html",
    "title": "Class SUFieldValuesData | Copyright © 2021 ATStudio",
    "keywords": "Class SUFieldValuesData Inheritance Object SUFieldValuesData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUFieldValuesData Fields Bool_1 Declaration public bool Bool_1 Field Value Type Description Boolean Bool_2 Declaration public bool Bool_2 Field Value Type Description Boolean Bool_3 Declaration public bool Bool_3 Field Value Type Description Boolean Color_1 Declaration public Color Color_1 Field Value Type Description Color Color_2 Declaration public Color Color_2 Field Value Type Description Color Color_3 Declaration public Color Color_3 Field Value Type Description Color Enum_1 Declaration public int Enum_1 Field Value Type Description Int32 Enum_2 Declaration public int Enum_2 Field Value Type Description Int32 Enum_3 Declaration public int Enum_3 Field Value Type Description Int32 Float_1 Declaration public float Float_1 Field Value Type Description Single Float_2 Declaration public float Float_2 Field Value Type Description Single Float_3 Declaration public float Float_3 Field Value Type Description Single Int_1 Declaration public int Int_1 Field Value Type Description Int32 Int_2 Declaration public int Int_2 Field Value Type Description Int32 Int_3 Declaration public int Int_3 Field Value Type Description Int32 Object_1 Declaration public Object Object_1 Field Value Type Description Object Object_2 Declaration public Object Object_2 Field Value Type Description Object Object_3 Declaration public Object Object_3 Field Value Type Description Object Object_4 Declaration public Object Object_4 Field Value Type Description Object Object_5 Declaration public Object Object_5 Field Value Type Description Object String_1 Declaration public string String_1 Field Value Type Description String String_2 Declaration public string String_2 Field Value Type Description String String_3 Declaration public string String_3 Field Value Type Description String"
  },
  "api/Surfer.SUGroupsBehaviour.html": {
    "href": "api/Surfer.SUGroupsBehaviour.html",
    "title": "Class SUGroupsBehaviour | Copyright © 2021 ATStudio",
    "keywords": "Class SUGroupsBehaviour Inheritance Object SUGroupsBehaviour Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUGroupsBehaviour Constructors SUGroupsBehaviour(GameObject, SUElement) Declaration public SUGroupsBehaviour(GameObject go, SUElement element) Parameters Type Name Description GameObject go SUElement element Methods HandleDestroy() Declaration public void HandleDestroy() HandleEnterState(String) Declaration public void HandleEnterState(string stateName) Parameters Type Name Description String stateName HandleExitState(String) Declaration public void HandleExitState(string stateName) Parameters Type Name Description String stateName"
  },
  "api/Surfer.SUGroupStateUI.html": {
    "href": "api/Surfer.SUGroupStateUI.html",
    "title": "Class SUGroupStateUI | Copyright © 2021 ATStudio",
    "keywords": "Class SUGroupStateUI Class to handle multiple (child) states by focus on the one just opened Inheritance Object SUGroupStateUI Implements ISUStateEnterHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUGroupStateUI : MonoBehaviour, ISUStateEnterHandler Methods Awake() Declaration protected virtual void Awake() OnDestroy() Declaration protected virtual void OnDestroy() OnSUStateEnter(SUStateEventData) Declaration public void OnSUStateEnter(SUStateEventData eventInfo) Parameters Type Name Description SUStateEventData eventInfo Implements ISUStateEnterHandler"
  },
  "api/Surfer.SUGroupStateUIEditor.html": {
    "href": "api/Surfer.SUGroupStateUIEditor.html",
    "title": "Class SUGroupStateUIEditor | Copyright © 2021 ATStudio",
    "keywords": "Class SUGroupStateUIEditor Inheritance Object SUGroupStateUIEditor Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUGroupStateUIEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Surfer.SUHealthBarCamData.html": {
    "href": "api/Surfer.SUHealthBarCamData.html",
    "title": "Class SUHealthBarCamData | Copyright © 2021 ATStudio",
    "keywords": "Class SUHealthBarCamData Inheritance Object SUCamData SUHealthBarCamData Inherited Members SUCamData.Cam SUCamData.CamCanvas SUCamData.CamCanvasRect Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUHealthBarCamData : SUCamData Properties AllHealthBars Declaration public List<SUHealthBarData> AllHealthBars { get; } Property Value Type Description List < SUHealthBarData >"
  },
  "api/Surfer.SUHealthBarData.html": {
    "href": "api/Surfer.SUHealthBarData.html",
    "title": "Class SUHealthBarData | Copyright © 2021 ATStudio",
    "keywords": "Class SUHealthBarData Inheritance Object SUItemLinkData SUHealthBarData Inherited Members SUItemLinkData._customTag SUItemLinkData.CustomTag SUItemLinkData._prefab SUItemLinkData.Prefab SUItemLinkData._cam SUItemLinkData.Cam SUItemLinkData._renderMode SUItemLinkData.RenderMode SUItemLinkData._onScreenOffset SUItemLinkData.OnScreenOffset SUItemLinkData.RectT SUItemLinkData.Target Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUHealthBarData : SUItemLinkData Constructors SUHealthBarData() Declaration public SUHealthBarData() SUHealthBarData(GameObject, Camera, RenderMode, String, Vector2) Declaration public SUHealthBarData(GameObject prefab, Camera cam, RenderMode renderMode = null, string customTag = \"\", Vector2 onScreenOffset = null) Parameters Type Name Description GameObject prefab Camera cam RenderMode renderMode String customTag Vector2 onScreenOffset Properties HPState Declaration public SUHealthBarHPState_ID HPState { get; set; } Property Value Type Description SUHealthBarHPState_ID State Declaration public SUHealthBarState_ID State { get; set; } Property Value Type Description SUHealthBarState_ID VisualData Declaration public SUHealthBarVisualData VisualData { get; set; } Property Value Type Description SUHealthBarVisualData"
  },
  "api/Surfer.SUHealthBarDataExtensions.html": {
    "href": "api/Surfer.SUHealthBarDataExtensions.html",
    "title": "Class SUHealthBarDataExtensions | Copyright © 2021 ATStudio",
    "keywords": "Class SUHealthBarDataExtensions Inheritance Object SUHealthBarDataExtensions Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public static class SUHealthBarDataExtensions Methods CallHPStateUpdate(SUHealthBarData, SUHealthBarHPState_ID) Declaration public static void CallHPStateUpdate(this SUHealthBarData data, SUHealthBarHPState_ID newHPState) Parameters Type Name Description SUHealthBarData data SUHealthBarHPState_ID newHPState CallStateUpdate(SUHealthBarData, SUHealthBarState_ID) Declaration public static void CallStateUpdate(this SUHealthBarData data, SUHealthBarState_ID newState) Parameters Type Name Description SUHealthBarData data SUHealthBarState_ID newState"
  },
  "api/Surfer.SUHealthBarEventData.html": {
    "href": "api/Surfer.SUHealthBarEventData.html",
    "title": "Struct SUHealthBarEventData | Copyright © 2021 ATStudio",
    "keywords": "Struct SUHealthBarEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public struct SUHealthBarEventData Constructors SUHealthBarEventData(SUHealthBarData) Declaration public SUHealthBarEventData(SUHealthBarData data) Parameters Type Name Description SUHealthBarData data Fields Data Declaration public SUHealthBarData Data Field Value Type Description SUHealthBarData"
  },
  "api/Surfer.SUHealthBarHPState_ID.html": {
    "href": "api/Surfer.SUHealthBarHPState_ID.html",
    "title": "Enum SUHealthBarHPState_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUHealthBarHPState_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUHealthBarHPState_ID Fields Name Description Empty Full LessThanHalf MoreThanHalf None"
  },
  "api/Surfer.SUHealthBarLink.html": {
    "href": "api/Surfer.SUHealthBarLink.html",
    "title": "Class SUHealthBarLink | Copyright © 2021 ATStudio",
    "keywords": "Class SUHealthBarLink Inheritance Object SUHealthBarLink Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUHealthBarLink : MonoBehaviour Properties Data Declaration public SUHealthBarLinkData Data { get; } Property Value Type Description SUHealthBarLinkData"
  },
  "api/Surfer.SUHealthBarLinkData.html": {
    "href": "api/Surfer.SUHealthBarLinkData.html",
    "title": "Class SUHealthBarLinkData | Copyright © 2021 ATStudio",
    "keywords": "Class SUHealthBarLinkData Inheritance Object SULinkData SUHealthBarLinkData Inherited Members SULinkData._target SULinkData.Target Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUHealthBarLinkData : SULinkData Constructors SUHealthBarLinkData() Declaration public SUHealthBarLinkData() SUHealthBarLinkData(Transform, List<SUHealthBarData>, Single, Single, Single, Single, Single, Single, Single) Declaration public SUHealthBarLinkData(Transform target, List<SUHealthBarData> allData, float hp, float mp = 0F, float mpReload = 15F, float mpBarDuration = 0.15F, float damageBarDuration = 0.5F, float damageBarDelay = 0.25F, float hpFor10Lines = 100F) Parameters Type Name Description Transform target List < SUHealthBarData > allData Single hp Single mp Single mpReload Single mpBarDuration Single damageBarDuration Single damageBarDelay Single hpFor10Lines Properties AllData Declaration public List<SUHealthBarData> AllData { get; } Property Value Type Description List < SUHealthBarData > CurrentHp Declaration public float CurrentHp { get; set; } Property Value Type Description Single CurrentMp Declaration public float CurrentMp { get; } Property Value Type Description Single HasFullHp Declaration public bool HasFullHp { get; } Property Value Type Description Boolean HasFullMp Declaration public bool HasFullMp { get; } Property Value Type Description Boolean HasNoHp Declaration public bool HasNoHp { get; } Property Value Type Description Boolean HasNoMp Declaration public bool HasNoMp { get; } Property Value Type Description Boolean IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Methods AddHp(Single) Call this when you're adding an armor or item that gives extra hp to the player Declaration public void AddHp(float hp) Parameters Type Name Description Single hp Amount of Hp to add AddMp(Single) Declaration public void AddMp(float mp) Parameters Type Name Description Single mp DamageHp(Single) Apply damage to the health points Declaration public void DamageHp(float damage) Parameters Type Name Description Single damage HasEnoughMp(Single) Declaration public bool HasEnoughMp(float mpCost) Parameters Type Name Description Single mpCost Returns Type Description Boolean HealHp(Single) Call this when the player takes an health potion Declaration public void HealHp(float hp) Parameters Type Name Description Single hp Amount of Hp to heal RemoveHp(Single) Call this when you're removing an armor or item that gives extra hp to the player Declaration public void RemoveHp(float hp) Parameters Type Name Description Single hp Amount of Hp to remove RemoveMp(Single) Declaration public void RemoveMp(float mp) Parameters Type Name Description Single mp Restart() Call this when the character/enemy has respawned after a death. The bar will refill and reset its values to the starting ones Declaration public void Restart() StartFollow() Make all indicators of this linkData start following the target Declaration public void StartFollow() StopFollow() Stop and destroy all indicators of this linkData Declaration public void StopFollow() UseMP(Single) Declaration public void UseMP(float mp) Parameters Type Name Description Single mp"
  },
  "api/Surfer.SUHealthBarsManager.html": {
    "href": "api/Surfer.SUHealthBarsManager.html",
    "title": "Class SUHealthBarsManager | Copyright © 2021 ATStudio",
    "keywords": "Class SUHealthBarsManager Inheritance Object SUCamItemsManager SUHealthBarsManager Inherited Members SUCamItemsManager._suPersistentCanvas SUCamItemsManager._mainParent SUCamItemsManager._rendersList SUCamItemsManager._mustClean SUCamItemsManager._targetPos SUCamItemsManager.GetPersistentCanvas() SUCamItemsManager.CreateCameKey(Camera, RenderMode) Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUHealthBarsManager : SUCamItemsManager Properties I Declaration public static SUHealthBarsManager I { get; set; } Property Value Type Description SUHealthBarsManager MainParentName Declaration protected override string MainParentName { get; set; } Property Value Type Description String Overrides SUCamItemsManager.MainParentName SortOrder Declaration protected override int SortOrder { get; set; } Property Value Type Description Int32 Overrides SUCamItemsManager.SortOrder Methods GetAllByCustomTag(String, Action<SUHealthBarData>) Get all healthBars with a specific customTag Declaration public void GetAllByCustomTag(string customTag, Action<SUHealthBarData> OnHealthBar) Parameters Type Name Description String customTag Action < SUHealthBarData > OnHealthBar MainLoop() Declaration public override void MainLoop() Overrides SUCamItemsManager.MainLoop() StartFollow(SUHealthBarLinkData) Declaration public void StartFollow(SUHealthBarLinkData linkData) Parameters Type Name Description SUHealthBarLinkData linkData StartMPRoutine(SUHealthBarLinkData, IEnumerator) Declaration public void StartMPRoutine(SUHealthBarLinkData linkData, IEnumerator coroutine) Parameters Type Name Description SUHealthBarLinkData linkData IEnumerator coroutine StopFollow(Camera) Stop and Destroy healthBars of a specific Camera Declaration public override void StopFollow(Camera cam) Parameters Type Name Description Camera cam Overrides SUCamItemsManager.StopFollow(Camera) StopFollow(SUHealthBarData) Stop and Destroy a specific HealthBar Declaration public void StopFollow(SUHealthBarData data) Parameters Type Name Description SUHealthBarData data StopFollow(SUHealthBarLinkData) Stop and Destroy healthBars of a specific SUHealthBarLinkData Declaration public void StopFollow(SUHealthBarLinkData data) Parameters Type Name Description SUHealthBarLinkData data StopFollow(String) Stop and Destroy healthBars with a specific customTag Declaration public override void StopFollow(string customTag) Parameters Type Name Description String customTag Overrides SUCamItemsManager.StopFollow(String)"
  },
  "api/Surfer.SUHealthBarState_ID.html": {
    "href": "api/Surfer.SUHealthBarState_ID.html",
    "title": "Enum SUHealthBarState_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUHealthBarState_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUHealthBarState_ID Fields Name Description None Started Stopped"
  },
  "api/Surfer.SUHealthBarVisualData.html": {
    "href": "api/Surfer.SUHealthBarVisualData.html",
    "title": "Class SUHealthBarVisualData | Copyright © 2021 ATStudio",
    "keywords": "Class SUHealthBarVisualData Inheritance Object SUHealthBarVisualData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUHealthBarVisualData Properties HpBar Declaration public Image HpBar { get; } Property Value Type Description Image HpDamageBar Declaration public Image HpDamageBar { get; } Property Value Type Description Image LinesImage Declaration public RawImage LinesImage { get; } Property Value Type Description RawImage MpBar Declaration public Image MpBar { get; } Property Value Type Description Image"
  },
  "api/Surfer.SUHierarchyMonitor.html": {
    "href": "api/Surfer.SUHierarchyMonitor.html",
    "title": "Class SUHierarchyMonitor | Copyright © 2021 ATStudio",
    "keywords": "Class SUHierarchyMonitor Inheritance Object SUHierarchyMonitor Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public static class SUHierarchyMonitor"
  },
  "api/Surfer.SUIndicatorCamData.html": {
    "href": "api/Surfer.SUIndicatorCamData.html",
    "title": "Class SUIndicatorCamData | Copyright © 2021 ATStudio",
    "keywords": "Class SUIndicatorCamData Inheritance Object SUCamData SUIndicatorCamData Inherited Members SUCamData.Cam SUCamData.CamCanvas SUCamData.CamCanvasRect Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUIndicatorCamData : SUCamData Properties AllIndicators Declaration public List<SUIndicatorData> AllIndicators { get; } Property Value Type Description List < SUIndicatorData >"
  },
  "api/Surfer.SUIndicatorData.html": {
    "href": "api/Surfer.SUIndicatorData.html",
    "title": "Class SUIndicatorData | Copyright © 2021 ATStudio",
    "keywords": "Class SUIndicatorData Inheritance Object SUItemLinkData SUIndicatorData Inherited Members SUItemLinkData._customTag SUItemLinkData.CustomTag SUItemLinkData._prefab SUItemLinkData.Prefab SUItemLinkData._cam SUItemLinkData.Cam SUItemLinkData._renderMode SUItemLinkData.RenderMode SUItemLinkData._onScreenOffset SUItemLinkData.OnScreenOffset SUItemLinkData.RectT SUItemLinkData.Target Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUIndicatorData : SUItemLinkData Constructors SUIndicatorData() Declaration public SUIndicatorData() SUIndicatorData(GameObject, Camera, SUIndicatorData.Type_ID, RenderMode, String, Vector2, Transform, Single) Declaration public SUIndicatorData(GameObject prefab, Camera cam, SUIndicatorData.Type_ID type, RenderMode renderMode = null, string customTag = \"\", Vector2 onScreenOffset = null, Transform playerObj = null, float radius = 0F) Parameters Type Name Description GameObject prefab Camera cam SUIndicatorData.Type_ID type RenderMode renderMode String customTag Vector2 onScreenOffset Transform playerObj Single radius Properties DistanceState Declaration public SUIndicatorDistanceState_ID DistanceState { get; set; } Property Value Type Description SUIndicatorDistanceState_ID IsOffScreenType Declaration public bool IsOffScreenType { get; } Property Value Type Description Boolean IsOnScreenType Declaration public bool IsOnScreenType { get; } Property Value Type Description Boolean LinkID Declaration public int LinkID { get; set; } Property Value Type Description Int32 PlayerObj Declaration public Transform PlayerObj { get; } Property Value Type Description Transform Radius Declaration public float Radius { get; } Property Value Type Description Single State Declaration public SUIndicatorState_ID State { get; set; } Property Value Type Description SUIndicatorState_ID Type Declaration public SUIndicatorData.Type_ID Type { get; } Property Value Type Description SUIndicatorData.Type_ID VisualData Declaration public SUIndicatorVisualData VisualData { get; set; } Property Value Type Description SUIndicatorVisualData"
  },
  "api/Surfer.SUIndicatorData.Type_ID.html": {
    "href": "api/Surfer.SUIndicatorData.Type_ID.html",
    "title": "Enum SUIndicatorData.Type_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUIndicatorData.Type_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum Type_ID Fields Name Description Both OffScreen OnScreen"
  },
  "api/Surfer.SUIndicatorDataDrawer.html": {
    "href": "api/Surfer.SUIndicatorDataDrawer.html",
    "title": "Class SUIndicatorDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUIndicatorDataDrawer Inheritance Object SUIndicatorDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUIndicatorDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUIndicatorDistanceState_ID.html": {
    "href": "api/Surfer.SUIndicatorDistanceState_ID.html",
    "title": "Enum SUIndicatorDistanceState_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUIndicatorDistanceState_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUIndicatorDistanceState_ID Fields Name Description Close CloseAndCentered Far None"
  },
  "api/Surfer.SUIndicatorEventData.html": {
    "href": "api/Surfer.SUIndicatorEventData.html",
    "title": "Struct SUIndicatorEventData | Copyright © 2021 ATStudio",
    "keywords": "Struct SUIndicatorEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public struct SUIndicatorEventData Constructors SUIndicatorEventData(SUIndicatorData) Declaration public SUIndicatorEventData(SUIndicatorData data) Parameters Type Name Description SUIndicatorData data Fields Data Declaration public SUIndicatorData Data Field Value Type Description SUIndicatorData"
  },
  "api/Surfer.SUIndicatorLink.html": {
    "href": "api/Surfer.SUIndicatorLink.html",
    "title": "Class SUIndicatorLink | Copyright © 2021 ATStudio",
    "keywords": "Class SUIndicatorLink Inheritance Object SUIndicatorLink Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUIndicatorLink : MonoBehaviour Properties Data Declaration public SUIndicatorLinkData Data { get; } Property Value Type Description SUIndicatorLinkData"
  },
  "api/Surfer.SUIndicatorLinkData.html": {
    "href": "api/Surfer.SUIndicatorLinkData.html",
    "title": "Class SUIndicatorLinkData | Copyright © 2021 ATStudio",
    "keywords": "Class SUIndicatorLinkData Inheritance Object SULinkData SUIndicatorLinkData Inherited Members SULinkData._target SULinkData.Target Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUIndicatorLinkData : SULinkData Constructors SUIndicatorLinkData() Declaration public SUIndicatorLinkData() SUIndicatorLinkData(Transform, List<SUIndicatorData>) Declaration public SUIndicatorLinkData(Transform target, List<SUIndicatorData> allData) Parameters Type Name Description Transform target List < SUIndicatorData > allData Properties AllData Declaration public List<SUIndicatorData> AllData { get; } Property Value Type Description List < SUIndicatorData > Methods StartFollow() Make all indicators of this linkData start following the target Declaration public void StartFollow() StopFollow() Stop and destroy all indicators of this linkData Declaration public void StopFollow()"
  },
  "api/Surfer.SUIndicatorsManager.html": {
    "href": "api/Surfer.SUIndicatorsManager.html",
    "title": "Class SUIndicatorsManager | Copyright © 2021 ATStudio",
    "keywords": "Class SUIndicatorsManager Inheritance Object SUCamItemsManager SUIndicatorsManager Inherited Members SUCamItemsManager._suPersistentCanvas SUCamItemsManager._mainParent SUCamItemsManager._rendersList SUCamItemsManager._mustClean SUCamItemsManager._targetPos SUCamItemsManager.GetPersistentCanvas() SUCamItemsManager.CreateCameKey(Camera, RenderMode) Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUIndicatorsManager : SUCamItemsManager Properties I Declaration public static SUIndicatorsManager I { get; set; } Property Value Type Description SUIndicatorsManager MainParentName Declaration protected override string MainParentName { get; set; } Property Value Type Description String Overrides SUCamItemsManager.MainParentName SortOrder Declaration protected override int SortOrder { get; set; } Property Value Type Description Int32 Overrides SUCamItemsManager.SortOrder Methods GetAliases(SUIndicatorData, Boolean) Get all aliases of a specific indicator (only useful with multiple cameras). If you have an IndicatorData shown on P1Camera , this call will give you the IndicatorsData shown on P2Camera,P3Camera and so on (namely the indicators created from the same SUIndicatorDataLink) Declaration public List<SUIndicatorData> GetAliases(SUIndicatorData data, bool includeCaller = false) Parameters Type Name Description SUIndicatorData data Boolean includeCaller Returns Type Description List < SUIndicatorData > GetAllByCustomTag(String, Action<SUIndicatorData>) Get all indicators with a specific customTag Declaration public void GetAllByCustomTag(string customTag, Action<SUIndicatorData> OnIndicator) Parameters Type Name Description String customTag Action < SUIndicatorData > OnIndicator MainLoop() Declaration public override void MainLoop() Overrides SUCamItemsManager.MainLoop() StartFollow(SUIndicatorLinkData) Declaration public void StartFollow(SUIndicatorLinkData linkData) Parameters Type Name Description SUIndicatorLinkData linkData StopFollow(Camera) Stop and Destroy indicators of a specific Camera Declaration public override void StopFollow(Camera cam) Parameters Type Name Description Camera cam Overrides SUCamItemsManager.StopFollow(Camera) StopFollow(SUIndicatorData) Stop and Destroy a specific Indicator Declaration public void StopFollow(SUIndicatorData data) Parameters Type Name Description SUIndicatorData data StopFollow(SUIndicatorLinkData) Stop and Destroy indicators of a specific SUIndicatorLinkData Declaration public void StopFollow(SUIndicatorLinkData data) Parameters Type Name Description SUIndicatorLinkData data StopFollow(String) Stop and Destroy indicators with a specific customTag Declaration public override void StopFollow(string customTag) Parameters Type Name Description String customTag Overrides SUCamItemsManager.StopFollow(String)"
  },
  "api/Surfer.SUIndicatorState_ID.html": {
    "href": "api/Surfer.SUIndicatorState_ID.html",
    "title": "Enum SUIndicatorState_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUIndicatorState_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUIndicatorState_ID Fields Name Description FollowingOffScreen FollowingOnScreen None Standby"
  },
  "api/Surfer.SUIndicatorVisualData.html": {
    "href": "api/Surfer.SUIndicatorVisualData.html",
    "title": "Class SUIndicatorVisualData | Copyright © 2021 ATStudio",
    "keywords": "Class SUIndicatorVisualData Inheritance Object SUIndicatorVisualData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUIndicatorVisualData Properties AngleOffset Declaration public float AngleOffset { get; } Property Value Type Description Single DistanceText Declaration public TextMeshProUGUI DistanceText { get; } Property Value Type Description TextMeshProUGUI RotationObj Declaration public Transform RotationObj { get; } Property Value Type Description Transform Suffix Declaration public string Suffix { get; } Property Value Type Description String"
  },
  "api/Surfer.SUInputBehaviour.html": {
    "href": "api/Surfer.SUInputBehaviour.html",
    "title": "Class SUInputBehaviour | Copyright © 2021 ATStudio",
    "keywords": "Class SUInputBehaviour Inheritance Object SUInputBehaviour Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUInputBehaviour Constructors SUInputBehaviour(GameObject, SUElement) Declaration public SUInputBehaviour(GameObject go, SUElement element) Parameters Type Name Description GameObject go SUElement element Methods CheckOldInput() Declaration public void CheckOldInput() HandleDestroy() Declaration public void HandleDestroy()"
  },
  "api/Surfer.SUInputFieldBehaviour.html": {
    "href": "api/Surfer.SUInputFieldBehaviour.html",
    "title": "Class SUInputFieldBehaviour | Copyright © 2021 ATStudio",
    "keywords": "Class SUInputFieldBehaviour Inheritance Object SUInputFieldBehaviour Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUInputFieldBehaviour Constructors SUInputFieldBehaviour(GameObject, SUElement) Declaration public SUInputFieldBehaviour(GameObject go, SUElement element) Parameters Type Name Description GameObject go SUElement element Methods HandleDestroy() Declaration public void HandleDestroy()"
  },
  "api/Surfer.SUItemLinkData.html": {
    "href": "api/Surfer.SUItemLinkData.html",
    "title": "Class SUItemLinkData | Copyright © 2021 ATStudio",
    "keywords": "Class SUItemLinkData Inheritance Object SUItemLinkData SUHealthBarData SUIndicatorData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class SUItemLinkData Fields _cam Camera of the UI prefab ( YOU MUST NOT SET THIS PROPERTY! ) Declaration protected Camera _cam Field Value Type Description Camera _customTag Declaration protected string _customTag Field Value Type Description String _onScreenOffset Declaration protected Vector2 _onScreenOffset Field Value Type Description Vector2 _prefab UI prefab that should follow the target Declaration protected GameObject _prefab Field Value Type Description GameObject _renderMode Declaration protected RenderMode _renderMode Field Value Type Description RenderMode Properties Cam Declaration public Camera Cam { get; set; } Property Value Type Description Camera CustomTag Declaration public string CustomTag { get; } Property Value Type Description String OnScreenOffset Declaration public Vector2 OnScreenOffset { get; } Property Value Type Description Vector2 Prefab Declaration public GameObject Prefab { get; } Property Value Type Description GameObject RectT RectTransform of the UI prefab ( YOU MUST NOT SET THIS PROPERTY! ) Declaration public RectTransform RectT { get; set; } Property Value Type Description RectTransform RenderMode Declaration public RenderMode RenderMode { get; } Property Value Type Description RenderMode Target Target to follow ( YOU MUST NOT SET THIS PROPERTY! ) Declaration public Transform Target { get; set; } Property Value Type Description Transform"
  },
  "api/Surfer.SUJumpData.html": {
    "href": "api/Surfer.SUJumpData.html",
    "title": "Class SUJumpData | Copyright © 2021 ATStudio",
    "keywords": "Class SUJumpData Data to setup a Jump animation by the inspector Inheritance Object SUAnimationData SUScreenAnimationData SUJumpData Inherited Members SUScreenAnimationData._rectCp SUScreenAnimationData._parentRect SUScreenAnimationData.OnCache(GameObject) SUScreenAnimationData.GetFromPosition() SUScreenAnimationData.GetToPosition() SUScreenAnimationData.GetToAnchoredPosition() SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.IsAvailable SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class SUJumpData : SUScreenAnimationData Methods OnPlay(GameObject) Declaration protected override void OnPlay(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnPlay(GameObject)"
  },
  "api/Surfer.SUJumpDataDrawer.html": {
    "href": "api/Surfer.SUJumpDataDrawer.html",
    "title": "Class SUJumpDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUJumpDataDrawer Inheritance Object SUAnimationDataDrawer SUScreenAnimationDataDrawer SUJumpDataDrawer Inherited Members SUScreenAnimationDataDrawer.OnCanUseDefaultModes(Rect, SerializedProperty) SUScreenAnimationDataDrawer.IsNone() SUAnimationDataDrawer._startMode SUAnimationDataDrawer._endMode SUAnimationDataDrawer._ease SUAnimationDataDrawer._looped SUAnimationDataDrawer._obj SUAnimationDataDrawer.OnGUI(Rect, SerializedProperty, GUIContent) SUAnimationDataDrawer.OnCanBeLooped() SUAnimationDataDrawer.GetHeightCommonFields() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUJumpDataDrawer : SUScreenAnimationDataDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single Overrides SUScreenAnimationDataDrawer.GetPropertyHeight(SerializedProperty, GUIContent) OnSupplementaryFields(ref Rect, SerializedProperty) Declaration protected override void OnSupplementaryFields(ref Rect position, SerializedProperty property) Parameters Type Name Description Rect position SerializedProperty property Overrides SUScreenAnimationDataDrawer.OnSupplementaryFields(ref Rect, SerializedProperty)"
  },
  "api/Surfer.SULastSelectionEventData.html": {
    "href": "api/Surfer.SULastSelectionEventData.html",
    "title": "Class SULastSelectionEventData | Copyright © 2021 ATStudio",
    "keywords": "Class SULastSelectionEventData Event data for Last State Selection Event handler Inheritance Object SULastSelectionEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SULastSelectionEventData Constructors SULastSelectionEventData(String) Declaration public SULastSelectionEventData(string state) Parameters Type Name Description String state Properties StateName Declaration public string StateName { get; } Property Value Type Description String"
  },
  "api/Surfer.SULinkData.html": {
    "href": "api/Surfer.SULinkData.html",
    "title": "Class SULinkData | Copyright © 2021 ATStudio",
    "keywords": "Class SULinkData Inheritance Object SULinkData SUHealthBarLinkData SUIndicatorLinkData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class SULinkData Fields _target The target object to follow Declaration protected Transform _target Field Value Type Description Transform Properties Target Declaration public Transform Target { get; } Property Value Type Description Transform"
  },
  "api/Surfer.SULoadingProgress.html": {
    "href": "api/Surfer.SULoadingProgress.html",
    "title": "Class SULoadingProgress | Copyright © 2021 ATStudio",
    "keywords": "Class SULoadingProgress Class to easily show SceneLoading progress on a Text or on an filled-image. Inheritance Object SULoadingProgress Implements ISUSceneLoadingHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SULoadingProgress : MonoBehaviour, ISUSceneLoadingHandler Methods Awake() Declaration protected virtual void Awake() OnDestroy() Declaration protected virtual void OnDestroy() OnSUSceneLoading(SUSceneLoadingEventData) Declaration public void OnSUSceneLoading(SUSceneLoadingEventData eventInfo) Parameters Type Name Description SUSceneLoadingEventData eventInfo Implements ISUSceneLoadingHandler"
  },
  "api/Surfer.SUPositionData.html": {
    "href": "api/Surfer.SUPositionData.html",
    "title": "Class SUPositionData | Copyright © 2021 ATStudio",
    "keywords": "Class SUPositionData Data to setup a Position animation by the inspector Inheritance Object SUAnimationData SUScreenAnimationData SUPositionData Inherited Members SUScreenAnimationData._rectCp SUScreenAnimationData._parentRect SUScreenAnimationData.OnCache(GameObject) SUScreenAnimationData.GetFromPosition() SUScreenAnimationData.GetToPosition() SUScreenAnimationData.GetToAnchoredPosition() SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.IsAvailable SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class SUPositionData : SUScreenAnimationData Methods OnPlay(GameObject) Declaration protected override void OnPlay(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnPlay(GameObject)"
  },
  "api/Surfer.SUPreBuildManager.html": {
    "href": "api/Surfer.SUPreBuildManager.html",
    "title": "Class SUPreBuildManager | Copyright © 2021 ATStudio",
    "keywords": "Class SUPreBuildManager Inheritance Object SUPreBuildManager Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUPreBuildManager : IPreprocessBuildWithReport Properties callbackOrder Declaration public int callbackOrder { get; } Property Value Type Description Int32 Methods OnPreprocessBuild(BuildReport) Declaration public void OnPreprocessBuild(BuildReport report) Parameters Type Name Description BuildReport report"
  },
  "api/Surfer.SUPunchData.html": {
    "href": "api/Surfer.SUPunchData.html",
    "title": "Class SUPunchData | Copyright © 2021 ATStudio",
    "keywords": "Class SUPunchData Data to setup a Punch animation by the inspector Inheritance Object SUAnimationData SUPunchData Inherited Members SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class SUPunchData : SUAnimationData Properties IsAvailable Declaration protected override bool IsAvailable { get; } Property Value Type Description Boolean Overrides SUAnimationData.IsAvailable Methods OnCache(GameObject) Declaration protected override void OnCache(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnCache(GameObject) OnPlay(GameObject) Declaration protected override void OnPlay(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnPlay(GameObject)"
  },
  "api/Surfer.SUPunchData.Mode_ID.html": {
    "href": "api/Surfer.SUPunchData.Mode_ID.html",
    "title": "Enum SUPunchData.Mode_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUPunchData.Mode_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum Mode_ID Fields Name Description None Position Rotation Scale"
  },
  "api/Surfer.SUPunchDataDrawer.html": {
    "href": "api/Surfer.SUPunchDataDrawer.html",
    "title": "Class SUPunchDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUPunchDataDrawer Inheritance Object SUAnimationDataDrawer SUPunchDataDrawer Inherited Members SUAnimationDataDrawer._startMode SUAnimationDataDrawer._endMode SUAnimationDataDrawer._ease SUAnimationDataDrawer._looped SUAnimationDataDrawer._obj SUAnimationDataDrawer.OnGUI(Rect, SerializedProperty, GUIContent) SUAnimationDataDrawer.OnCanBeLooped() SUAnimationDataDrawer.GetHeightCommonFields() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUPunchDataDrawer : SUAnimationDataDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single Overrides SUAnimationDataDrawer.GetPropertyHeight(SerializedProperty, GUIContent) IsNone() Declaration protected override bool IsNone() Returns Type Description Boolean Overrides SUAnimationDataDrawer.IsNone() OnCanUseDefaultModes(ref Rect, SerializedProperty) Declaration protected override bool OnCanUseDefaultModes(ref Rect position, SerializedProperty property) Parameters Type Name Description Rect position SerializedProperty property Returns Type Description Boolean Overrides SUAnimationDataDrawer.OnCanUseDefaultModes(ref Rect, SerializedProperty)"
  },
  "api/Surfer.SUReactionData.html": {
    "href": "api/Surfer.SUReactionData.html",
    "title": "Class SUReactionData | Copyright © 2021 ATStudio",
    "keywords": "Class SUReactionData Data to setup a custom reaction in the inspector Inheritance Object SUReactionData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUReactionData Constructors SUReactionData(String, String) Declaration public SUReactionData(string key, string name) Parameters Type Name Description String key String name Properties Key Declaration public string Key { get; } Property Value Type Description String Name Declaration public string Name { get; } Property Value Type Description String Methods Play(GameObject) Declaration public void Play(GameObject caller) Parameters Type Name Description GameObject caller"
  },
  "api/Surfer.SUReactionDataDrawer.html": {
    "href": "api/Surfer.SUReactionDataDrawer.html",
    "title": "Class SUReactionDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUReactionDataDrawer Inheritance Object SUReactionDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUReactionDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUReactionsData.html": {
    "href": "api/Surfer.SUReactionsData.html",
    "title": "Class SUReactionsData | Copyright © 2021 ATStudio",
    "keywords": "Class SUReactionsData Data to better view/group/setup multiple custom reactions in the inspector Inheritance Object SUReactionsData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUReactionsData Methods Play(GameObject) Declaration public void Play(GameObject go) Parameters Type Name Description GameObject go"
  },
  "api/Surfer.SUReactionsDataDrawer.html": {
    "href": "api/Surfer.SUReactionsDataDrawer.html",
    "title": "Class SUReactionsDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUReactionsDataDrawer Inheritance Object SUReactionsDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUReactionsDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SURectSizeData.html": {
    "href": "api/Surfer.SURectSizeData.html",
    "title": "Class SURectSizeData | Copyright © 2021 ATStudio",
    "keywords": "Class SURectSizeData Data to setup a Rect Size animation by the inspector Inheritance Object SUAnimationData SURectSizeData Inherited Members SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class SURectSizeData : SUAnimationData Properties IsAvailable Declaration protected override bool IsAvailable { get; } Property Value Type Description Boolean Overrides SUAnimationData.IsAvailable Methods OnCache(GameObject) Declaration protected override void OnCache(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnCache(GameObject) OnPlay(GameObject) Declaration protected override void OnPlay(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnPlay(GameObject)"
  },
  "api/Surfer.SURectSizeData.Mode_ID.html": {
    "href": "api/Surfer.SURectSizeData.Mode_ID.html",
    "title": "Enum SURectSizeData.Mode_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SURectSizeData.Mode_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum Mode_ID Fields Name Description Multiply Multiply the starting sizeDelta (if CacheComponents method is used None ToStarting To the sizeDelta cached during Awake (if CacheComponents method is used ) XFitX The sizeDelta width will be the same as the parent one XFitY The sizeDelta width will be the same as the parent sizeDelta height YFitX The sizeDelta height will be the same as the parent width YFitY The sizeDelta height will be the same as the parent one"
  },
  "api/Surfer.SURectSizeDataDrawer.html": {
    "href": "api/Surfer.SURectSizeDataDrawer.html",
    "title": "Class SURectSizeDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SURectSizeDataDrawer Inheritance Object SUAnimationDataDrawer SURectSizeDataDrawer Inherited Members SUAnimationDataDrawer._startMode SUAnimationDataDrawer._endMode SUAnimationDataDrawer._ease SUAnimationDataDrawer._looped SUAnimationDataDrawer._obj SUAnimationDataDrawer.OnGUI(Rect, SerializedProperty, GUIContent) SUAnimationDataDrawer.OnCanBeLooped() SUAnimationDataDrawer.GetHeightCommonFields() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SURectSizeDataDrawer : SUAnimationDataDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single Overrides SUAnimationDataDrawer.GetPropertyHeight(SerializedProperty, GUIContent) IsNone() Declaration protected override bool IsNone() Returns Type Description Boolean Overrides SUAnimationDataDrawer.IsNone() OnCanUseDefaultModes(ref Rect, SerializedProperty) Declaration protected override bool OnCanUseDefaultModes(ref Rect position, SerializedProperty property) Parameters Type Name Description Rect position SerializedProperty property Returns Type Description Boolean Overrides SUAnimationDataDrawer.OnCanUseDefaultModes(ref Rect, SerializedProperty)"
  },
  "api/Surfer.SurferHelper.html": {
    "href": "api/Surfer.SurferHelper.html",
    "title": "Class SurferHelper | Copyright © 2021 ATStudio",
    "keywords": "Class SurferHelper Helper class of Surfer for editor and runtime code. Inheritance Object SurferHelper Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public static class SurferHelper Fields BoltSymbol Declaration public const string BoltSymbol = \"SUBolt\" Field Value Type Description String CharTweenerSymbol Declaration public const string CharTweenerSymbol = \"SUCharT\" Field Value Type Description String fieldWidth Declaration public const float fieldWidth = 150F Field Value Type Description Single kOverallVolume Declaration public static string kOverallVolume Field Value Type Description String lineHeight Declaration public const float lineHeight = 20F Field Value Type Description Single NewInputSymbol Declaration public const string NewInputSymbol = \"SUNew\" Field Value Type Description String OldInputSymbol Declaration public const string OldInputSymbol = \"SUOld\" Field Value Type Description String RewiredInputSymbol Declaration public const string RewiredInputSymbol = \"SURew\" Field Value Type Description String textColor Declaration public static Color textColor Field Value Type Description Color Unset Declaration public const string Unset = \"-----\" Field Value Type Description String Version Declaration public const string Version = \"v2.6\" Field Value Type Description String Properties BuildVPrefix Declaration public static string BuildVPrefix { get; } Property Value Type Description String SO Declaration public static SurferSO SO { get; } Property Value Type Description SurferSO Methods GetParentRect(Transform) Declaration public static RectTransform GetParentRect(Transform transf) Parameters Type Name Description Transform transf Returns Type Description RectTransform GetVersion() Declaration public static string GetVersion() Returns Type Description String PlaySound(AudioClip, GameObject, Single) Play a sound if an audioClip is set. It checks and adds (if not available) an AudioSource Declaration public static void PlaySound(AudioClip clip, GameObject go, float delay = 0F) Parameters Type Name Description AudioClip clip GameObject go GameObject where to check or add for an Audiosource to play the sound on Single delay"
  },
  "api/Surfer.SurferManager.html": {
    "href": "api/Surfer.SurferManager.html",
    "title": "Class SurferManager | Copyright © 2021 ATStudio",
    "keywords": "Class SurferManager Surfer Singleton that manages states, scene, conditions and actions. Inheritance Object SurferManager Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public sealed class SurferManager : MonoBehaviour Properties I Declaration public static SurferManager I { get; } Property Value Type Description SurferManager LastClosedStates Get all the closed states.This list is cleared after OpenState is called and performed. Declaration public HashSet<SUStateEventData> LastClosedStates { get; } Property Value Type Description HashSet < SUStateEventData > LastUnloaded Get the last unloaded scene Declaration public string LastUnloaded { get; } Property Value Type Description String LoadingScenes Get all the scenes that are currently loading Declaration public HashSet<string> LoadingScenes { get; } Property Value Type Description HashSet < String > OpenedScenes Get all the currently opened scenes Declaration public HashSet<string> OpenedScenes { get; } Property Value Type Description HashSet < String > OpenedStates Get all the currently opened states Declaration public HashSet<SUStateEventData> OpenedStates { get; } Property Value Type Description HashSet < SUStateEventData > SO Surfer Scriptable object that contains states, scenes lists and other data Declaration public SurferSO SO { get; } Property Value Type Description SurferSO UnloadingScenes Get all the scenes that are currently unloading Declaration public HashSet<string> UnloadingScenes { get; } Property Value Type Description HashSet < String > Methods CheckStateStack(String, Int32) Check if a state has a stack of \"opening states\" Declaration public void CheckStateStack(string state, int playerID) Parameters Type Name Description String state state to check Int32 playerID ClosePlayerState(Int32, String, Int32, Object[]) Close a specific state of a specific player with a custom list of data. Declaration public void ClosePlayerState(int playerID, string state, int version = 0, params object[] customData) Parameters Type Name Description Int32 playerID String state state name Int32 version Object [] customData list of custom variables ClosePlayerState(Int32, String, Int32, Single, Object[]) Close a specific state of a specific player with a custom list of data. Declaration public void ClosePlayerState(int playerID, string state, int version = 0, float delay = 0F, params object[] customData) Parameters Type Name Description Int32 playerID String state state name Int32 version Single delay Object [] customData list of custom variables ClosePlayerState(Int32, String, Object[]) Close a specific state of a spcific playerID with a custom list of data. Declaration public void ClosePlayerState(int playerID, string state, params object[] customData) Parameters Type Name Description Int32 playerID String state state name Object [] customData list of custom variables ClosePlayerState(Int32, String, Single, Object[]) Close a specific state of a spcific playerID, with a delay and with a custom list of data. Declaration public void ClosePlayerState(int playerID, string state, float delay, params object[] customData) Parameters Type Name Description Int32 playerID String state state name Single delay Object [] customData list of custom variables CloseState(String, Int32, Object[]) Close a specific state with a custom list of data and a version. Declaration public void CloseState(string state, int version = 0, params object[] customData) Parameters Type Name Description String state state name Int32 version Object [] customData list of custom variables CloseState(String, Int32, Single, Object[]) Close a specific state , with a specific delay,version and custom list of data. Declaration public void CloseState(string state, int version = 0, float delay = 0F, params object[] customData) Parameters Type Name Description String state state name Int32 version Single delay delay Object [] customData list of custom variables CloseState(String, Object[]) Close a specific state with a custom list of data. Declaration public void CloseState(string state, params object[] customData) Parameters Type Name Description String state state name Object [] customData list of custom variables GetObjectStateElement(GameObject, Boolean) Gets the parent state element of a game object Declaration public SUElement GetObjectStateElement(GameObject obj, bool checkCaller = false) Parameters Type Name Description GameObject obj Boolean checkCaller Returns Type Description SUElement GetObjectStateName(GameObject, Boolean) Gets the parent state name of a game object Declaration public string GetObjectStateName(GameObject obj, bool checkCaller = false) Parameters Type Name Description GameObject obj Boolean checkCaller Returns Type Description String GetObjectStatePlayerID(GameObject, Boolean) Gets the playerID of the parent state of a game object Declaration public int GetObjectStatePlayerID(GameObject obj, bool checkCaller = false) Parameters Type Name Description GameObject obj Boolean checkCaller Returns Type Description Int32 GetObjectStateTransfom(GameObject, Boolean) Gets the parent state of a game object Declaration public Transform GetObjectStateTransfom(GameObject obj, bool checkCaller = false) Parameters Type Name Description GameObject obj Boolean checkCaller Returns Type Description Transform IsClosed(String, Int32) Check if a state has just been closed Declaration public bool IsClosed(string state, int playerID = 0) Parameters Type Name Description String state state name Int32 playerID Returns Type Description Boolean true if closed, false otherwise IsMyStateOpen(GameObject, Int32) Check if a state of an object is open or not Declaration public bool IsMyStateOpen(GameObject caller, int version = 0) Parameters Type Name Description GameObject caller Int32 version Returns Type Description Boolean true if open, false otherwise IsOpen(String, Int32) Check if a state is open or not Declaration public bool IsOpen(string state, int playerID = 0) Parameters Type Name Description String state state name Int32 playerID Returns Type Description Boolean true if open, false otherwise IsOpen(String, Int32, Int32) Check if a state is open or not Declaration public bool IsOpen(string state, int version = 0, int playerID = 0) Parameters Type Name Description String state state name Int32 version Int32 playerID Returns Type Description Boolean true if open, false otherwise IsSatisfied(String, GameObject, SUFieldValuesData) Check if a specific condition is satisfied Declaration public bool IsSatisfied(string conditionKey, GameObject go, SUFieldValuesData fieldsValues = null) Parameters Type Name Description String conditionKey Condition key GameObject go SUFieldValuesData fieldsValues Returns Type Description Boolean true if satisfied, false otherwise LoadScene(String, Single, Boolean) Load a specific scene after a specific delay Declaration public void LoadScene(string name, float delay = 0F, bool additive = false) Parameters Type Name Description String name scene name Single delay delay Boolean additive additive mode or not? LoadSceneAsync(String, Single, Boolean, Boolean) Load a specific scene (async) after a specific delay Declaration public void LoadSceneAsync(string name, float delay = 0F, bool additive = false, bool autoActivate = true) Parameters Type Name Description String name scene name Single delay delay Boolean additive additive mode or not? Boolean autoActivate autoActivate when loaded or not? OpenPlayerState(Int32, String, Int32, Object[]) Open a specific player state, with a specific version and with a custom list of data. Declaration public void OpenPlayerState(int playerID, string state, int version = 0, params object[] customData) Parameters Type Name Description Int32 playerID String state Int32 version Object [] customData OpenPlayerState(Int32, String, Int32, Single, Object[]) Open a specific player state, with a specific version and with a custom list of data. Declaration public void OpenPlayerState(int playerID, string state, int version = 0, float delay = 0F, params object[] customData) Parameters Type Name Description Int32 playerID String state Int32 version Single delay Object [] customData OpenPlayerState(Int32, String, Object[]) Open a specific player state with a custom list of data. Declaration public void OpenPlayerState(int playerID, string state, params object[] customData) Parameters Type Name Description Int32 playerID String state state name Object [] customData list of custom variables OpenPrefabState(GameObject, Transform, Int32, Single, Object[]) Open a prefab state , with a specific version, delay, custom list of data and in a specific parent. Declaration public void OpenPrefabState(GameObject prefab, Transform parent = null, int version = 0, float delay = 0F, params object[] customData) Parameters Type Name Description GameObject prefab state prefab Transform parent parent Int32 version state version Single delay delay Object [] customData list of custom variables OpenState(String, Int32, Object[]) Open a specific state , with a specific version and custom list of data. Declaration public void OpenState(string state, int version = 0, params object[] customData) Parameters Type Name Description String state state name Int32 version state version Object [] customData list of custom variables OpenState(String, Int32, Single, Object[]) Open a specific state , with a specific version, delay and custom list of data. Declaration public void OpenState(string state, int version = 0, float delay = 0F, params object[] customData) Parameters Type Name Description String state state name Int32 version state version Single delay delay Object [] customData list of custom variables OpenState(String, Object[]) Open a specific state with a custom list of data. Declaration public void OpenState(string state, params object[] customData) Parameters Type Name Description String state state name Object [] customData list of custom variables PlayReaction(String, GameObject, SUFieldValuesData) Play a specific custom reaction Declaration public void PlayReaction(string key, GameObject go, SUFieldValuesData fieldsValues = null) Parameters Type Name Description String key GameObject go SUFieldValuesData fieldsValues RecursiveGetChildStatesUI(Transform, ref List<SUStateInfo>) Get a list of all child states Declaration public void RecursiveGetChildStatesUI(Transform caller, ref List<SUStateInfo> output) Parameters Type Name Description Transform caller List < SUStateInfo > output RecursiveGetParentStatesUI(Transform, ref List<SUStateInfo>) Get a list of all parent states Declaration public void RecursiveGetParentStatesUI(Transform caller, ref List<SUStateInfo> output) Parameters Type Name Description Transform caller List < SUStateInfo > output RecursiveGetParentStateUI(Transform, ref SUElement) Recursively get the parent state of an object Declaration public void RecursiveGetParentStateUI(Transform caller, ref SUElement output) Parameters Type Name Description Transform caller SUElement output RegisterCustomEvent(ISUCustomEventHandler, String[]) Register to the CustomEvent callback Declaration public void RegisterCustomEvent(ISUCustomEventHandler interf, params string[] eventsID) Parameters Type Name Description ISUCustomEventHandler interf object interface used to register String [] eventsID all the names of the custom events to register to RegisterSceneActivated(ISUSceneActivatedHandler, String[]) Register to the SceneActivated callback of specific scenes Declaration public void RegisterSceneActivated(ISUSceneActivatedHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneActivatedHandler interf object interface used to register String [] scenes all the names of the scenes to register to RegisterSceneDeactivated(ISUSceneDeactivatedHandler, String[]) Register to the SceneDeactivated callback of specific scenes Declaration public void RegisterSceneDeactivated(ISUSceneDeactivatedHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneDeactivatedHandler interf object interface used to register String [] scenes all the names of the scenes to register to RegisterSceneLoaded(ISUSceneLoadedHandler, String[]) Register to the SceneLoaded callback of specific scenes Declaration public void RegisterSceneLoaded(ISUSceneLoadedHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneLoadedHandler interf object interface used to register String [] scenes all the names of the scenes to register to RegisterSceneLoading(ISUSceneLoadingHandler, String[]) Register to the SceneLoading callback of specific scenes Declaration public void RegisterSceneLoading(ISUSceneLoadingHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneLoadingHandler interf object interface used to register String [] scenes all the names of the scenes to register to RegisterSceneUnloaded(ISUSceneUnloadedHandler, String[]) Register to the SceneUnloaded callback of specific scenes Declaration public void RegisterSceneUnloaded(ISUSceneUnloadedHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneUnloadedHandler interf object interface used to register String [] scenes all the names of the scenes to register to RegisterSceneUnloading(ISUSceneUnloadingHandler, String[]) Register to the SceneUnloading callback of specific scenes Declaration public void RegisterSceneUnloading(ISUSceneUnloadingHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneUnloadingHandler interf object interface used to register String [] scenes all the names of the scenes to register to RegisterStateEnter(ISUStateEnterHandler, String[]) Register to the StateEnter callback of specific states Declaration public void RegisterStateEnter(ISUStateEnterHandler interf, params string[] statesID) Parameters Type Name Description ISUStateEnterHandler interf object interface used to register String [] statesID all the names of the states to register to RegisterStateExit(ISUStateExitHandler, String[]) Register to the StateExit callback of specific states Declaration public void RegisterStateExit(ISUStateExitHandler interf, params string[] statesID) Parameters Type Name Description ISUStateExitHandler interf object interface used to register String [] statesID all the names of the states to register to SendCustomEvent(String, Object[]) Declaration public void SendCustomEvent(string eventName, params object[] customData) Parameters Type Name Description String eventName Object [] customData SendCustomEvent(String, Single, Object[]) Declaration public void SendCustomEvent(string eventName, float delay, params object[] customData) Parameters Type Name Description String eventName Single delay Object [] customData SetActiveScene(String, Single) Set a specific scene as active after a specific delay Declaration public void SetActiveScene(string name, float delay = 0F) Parameters Type Name Description String name scene name Single delay delay TogglePlayerState(Int32, String, Int32, Object[]) Toggle a specific state with a specific version, a playerID and custom list of data. Declaration public void TogglePlayerState(int playerID, string state, int version = 0, params object[] customData) Parameters Type Name Description Int32 playerID player ID String state state name Int32 version state version Object [] customData list of custom variables TogglePlayerState(Int32, String, Int32, Single, Object[]) Toggle a specific state with a specific version, a playerID and custom list of data. Declaration public void TogglePlayerState(int playerID, string state, int version = 0, float delay = 0F, params object[] customData) Parameters Type Name Description Int32 playerID player ID String state state name Int32 version state version Single delay Object [] customData list of custom variables ToggleState(String, Int32, Object[]) Toggle a specific state with a specific version and custom list of data. Declaration public void ToggleState(string state, int version = 0, params object[] customData) Parameters Type Name Description String state state name Int32 version state version Object [] customData list of custom variables ToggleState(String, Int32, Single, Object[]) Toggle a specific state with a specific version,delay and custom list of data. Declaration public void ToggleState(string state, int version = 0, float delay = 0F, params object[] customData) Parameters Type Name Description String state state name Int32 version state version Single delay delay Object [] customData list of custom variables UnloadSceneAsync(String, Single) Unload a specific scene after a specific delay Declaration public void UnloadSceneAsync(string name, float delay = 0F) Parameters Type Name Description String name scene name Single delay delay UnregisterCustomEvent(ISUCustomEventHandler, String[]) Unregister to the CustomEvent callback Declaration public void UnregisterCustomEvent(ISUCustomEventHandler interf, params string[] eventsID) Parameters Type Name Description ISUCustomEventHandler interf object interface used to unregister String [] eventsID all the names of the custom events to unregister to UnregisterSceneActivated(ISUSceneActivatedHandler, String[]) Unregister to the SceneActivated callback of specific scenes Declaration public void UnregisterSceneActivated(ISUSceneActivatedHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneActivatedHandler interf object interface used to unregister String [] scenes all the names of the scenes to unregister to UnregisterSceneDeactivated(ISUSceneDeactivatedHandler, String[]) Unregister to the SceneDeactivated callback of specific scenes Declaration public void UnregisterSceneDeactivated(ISUSceneDeactivatedHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneDeactivatedHandler interf object interface used to unregister String [] scenes all the names of the scenes to unregister to UnregisterSceneLoaded(ISUSceneLoadedHandler, String[]) Unregister to the SceneLoaded callback of specific scenes Declaration public void UnregisterSceneLoaded(ISUSceneLoadedHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneLoadedHandler interf object interface used to unregister String [] scenes all the names of the scenes to unregister to UnregisterSceneLoading(ISUSceneLoadingHandler, String[]) Unregister to the SceneLoading callback of specific scenes Declaration public void UnregisterSceneLoading(ISUSceneLoadingHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneLoadingHandler interf object interface used to unregister String [] scenes all the names of the scenes to unregister to UnregisterSceneUnloaded(ISUSceneUnloadedHandler, String[]) Unregister to the SceneUnloaded callback of specific scenes Declaration public void UnregisterSceneUnloaded(ISUSceneUnloadedHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneUnloadedHandler interf object interface used to unregister String [] scenes all the names of the scenes to unregister to UnregisterSceneUnloading(ISUSceneUnloadingHandler, String[]) Unregister to the SceneUnloading callback of specific scenes Declaration public void UnregisterSceneUnloading(ISUSceneUnloadingHandler interf, params string[] scenes) Parameters Type Name Description ISUSceneUnloadingHandler interf object interface used to unregister String [] scenes all the names of the scenes to unregister to UnregisterStateEnter(ISUStateEnterHandler, String[]) Unregister to the StateEnter callback of specific states Declaration public void UnregisterStateEnter(ISUStateEnterHandler interf, params string[] statesID) Parameters Type Name Description ISUStateEnterHandler interf object interface used to unregister String [] statesID all the names of the states to unregister to UnregisterStateExit(ISUStateExitHandler, String[]) Unegister to the StateExit callback of specific states Declaration public void UnregisterStateExit(ISUStateExitHandler interf, params string[] statesID) Parameters Type Name Description ISUStateExitHandler interf object interface used to unregister String [] statesID all the names of the states to unregister to"
  },
  "api/Surfer.SurferSO.html": {
    "href": "api/Surfer.SurferSO.html",
    "title": "Class SurferSO | Copyright © 2021 ATStudio",
    "keywords": "Class SurferSO Scriptable object of Surfer that stores the state names Inheritance Object SurferSO Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SurferSO : ScriptableObject Properties BuildVersions Declaration public VersionsDictionary BuildVersions { get; } Property Value Type Description VersionsDictionary Layers Declaration public string[] Layers { get; } Property Value Type Description String [] Tags Declaration public string[] Tags { get; } Property Value Type Description String [] Methods AddEvent(String) Add a new custom event. Used only in the Surfer Settings Window Declaration public void AddEvent(string newName) Parameters Type Name Description String newName new event name AddState(String) Add a new state. Used only in the Surfer Settings Window Declaration public void AddState(string newName) Parameters Type Name Description String newName new state name GetEvent(String) Get the name of the event with the specific key. Used only in the Surfer Settings Window Declaration public string GetEvent(string key) Parameters Type Name Description String key Returns Type Description String event name GetEventKey(String) Get the key of a specific event. Used only in the Surfer Settings Window Declaration public string GetEventKey(string eventName) Parameters Type Name Description String eventName event name Returns Type Description String key of the event GetEventsList(Boolean) Get a list of all the event names. Used only in the Surfer Settings Window Declaration public string[] GetEventsList(bool addConstPrefix = false) Parameters Type Name Description Boolean addConstPrefix Returns Type Description String [] names list GetSceneGUID(String) Get a GUID of a scene Declaration public string GetSceneGUID(string name) Parameters Type Name Description String name Returns Type Description String scene guid GetSceneName(String) Get the name of a scene Declaration public string GetSceneName(string guid) Parameters Type Name Description String guid Returns Type Description String scene name GetScenesNameStrings(Boolean) Get all scene names Declaration public string[] GetScenesNameStrings(bool addConstPrefix = false) Parameters Type Name Description Boolean addConstPrefix Returns Type Description String [] array of scene names GetState(String) Get the name of the state with the specific key. Used only in the Surfer Settings Window Declaration public string GetState(string key) Parameters Type Name Description String key Returns Type Description String state name GetStateKey(String) Get the key of a specific state. Used only in the Surfer Settings Window Declaration public string GetStateKey(string stateName) Parameters Type Name Description String stateName state name Returns Type Description String key of the state GetStatesList() Get a list of all the state names. Used only in the Surfer Settings Window Declaration public string[] GetStatesList() Returns Type Description String [] names list RemoveEvent(String) Remove a specific event. Used only in the Surfer Settings Window Declaration public void RemoveEvent(string eventName) Parameters Type Name Description String eventName event name RemoveState(String) Remove a specific state. Used only in the Surfer Settings Window Declaration public void RemoveState(string stateName) Parameters Type Name Description String stateName state name RenameEvent(String, String) Rename a specific event. Used only in the Surfer Settings Window Declaration public void RenameEvent(string key, string newName) Parameters Type Name Description String key String newName event new name RenameState(String, String) Rename a specific state. Used only in the Surfer Settings Window Declaration public void RenameState(string key, string newName) Parameters Type Name Description String key String newName state new name SetUp() Adds the default state names.Used when it is first created Declaration public void SetUp()"
  },
  "api/Surfer.SURotationData.html": {
    "href": "api/Surfer.SURotationData.html",
    "title": "Class SURotationData | Copyright © 2021 ATStudio",
    "keywords": "Class SURotationData Data to setup a Rotation animation by the inspector Inheritance Object SUAnimationData SURotationData Inherited Members SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.IsAvailable SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class SURotationData : SUAnimationData Methods OnCache(GameObject) Declaration protected override void OnCache(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnCache(GameObject) OnPlay(GameObject) Declaration protected override void OnPlay(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnPlay(GameObject)"
  },
  "api/Surfer.SUScaleData.html": {
    "href": "api/Surfer.SUScaleData.html",
    "title": "Class SUScaleData | Copyright © 2021 ATStudio",
    "keywords": "Class SUScaleData Data to setup a Scale animation by the inspector Inheritance Object SUAnimationData SUScaleData Inherited Members SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.IsAvailable SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class SUScaleData : SUAnimationData Methods OnCache(GameObject) Declaration protected override void OnCache(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnCache(GameObject) OnPlay(GameObject) Declaration protected override void OnPlay(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnPlay(GameObject)"
  },
  "api/Surfer.SUSceneActivatedEventData.html": {
    "href": "api/Surfer.SUSceneActivatedEventData.html",
    "title": "Class SUSceneActivatedEventData | Copyright © 2021 ATStudio",
    "keywords": "Class SUSceneActivatedEventData Event data for Scene Activation callback Inheritance Object SUSceneActivatedEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUSceneActivatedEventData Constructors SUSceneActivatedEventData(String) Declaration public SUSceneActivatedEventData(string scene) Parameters Type Name Description String scene Properties SceneName Declaration public string SceneName { get; } Property Value Type Description String"
  },
  "api/Surfer.SUSceneData.html": {
    "href": "api/Surfer.SUSceneData.html",
    "title": "Class SUSceneData | Copyright © 2021 ATStudio",
    "keywords": "Class SUSceneData Class to choose a scene in the inspector Inheritance Object SUSceneData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUSceneData Constructors SUSceneData(String, String) Declaration public SUSceneData(string name, string guid) Parameters Type Name Description String name String guid Properties GUID Declaration public string GUID { get; } Property Value Type Description String Name Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/Surfer.SUSceneDataDrawer.html": {
    "href": "api/Surfer.SUSceneDataDrawer.html",
    "title": "Class SUSceneDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUSceneDataDrawer Inheritance Object SUSceneDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUSceneDataDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUSceneDeactivatedEventData.html": {
    "href": "api/Surfer.SUSceneDeactivatedEventData.html",
    "title": "Class SUSceneDeactivatedEventData | Copyright © 2021 ATStudio",
    "keywords": "Class SUSceneDeactivatedEventData Event data for Scene Deactivation callback Inheritance Object SUSceneDeactivatedEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUSceneDeactivatedEventData Constructors SUSceneDeactivatedEventData(String) Declaration public SUSceneDeactivatedEventData(string scene) Parameters Type Name Description String scene Properties SceneName Declaration public string SceneName { get; } Property Value Type Description String"
  },
  "api/Surfer.SUSceneEvent.html": {
    "href": "api/Surfer.SUSceneEvent.html",
    "title": "Class SUSceneEvent | Copyright © 2021 ATStudio",
    "keywords": "Class SUSceneEvent Class to easily receive scene related events in the inspector Inheritance Object SUSceneEvent Implements ISUSceneActivatedHandler ISUSceneLoadedHandler ISUSceneUnloadedHandler ISUSceneDeactivatedHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUSceneEvent : MonoBehaviour, ISUSceneActivatedHandler, ISUSceneLoadedHandler, ISUSceneUnloadedHandler, ISUSceneDeactivatedHandler Fields OnActivated Declaration public UnityEvent OnActivated Field Value Type Description UnityEvent OnDeactivated Declaration public UnityEvent OnDeactivated Field Value Type Description UnityEvent OnLoaded Declaration public UnityEvent OnLoaded Field Value Type Description UnityEvent OnUnloaded Declaration public UnityEvent OnUnloaded Field Value Type Description UnityEvent Methods Awake() Declaration protected virtual void Awake() OnDestroy() Declaration protected virtual void OnDestroy() OnSUSceneActivated(SUSceneActivatedEventData) Declaration public virtual void OnSUSceneActivated(SUSceneActivatedEventData eventInfo) Parameters Type Name Description SUSceneActivatedEventData eventInfo OnSUSceneDeactivated(SUSceneDeactivatedEventData) Declaration public virtual void OnSUSceneDeactivated(SUSceneDeactivatedEventData eventInfo) Parameters Type Name Description SUSceneDeactivatedEventData eventInfo OnSUSceneLoaded(SUSceneLoadedEventData) Declaration public virtual void OnSUSceneLoaded(SUSceneLoadedEventData eventInfo) Parameters Type Name Description SUSceneLoadedEventData eventInfo OnSUSceneUnloaded(SUSceneUnloadedEventData) Declaration public virtual void OnSUSceneUnloaded(SUSceneUnloadedEventData eventInfo) Parameters Type Name Description SUSceneUnloadedEventData eventInfo PlayActions() Play all the Surfer Actions setup in the inspector Declaration protected void PlayActions() Implements ISUSceneActivatedHandler ISUSceneLoadedHandler ISUSceneUnloadedHandler ISUSceneDeactivatedHandler"
  },
  "api/Surfer.SUSceneEvent.SUSceneEvent_ID.html": {
    "href": "api/Surfer.SUSceneEvent.SUSceneEvent_ID.html",
    "title": "Enum SUSceneEvent.SUSceneEvent_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUSceneEvent.SUSceneEvent_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUSceneEvent_ID Fields Name Description Activated All Deactivated Loaded MySceneActivated MySceneAll MySceneDeactivated MySceneLoaded MySceneUnloaded Unloaded"
  },
  "api/Surfer.SUSceneEventEditor.html": {
    "href": "api/Surfer.SUSceneEventEditor.html",
    "title": "Class SUSceneEventEditor | Copyright © 2021 ATStudio",
    "keywords": "Class SUSceneEventEditor Inheritance Object SUSceneEventEditor Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUSceneEventEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Surfer.SUSceneLoadedEventData.html": {
    "href": "api/Surfer.SUSceneLoadedEventData.html",
    "title": "Class SUSceneLoadedEventData | Copyright © 2021 ATStudio",
    "keywords": "Class SUSceneLoadedEventData Event data for Scene Loaded callback Inheritance Object SUSceneLoadedEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUSceneLoadedEventData Constructors SUSceneLoadedEventData(String) Declaration public SUSceneLoadedEventData(string scene) Parameters Type Name Description String scene Properties SceneName Declaration public string SceneName { get; } Property Value Type Description String"
  },
  "api/Surfer.SUSceneLoadingEventData.html": {
    "href": "api/Surfer.SUSceneLoadingEventData.html",
    "title": "Class SUSceneLoadingEventData | Copyright © 2021 ATStudio",
    "keywords": "Class SUSceneLoadingEventData Event data for Scene Loading callback Inheritance Object SUSceneLoadingEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUSceneLoadingEventData Constructors SUSceneLoadingEventData() Declaration public SUSceneLoadingEventData() Properties Progress Declaration public float Progress { get; } Property Value Type Description Single SceneName Declaration public string SceneName { get; } Property Value Type Description String Methods UpdateProgress(String, Single) Declaration public void UpdateProgress(string scene, float progress) Parameters Type Name Description String scene Single progress"
  },
  "api/Surfer.SUScenesData.html": {
    "href": "api/Surfer.SUScenesData.html",
    "title": "Class SUScenesData | Copyright © 2021 ATStudio",
    "keywords": "Class SUScenesData Class to choose a scene in the inspector Inheritance Object SUScenesData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUScenesData Properties AllNames Declaration public List<string> AllNames { get; } Property Value Type Description List < String > AllNamesArray Declaration public string[] AllNamesArray { get; } Property Value Type Description String [] List Declaration public List<SUSceneData> List { get; } Property Value Type Description List < SUSceneData >"
  },
  "api/Surfer.SUScenesDataDrawer.html": {
    "href": "api/Surfer.SUScenesDataDrawer.html",
    "title": "Class SUScenesDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUScenesDataDrawer Inheritance Object SUScenesDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUScenesDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUSceneUnloadedEventData.html": {
    "href": "api/Surfer.SUSceneUnloadedEventData.html",
    "title": "Class SUSceneUnloadedEventData | Copyright © 2021 ATStudio",
    "keywords": "Class SUSceneUnloadedEventData Event data for Scene Unloaded callback Inheritance Object SUSceneUnloadedEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUSceneUnloadedEventData Constructors SUSceneUnloadedEventData(String) Declaration public SUSceneUnloadedEventData(string scene) Parameters Type Name Description String scene Properties SceneName Declaration public string SceneName { get; } Property Value Type Description String"
  },
  "api/Surfer.SUSceneUnloadingEventData.html": {
    "href": "api/Surfer.SUSceneUnloadingEventData.html",
    "title": "Class SUSceneUnloadingEventData | Copyright © 2021 ATStudio",
    "keywords": "Class SUSceneUnloadingEventData Event data for Scene Unloading callback Inheritance Object SUSceneUnloadingEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUSceneUnloadingEventData Constructors SUSceneUnloadingEventData() Declaration public SUSceneUnloadingEventData() Properties Progress Declaration public float Progress { get; } Property Value Type Description Single SceneName Declaration public string SceneName { get; } Property Value Type Description String Methods UpdateProgress(String, Single) Declaration public void UpdateProgress(string scene, float progress) Parameters Type Name Description String scene Single progress"
  },
  "api/Surfer.SUScreenAnimationData.html": {
    "href": "api/Surfer.SUScreenAnimationData.html",
    "title": "Class SUScreenAnimationData | Copyright © 2021 ATStudio",
    "keywords": "Class SUScreenAnimationData Data to setup a Screen-related animation by the inspector Inheritance Object SUAnimationData SUScreenAnimationData SUJumpData SUPositionData Inherited Members SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.IsAvailable SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.OnPlay(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class SUScreenAnimationData : SUAnimationData Fields _parentRect Declaration protected RectTransform _parentRect Field Value Type Description RectTransform _rectCp Declaration protected RectTransform _rectCp Field Value Type Description RectTransform Methods GetFromPosition() Get position \"from\" animation value based on StartMode Declaration protected Vector2 GetFromPosition() Returns Type Description Vector2 position value GetToAnchoredPosition() Get anchored position \"to\" animation value based on EndMode Declaration protected Vector2 GetToAnchoredPosition() Returns Type Description Vector2 position value GetToPosition() Get position \"to\" animation value based on EndMode Declaration protected Vector2 GetToPosition() Returns Type Description Vector2 position value OnCache(GameObject) Declaration protected override void OnCache(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnCache(GameObject)"
  },
  "api/Surfer.SUScreenAnimationDataDrawer.html": {
    "href": "api/Surfer.SUScreenAnimationDataDrawer.html",
    "title": "Class SUScreenAnimationDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUScreenAnimationDataDrawer Inheritance Object SUAnimationDataDrawer SUScreenAnimationDataDrawer SUJumpDataDrawer Inherited Members SUAnimationDataDrawer._startMode SUAnimationDataDrawer._endMode SUAnimationDataDrawer._ease SUAnimationDataDrawer._looped SUAnimationDataDrawer._obj SUAnimationDataDrawer.OnGUI(Rect, SerializedProperty, GUIContent) SUAnimationDataDrawer.OnCanBeLooped() SUAnimationDataDrawer.GetHeightCommonFields() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUScreenAnimationDataDrawer : SUAnimationDataDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single Overrides SUAnimationDataDrawer.GetPropertyHeight(SerializedProperty, GUIContent) IsNone() Declaration protected override bool IsNone() Returns Type Description Boolean Overrides SUAnimationDataDrawer.IsNone() OnCanUseDefaultModes(ref Rect, SerializedProperty) Declaration protected override bool OnCanUseDefaultModes(ref Rect position, SerializedProperty property) Parameters Type Name Description Rect position SerializedProperty property Returns Type Description Boolean Overrides SUAnimationDataDrawer.OnCanUseDefaultModes(ref Rect, SerializedProperty) OnSupplementaryFields(ref Rect, SerializedProperty) Declaration protected virtual void OnSupplementaryFields(ref Rect position, SerializedProperty property) Parameters Type Name Description Rect position SerializedProperty property"
  },
  "api/Surfer.SUScrollBehaviour.html": {
    "href": "api/Surfer.SUScrollBehaviour.html",
    "title": "Class SUScrollBehaviour | Copyright © 2021 ATStudio",
    "keywords": "Class SUScrollBehaviour Inheritance Object SUScrollBehaviour Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUScrollBehaviour Constructors SUScrollBehaviour(GameObject, SUElement) Declaration public SUScrollBehaviour(GameObject go, SUElement element) Parameters Type Name Description GameObject go SUElement element Methods HandleDestroy() Declaration public void HandleDestroy()"
  },
  "api/Surfer.SUSettingsRegister.html": {
    "href": "api/Surfer.SUSettingsRegister.html",
    "title": "Class SUSettingsRegister | Copyright © 2021 ATStudio",
    "keywords": "Class SUSettingsRegister Inheritance Object SUSettingsRegister Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public static class SUSettingsRegister Methods CreateSettingsProvider() Declaration public static SettingsProvider CreateSettingsProvider() Returns Type Description SettingsProvider"
  },
  "api/Surfer.SUShakeData.html": {
    "href": "api/Surfer.SUShakeData.html",
    "title": "Class SUShakeData | Copyright © 2021 ATStudio",
    "keywords": "Class SUShakeData Data to setup a Shake animation by the inspector Inheritance Object SUAnimationData SUShakeData Inherited Members SUAnimationData._startMode SUAnimationData._endMode SUAnimationData._duration SUAnimationData._delay SUAnimationData._delayMode SUAnimationData._ease SUAnimationData._looped SUAnimationData._loop SUAnimationData._transf SUAnimationData._idTween SUAnimationData._alreadyCached SUAnimationData._tween SUAnimationData.AllPlaying SUAnimationData.CGroupPrefix SUAnimationData.ColorPrefix SUAnimationData.JumpPrefix SUAnimationData.PositionPrefix SUAnimationData.PunchPrefix SUAnimationData.RectSizePrefix SUAnimationData.RotationPrefix SUAnimationData.ScalePrefix SUAnimationData.ShakePrefix SUAnimationData.CharTweenPrefix SUAnimationData.CacheComponents(GameObject) SUAnimationData.Play(GameObject) SUAnimationData.Delay SUAnimationData.KillIt() SUAnimationData.OnPlayTweenLogic() SUAnimationData.OnCompleteTweenLogic() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public sealed class SUShakeData : SUAnimationData Properties IsAvailable Declaration protected override bool IsAvailable { get; } Property Value Type Description Boolean Overrides SUAnimationData.IsAvailable Methods OnCache(GameObject) Declaration protected override void OnCache(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnCache(GameObject) OnPlay(GameObject) Declaration protected override void OnPlay(GameObject go) Parameters Type Name Description GameObject go Overrides SUAnimationData.OnPlay(GameObject)"
  },
  "api/Surfer.SUShakeData.Mode_ID.html": {
    "href": "api/Surfer.SUShakeData.Mode_ID.html",
    "title": "Enum SUShakeData.Mode_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUShakeData.Mode_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum Mode_ID Fields Name Description None Position Rotation Scale"
  },
  "api/Surfer.SUShakeDataDrawer.html": {
    "href": "api/Surfer.SUShakeDataDrawer.html",
    "title": "Class SUShakeDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUShakeDataDrawer Inheritance Object SUAnimationDataDrawer SUShakeDataDrawer Inherited Members SUAnimationDataDrawer._startMode SUAnimationDataDrawer._endMode SUAnimationDataDrawer._ease SUAnimationDataDrawer._looped SUAnimationDataDrawer._obj SUAnimationDataDrawer.OnGUI(Rect, SerializedProperty, GUIContent) SUAnimationDataDrawer.OnCanBeLooped() SUAnimationDataDrawer.GetHeightCommonFields() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUShakeDataDrawer : SUAnimationDataDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single Overrides SUAnimationDataDrawer.GetPropertyHeight(SerializedProperty, GUIContent) IsNone() Declaration protected override bool IsNone() Returns Type Description Boolean Overrides SUAnimationDataDrawer.IsNone() OnCanUseDefaultModes(ref Rect, SerializedProperty) Declaration protected override bool OnCanUseDefaultModes(ref Rect position, SerializedProperty property) Parameters Type Name Description Rect position SerializedProperty property Returns Type Description Boolean Overrides SUAnimationDataDrawer.OnCanUseDefaultModes(ref Rect, SerializedProperty)"
  },
  "api/Surfer.SUSliderBehaviour.html": {
    "href": "api/Surfer.SUSliderBehaviour.html",
    "title": "Class SUSliderBehaviour | Copyright © 2021 ATStudio",
    "keywords": "Class SUSliderBehaviour Inheritance Object SUSliderBehaviour Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUSliderBehaviour Constructors SUSliderBehaviour(GameObject, SUElement) Declaration public SUSliderBehaviour(GameObject go, SUElement element) Parameters Type Name Description GameObject go SUElement element Methods HandleDestroy() Declaration public void HandleDestroy()"
  },
  "api/Surfer.SUSliderEvent.html": {
    "href": "api/Surfer.SUSliderEvent.html",
    "title": "Class SUSliderEvent | Copyright © 2021 ATStudio",
    "keywords": "Class SUSliderEvent Class to make a Surfer Action after the slider reaches specific values Inheritance Object SUSliderEvent Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUSliderEvent : MonoBehaviour"
  },
  "api/Surfer.SUSliderEvent.SUSliderEvent_ID.html": {
    "href": "api/Surfer.SUSliderEvent.SUSliderEvent_ID.html",
    "title": "Enum SUSliderEvent.SUSliderEvent_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUSliderEvent.SUSliderEvent_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUSliderEvent_ID Fields Name Description LessThan MoreThan"
  },
  "api/Surfer.SUStatedAnimation.html": {
    "href": "api/Surfer.SUStatedAnimation.html",
    "title": "Class SUStatedAnimation | Copyright © 2021 ATStudio",
    "keywords": "Class SUStatedAnimation Class to play animations setup in the inspector , when a specific state has entered or exited Inheritance Object SUStateEvent SUStatedAnimation Implements ISUStateEnterHandler ISUStateExitHandler Inherited Members SUStateEvent.OnEnter SUStateEvent.OnExit Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStatedAnimation : SUStateEvent, ISUStateEnterHandler, ISUStateExitHandler Methods Awake() Declaration protected override void Awake() Overrides SUStateEvent.Awake() OnDestroy() Declaration protected override void OnDestroy() Overrides SUStateEvent.OnDestroy() OnSUStateEnter(SUStateEventData) Declaration public override void OnSUStateEnter(SUStateEventData eventInfo) Parameters Type Name Description SUStateEventData eventInfo Overrides SUStateEvent.OnSUStateEnter(SUStateEventData) OnSUStateExit(SUStateEventData) Declaration public override void OnSUStateExit(SUStateEventData eventInfo) Parameters Type Name Description SUStateEventData eventInfo Overrides SUStateEvent.OnSUStateExit(SUStateEventData) Implements ISUStateEnterHandler ISUStateExitHandler"
  },
  "api/Surfer.SUStatedAnimationEditor.html": {
    "href": "api/Surfer.SUStatedAnimationEditor.html",
    "title": "Class SUStatedAnimationEditor | Copyright © 2021 ATStudio",
    "keywords": "Class SUStatedAnimationEditor Inheritance Object SUStateEventEditor SUStatedAnimationEditor Inherited Members SUStateEventEditor.OnInspectorGUI() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStatedAnimationEditor : SUStateEventEditor Methods OnSupplementaryFields() Declaration protected override void OnSupplementaryFields() Overrides SUStateEventEditor.OnSupplementaryFields()"
  },
  "api/Surfer.SUStateData.html": {
    "href": "api/Surfer.SUStateData.html",
    "title": "Class SUStateData | Copyright © 2021 ATStudio",
    "keywords": "Class SUStateData Class to choose a state in the inspector Inheritance Object SUStateData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUStateData Constructors SUStateData(SUStateData) Declaration public SUStateData(SUStateData data) Parameters Type Name Description SUStateData data SUStateData(String, String) Declaration public SUStateData(string name, string guid) Parameters Type Name Description String name String guid Properties GUID Declaration public string GUID { get; } Property Value Type Description String Name Declaration public string Name { get; } Property Value Type Description String"
  },
  "api/Surfer.SUStateDataDrawer.html": {
    "href": "api/Surfer.SUStateDataDrawer.html",
    "title": "Class SUStateDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUStateDataDrawer Inheritance Object SUStateDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStateDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUStatedFocus.html": {
    "href": "api/Surfer.SUStatedFocus.html",
    "title": "Class SUStatedFocus | Copyright © 2021 ATStudio",
    "keywords": "Class SUStatedFocus Class to automatically focus on an object when a specific state has entered or exited Inheritance Object SUStateEvent SUStatedReaction SUStatedFocus Implements ISUStateEnterHandler ISUStateExitHandler Inherited Members SUStatedReaction._conds SUStatedReaction._versions SUStateEvent.OnEnter SUStateEvent.OnExit SUStateEvent.OnSUStateExit(SUStateEventData) SUStateEvent.Awake() SUStateEvent.OnDestroy() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStatedFocus : SUStatedReaction, ISUStateEnterHandler, ISUStateExitHandler Methods OnSUStateEnter(SUStateEventData) Declaration public override void OnSUStateEnter(SUStateEventData data) Parameters Type Name Description SUStateEventData data Overrides SUStateEvent.OnSUStateEnter(SUStateEventData) Implements ISUStateEnterHandler ISUStateExitHandler"
  },
  "api/Surfer.SUStatedInput.html": {
    "href": "api/Surfer.SUStatedInput.html",
    "title": "Class SUStatedInput | Copyright © 2021 ATStudio",
    "keywords": "Class SUStatedInput Class to make an action only when a specific input has been pressed and only if the current StateUI parent of this object is open. Inheritance Object SUStatedInput Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStatedInput : MonoBehaviour Fields _action Declaration protected SUActionData _action Field Value Type Description SUActionData Properties CanMakeAction Declaration protected bool CanMakeAction { get; } Property Value Type Description Boolean Methods Awake() Declaration protected virtual void Awake() Play() Declaration public void Play()"
  },
  "api/Surfer.SUStatedReaction.html": {
    "href": "api/Surfer.SUStatedReaction.html",
    "title": "Class SUStatedReaction | Copyright © 2021 ATStudio",
    "keywords": "Class SUStatedReaction Class to automatically react when a specific state has entered or exited. It uses conditions and state versioning. Inheritance Object SUStateEvent SUStatedReaction SUStatedFocus SUStatedVisibility Implements ISUStateEnterHandler ISUStateExitHandler Inherited Members SUStateEvent.OnEnter SUStateEvent.OnExit SUStateEvent.OnSUStateEnter(SUStateEventData) SUStateEvent.OnSUStateExit(SUStateEventData) SUStateEvent.Awake() SUStateEvent.OnDestroy() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStatedReaction : SUStateEvent, ISUStateEnterHandler, ISUStateExitHandler Fields _conds Declaration protected SUConditionsData _conds Field Value Type Description SUConditionsData _versions Declaration protected List<int> _versions Field Value Type Description List < Int32 > Implements ISUStateEnterHandler ISUStateExitHandler"
  },
  "api/Surfer.SUStatedReactionEditor.html": {
    "href": "api/Surfer.SUStatedReactionEditor.html",
    "title": "Class SUStatedReactionEditor | Copyright © 2021 ATStudio",
    "keywords": "Class SUStatedReactionEditor Inheritance Object SUStateEventEditor SUStatedReactionEditor Inherited Members SUStateEventEditor.OnInspectorGUI() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStatedReactionEditor : SUStateEventEditor Methods OnSupplementaryFields() Declaration protected override void OnSupplementaryFields() Overrides SUStateEventEditor.OnSupplementaryFields()"
  },
  "api/Surfer.SUStatedVisibility.html": {
    "href": "api/Surfer.SUStatedVisibility.html",
    "title": "Class SUStatedVisibility | Copyright © 2021 ATStudio",
    "keywords": "Class SUStatedVisibility Class to automatically set active (or not) an object when a specific state has entered or exited Inheritance Object SUStateEvent SUStatedReaction SUStatedVisibility Implements ISUStateEnterHandler ISUStateExitHandler Inherited Members SUStatedReaction._conds SUStatedReaction._versions SUStateEvent.OnEnter SUStateEvent.OnExit SUStateEvent.OnSUStateExit(SUStateEventData) SUStateEvent.Awake() SUStateEvent.OnDestroy() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStatedVisibility : SUStatedReaction, ISUStateEnterHandler, ISUStateExitHandler Methods OnSUStateEnter(SUStateEventData) Declaration public override void OnSUStateEnter(SUStateEventData data) Parameters Type Name Description SUStateEventData data Overrides SUStateEvent.OnSUStateEnter(SUStateEventData) Implements ISUStateEnterHandler ISUStateExitHandler"
  },
  "api/Surfer.SUStateEvent.html": {
    "href": "api/Surfer.SUStateEvent.html",
    "title": "Class SUStateEvent | Copyright © 2021 ATStudio",
    "keywords": "Class SUStateEvent Class to easily receive state related events in the inspector Inheritance Object SUStateEvent SUStatedAnimation SUStatedReaction Implements ISUStateEnterHandler ISUStateExitHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStateEvent : MonoBehaviour, ISUStateEnterHandler, ISUStateExitHandler Fields OnEnter Declaration public UnityEvent OnEnter Field Value Type Description UnityEvent OnExit Declaration public UnityEvent OnExit Field Value Type Description UnityEvent Methods Awake() Declaration protected virtual void Awake() OnDestroy() Declaration protected virtual void OnDestroy() OnSUStateEnter(SUStateEventData) Declaration public virtual void OnSUStateEnter(SUStateEventData eventInfo) Parameters Type Name Description SUStateEventData eventInfo OnSUStateExit(SUStateEventData) Declaration public virtual void OnSUStateExit(SUStateEventData eventInfo) Parameters Type Name Description SUStateEventData eventInfo Implements ISUStateEnterHandler ISUStateExitHandler"
  },
  "api/Surfer.SUStateEvent.SUStateEvent_ID.html": {
    "href": "api/Surfer.SUStateEvent.SUStateEvent_ID.html",
    "title": "Enum SUStateEvent.SUStateEvent_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUStateEvent.SUStateEvent_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUStateEvent_ID Fields Name Description Enter Exit MyStateEnter It uses the parent StateUI name MyStateExit It uses the parent StateUI name"
  },
  "api/Surfer.SUStateEventData.html": {
    "href": "api/Surfer.SUStateEventData.html",
    "title": "Class SUStateEventData | Copyright © 2021 ATStudio",
    "keywords": "Class SUStateEventData Event data for State Enter/Exit callback Inheritance Object SUStateEventData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStateEventData Constructors SUStateEventData(String, Int32, Int32, Object[]) Declaration public SUStateEventData(string state, int version, int playerID, object[] customData) Parameters Type Name Description String state Int32 version Int32 playerID Object [] customData Properties CustomData Declaration public object[] CustomData { get; } Property Value Type Description Object [] PlayerID Declaration public int PlayerID { get; } Property Value Type Description Int32 StateName Declaration public string StateName { get; } Property Value Type Description String Version Declaration public int Version { get; } Property Value Type Description Int32"
  },
  "api/Surfer.SUStateEventEditor.html": {
    "href": "api/Surfer.SUStateEventEditor.html",
    "title": "Class SUStateEventEditor | Copyright © 2021 ATStudio",
    "keywords": "Class SUStateEventEditor Inheritance Object SUStateEventEditor SUStatedAnimationEditor SUStatedReactionEditor Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStateEventEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI() OnSupplementaryFields() Declaration protected virtual void OnSupplementaryFields()"
  },
  "api/Surfer.SUStateInfo.html": {
    "href": "api/Surfer.SUStateInfo.html",
    "title": "Struct SUStateInfo | Copyright © 2021 ATStudio",
    "keywords": "Struct SUStateInfo Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public struct SUStateInfo Constructors SUStateInfo(SUElementData) Declaration public SUStateInfo(SUElementData data) Parameters Type Name Description SUElementData data SUStateInfo(String, Int32) Declaration public SUStateInfo(string name, int playerID) Parameters Type Name Description String name Int32 playerID SUStateInfo(String, Int32, Int32, Object[]) Declaration public SUStateInfo(string name, int v, int playerID, params object[] customData) Parameters Type Name Description String name Int32 v Int32 playerID Object [] customData Properties CustomData Declaration public object[] CustomData { get; } Property Value Type Description Object [] Name Declaration public string Name { get; } Property Value Type Description String PlayerID Declaration public int PlayerID { get; } Property Value Type Description Int32 Version Declaration public int Version { get; } Property Value Type Description Int32"
  },
  "api/Surfer.SUStatesData.html": {
    "href": "api/Surfer.SUStatesData.html",
    "title": "Class SUStatesData | Copyright © 2021 ATStudio",
    "keywords": "Class SUStatesData Class to easily choose states in the inspector Inheritance Object SUStatesData Namespace : Surfer Assembly : cs.temp.dll.dll Syntax [Serializable] public class SUStatesData Properties AllNames Declaration public List<string> AllNames { get; } Property Value Type Description List < String > AllNamesArray Declaration public string[] AllNamesArray { get; } Property Value Type Description String [] List Declaration public List<SUStateData> List { get; } Property Value Type Description List < SUStateData > Methods GetStateInfos(SUElementData) Declaration public List<SUStateInfo> GetStateInfos(SUElementData callerData) Parameters Type Name Description SUElementData callerData Returns Type Description List < SUStateInfo >"
  },
  "api/Surfer.SUStatesDataDrawer.html": {
    "href": "api/Surfer.SUStatesDataDrawer.html",
    "title": "Class SUStatesDataDrawer | Copyright © 2021 ATStudio",
    "keywords": "Class SUStatesDataDrawer Inheritance Object SUStatesDataDrawer Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStatesDataDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Surfer.SUStateUI.html": {
    "href": "api/Surfer.SUStateUI.html",
    "title": "Class SUStateUI | Copyright © 2021 ATStudio",
    "keywords": "Class SUStateUI Class to make a UI Panel an actual state Inheritance Object SUStateUI Implements ISUStateEnterHandler ISUStateExitHandler Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStateUI : MonoBehaviour, ISUStateEnterHandler, ISUStateExitHandler Fields AllUIStates List that contains all StatesUI loaded in the scene/game Declaration public static HashSet<SUStateUI> AllUIStates Field Value Type Description HashSet < SUStateUI > Properties ChildUIStates Declaration public List<SUStateUI> ChildUIStates { get; } Property Value Type Description List < SUStateUI > CloseDelay Declaration public float CloseDelay { get; } Property Value Type Description Single ParentUIStates Declaration public List<SUStateUI> ParentUIStates { get; } Property Value Type Description List < SUStateUI > StateData Declaration public SUStateData StateData { get; } Property Value Type Description SUStateData StatesToClose Declaration public List<string> StatesToClose { get; } Property Value Type Description List < String > UseCloseDelay Declaration public bool UseCloseDelay { get; } Property Value Type Description Boolean Methods Awake() Declaration protected virtual void Awake() OnDestroy() Declaration protected virtual void OnDestroy() OnSUStateEnter(SUStateEventData) Declaration public virtual void OnSUStateEnter(SUStateEventData eventInfo) Parameters Type Name Description SUStateEventData eventInfo OnSUStateExit(SUStateEventData) Declaration public virtual void OnSUStateExit(SUStateEventData eventInfo) Parameters Type Name Description SUStateEventData eventInfo Register() Register this UI Panel to enter/exit events of the state setup in the inspector Declaration protected virtual void Register() Implements ISUStateEnterHandler ISUStateExitHandler"
  },
  "api/Surfer.SUStateUIEditor.html": {
    "href": "api/Surfer.SUStateUIEditor.html",
    "title": "Class SUStateUIEditor | Copyright © 2021 ATStudio",
    "keywords": "Class SUStateUIEditor Inheritance Object SUStateUIEditor Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUStateUIEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Surfer.SUToggleBehaviour.html": {
    "href": "api/Surfer.SUToggleBehaviour.html",
    "title": "Class SUToggleBehaviour | Copyright © 2021 ATStudio",
    "keywords": "Class SUToggleBehaviour Inheritance Object SUToggleBehaviour Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUToggleBehaviour Constructors SUToggleBehaviour(GameObject, SUElement) Declaration public SUToggleBehaviour(GameObject go, SUElement element) Parameters Type Name Description GameObject go SUElement element Methods HandleDestroy() Declaration public void HandleDestroy()"
  },
  "api/Surfer.SUToggleEvent.html": {
    "href": "api/Surfer.SUToggleEvent.html",
    "title": "Class SUToggleEvent | Copyright © 2021 ATStudio",
    "keywords": "Class SUToggleEvent Class to make a Surfer Action when the toggle is true or false Inheritance Object SUToggleEvent Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUToggleEvent : MonoBehaviour"
  },
  "api/Surfer.SUToggleEvent.SUToggleEvent_ID.html": {
    "href": "api/Surfer.SUToggleEvent.SUToggleEvent_ID.html",
    "title": "Enum SUToggleEvent.SUToggleEvent_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUToggleEvent.SUToggleEvent_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUToggleEvent_ID Fields Name Description False True"
  },
  "api/Surfer.SUToolsMenu.html": {
    "href": "api/Surfer.SUToolsMenu.html",
    "title": "Class SUToolsMenu | Copyright © 2021 ATStudio",
    "keywords": "Class SUToolsMenu Inheritance Object SUToolsMenu Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUToolsMenu : EditorWindow"
  },
  "api/Surfer.SUTriggerEvent.html": {
    "href": "api/Surfer.SUTriggerEvent.html",
    "title": "Class SUTriggerEvent | Copyright © 2021 ATStudio",
    "keywords": "Class SUTriggerEvent Class to make a Surfer Action when a Trigger(2d/3d) callback is triggered Inheritance Object SUTriggerEvent Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUTriggerEvent : MonoBehaviour"
  },
  "api/Surfer.SUTriggerEvent.SUTriggerEvent_ID.html": {
    "href": "api/Surfer.SUTriggerEvent.SUTriggerEvent_ID.html",
    "title": "Enum SUTriggerEvent.SUTriggerEvent_ID | Copyright © 2021 ATStudio",
    "keywords": "Enum SUTriggerEvent.SUTriggerEvent_ID Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public enum SUTriggerEvent_ID Fields Name Description Enter Exit"
  },
  "api/Surfer.SUVersionBehaviour.html": {
    "href": "api/Surfer.SUVersionBehaviour.html",
    "title": "Class SUVersionBehaviour | Copyright © 2021 ATStudio",
    "keywords": "Class SUVersionBehaviour Inheritance Object SUVersionBehaviour Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class SUVersionBehaviour Constructors SUVersionBehaviour(GameObject, SUElement) Declaration public SUVersionBehaviour(GameObject go, SUElement element) Parameters Type Name Description GameObject go SUElement element"
  },
  "api/Surfer.VersionsDictionary.html": {
    "href": "api/Surfer.VersionsDictionary.html",
    "title": "Class VersionsDictionary | Copyright © 2021 ATStudio",
    "keywords": "Class VersionsDictionary Inheritance Object Dictionary < RuntimePlatform , String > SerializableDictionary < RuntimePlatform , String > VersionsDictionary Inherited Members SerializableDictionary<RuntimePlatform, String>.OnBeforeSerialize() SerializableDictionary<RuntimePlatform, String>.OnAfterDeserialize() Namespace : Surfer Assembly : cs.temp.dll.dll Syntax public class VersionsDictionary : SerializableDictionary<RuntimePlatform, string>, IDictionary<RuntimePlatform, string>, ICollection<KeyValuePair<RuntimePlatform, string>>, IDictionary, ICollection, IReadOnlyDictionary<RuntimePlatform, string>, IReadOnlyCollection<KeyValuePair<RuntimePlatform, string>>, IEnumerable<KeyValuePair<RuntimePlatform, string>>, IEnumerable, ISerializable, IDeserializationCallback, ISerializationCallbackReceiver"
  },
  "changelog.html": {
    "href": "changelog.html",
    "title": "Changelog | Copyright © 2021 ATStudio",
    "keywords": "Changelog All notable changes to Surfer will be documented in this page. [2.6] September 2021 Surfer 2.6 is out! Added Custom inspector fields for custom conditions and reactions! SUElement events can now be sent to Bolt as Custom Events! Group Buttons ! Changed Group States logic is now part of a SUElement type! Bolt integration is now part of Surfer Settings in Unity preferences ! Fixed SUIndicatorsManager hidden inherited members “_targetPos” and “_mustClean” OnClick event triggered twice [2.5] - August 2021 Surfer 2.5 is out! Added On/Off Screen Indicators ! HealthBars ! Notification Popup when Surfer Installation/Upgrade has completed FocusOnObject method of SUEventSystem has now an overload with a PlayerID param Demo Scenes for HealthBars and On/Off Screen Indicators Changed Follow method of SUEventSystem is now private Demo folder is now a .unitypackage that should be unpacked in order to use it Fixed Custom Reactions called two times Rare null ref of SUIndicatorDataDrawer Rare null ref of SUStatesDataDrawer CharTweener animation not counted in customEditor total animations count [2.4] - July 2021 Surfer 2.4 is out! Added Selection_Indicator element type to \"indicate\" the current selected UI object with some custom animations! Changed History Focus logic and behavior Fixed Loading/Unloading scene events null ref Rarely, the custom reactions / custom conditions inspector was not saving the list immediately [2.3] - June 2021 Surfer 2.3 is out! Added 8 New Fast Reactions : PlayerPrefs_SetInt, PlayerPrefs_SetFloat, PlayerPrefs_SetString, PlayerPrefs_DeleteKey, PlayerPrefs_DeleteAll, Animator_PlayState, Animator_Stop, Animations_StopCharTweener 8 New Fast Conditions : PlayerPrefs_IsIntEqualTo, PlayerPrefs_IsIntLowerThan, PlayerPrefs_IsIntGreaterThan, PlayerPrefs_IsFloatEqualTo, PlayerPrefs_IsFloatLowerThan, PlayerPrefs_IsFloatGreaterThan, PlayerPrefs_IsStringEqualTo, PlayerPrefs_StringContains, PlayerPrefs_HasKey, Slider_OverallVolume element type to easily manage the overall game audio with a Slider! BuildVersion_Text element type to easily show the version of the build/game on a text ! Delete Slider Volume Key button in Surfer Settings : to use only if the overall game audio volume is first managed by Surfer and then should be managed by another plugin (erase Surfer responsibility) CharTweener integration : easily animated your TextMeshPro text with this package (only found on GitHub) with these 11 animations : SplitIn, SplitOut, Wave, WaveLoop, Shaking, JumpIn, JumpOut, JumpInFull, JumpOutFull, LeftToRight, RightToLeft Fixed Surfer Scriptable Object access at runtime ( especially used for Elements types like Loading_Image and Loading_Text ) [2.2] - June 2021 Fixed Editor API Error when building [2.2] - May 2021 Surfer 2.2 is out ! Added New Online Manual and API ! \"If Conditions False\" Inspector Tab to run reactions when conditions fail! 5 New Fast Conditions : DateTime_IsDay, DateTime_IsMonth, DateTime_IsYear, DateTime_IsChristmas, DateTime_IsHalloween 9 New Fast Reactions : Application_OpenURL, Cursor_SetIcon, Cursor_SetIconCentered, Cursor_SetDefaultIcon, Transform_SetSizeDelta, Canvas_BringToFront, Canvas_SendToBack, UIGenerics_EnableClickConstraint, UIGenerics_DisableClickConstraint Tooltip_State type to create Tooltip with 1 click! DragLeft_State,DragRight_State, DragUp_State, DragDown_State types to create Draggable SideMenus with 1 click! AnchoredPosition inspector animation! Custom Events to let SUElement handle events of custom developer logic! Custom Reactions to run custom programmer reactions! IsStackable value to stack opening calls of a state! PlayerID value to support Local Multiplayer games with multiple independent players UIs! Loading_Text element type to easily show loading progress of a scene in a TextMeshPro! Loading_Image element type to easily show loading progress of a scene in a Filled Image! Changed History Focus logic and behavior [2.1] - May 2021 Surfer 2.1 is out ! Added 11 Inspector Events : ScrollRect_OnReachedTop, ScrollRect_OnReachedBottom, ScrollRect_OnReachedLeft, ScrollRect_OnReachedRight, ScrollRect_OnNotReachedAnySide, Dropdown_OnOptionSelected, Dropdown_OnFirstOptionSelected, Slider_OnGreaterThan, Slider_OnLowerThan, Slider_OnMax, Slider_OnMin 13 Inspector Conditions : Application_IsLanguage, Application_IsNotLanguage, Application_IsPlatform, Application_IsNotPlatform, Application_IsMobileDevice, Application_IsNotMobileDevice, Application_IsConsolePlatform, Application_IsNotConsolePlatform, Slider_IsMin, Slider_IsMax, Slider_IsGreaterThan, Slider_IsLowerThan, Dropdown_IsSelected, 3 Inspector Reactions : Image_SetSprite, Dropdown_SelectOption, Slider_SetValue [2.0] - April 2021 Surfer 2.0 is out! Surfer becomes easier and faster! Added SUElement component to manager every ui object. 20+ inspector events added 20+ easy inspector conditions added 20+ easy inspector reactions added"
  },
  "index.html": {
    "href": "index.html",
    "title": "Surfer | Copyright © 2021 ATStudio",
    "keywords": "Surfer Surfer is a UI Manager Tool that allows you to manage, control and jumpstart your UI flow easily and fast. It is intended to be a powerful, flexible and modular All-in-One tool to use in every kind of project from mobile to console, from single-player to multiplayer , from hypercasual to JRPG. Designers and artists can easily build the entire UI flow directly from the inspector whereas programmers can use the API to handle or extend the functionality, mechanics and callbacks of Surfer. To get started, see the Installation and the First Scene Panel section ."
  },
  "limitations.html": {
    "href": "limitations.html",
    "title": "Limitations | Copyright © 2021 ATStudio",
    "keywords": "Limitations Current known Surfer limitations : If a UI object is persistent ( is not destroyed when a new scene is loaded ) the SUElement Scene events like MySceneLoaded , MySceneLoading , MySceneUnloading , MySceneUnloaded , MySceneActivated , MySceneDeactivated don't work : use events like Awake or Start whenever possible. Selection Indicators don't work when the selected object under a Canvas is a Sprite or a Mesh Selection Indicators always render in front of the selected UI object , not behind."
  },
  "manual/Bolt.html": {
    "href": "manual/Bolt.html",
    "title": "Bolt | Copyright © 2021 ATStudio",
    "keywords": "Bolt Let’s see how to use a Surfer Action (OpenState for example) with Bolt. What we have to do in our graph is : -Use the Unit Surfer.OpenState -Get the Instance of the Surfer Singleton in order to have a target object as a caller -Add a NULL unit to CustomData if we don’t pass any our custom variable to the event/action (remember : customData is params ) Like this Event Listener First of all, go to Unity->Preferences->Surfer and select Bolt under the section Integrations . In order to receive a SUElement Event in Bolt we must do as follows : add SUElement to a scene object and then create a new event then, in the graph of the object, add a CustomEvent unit , insert the name related the event you want to listen to and run the logic you want as parameter, you have 1 Boolean that tells you if the event was run OnSuccess or OnFail The name of the event must be equal to the name of the SUElement event without the words before the first _ , for example : if the event is State->MyStateEnter , in the CustomEvent unit you must write MyStateEnter if the event is Input->NewInput->OnAction , in the CustomEvent unit you must write NewInputOnAction if the event is a Surfer CustomEvent ,in the CustomEvent unit just write the name of it"
  },
  "manual/CharTweener.html": {
    "href": "manual/CharTweener.html",
    "title": "CharTweener | Copyright © 2021 ATStudio",
    "keywords": "CharTweener If you're using the package CharTweener ( available on GitHub ) to animate TextMeshPro UI texts, to use it with a Surfer SUElement go to Unity->Preferences->Surfer and select it under the section Integrations . Then, select Save and Recompile and wait Unity to recompile. Now , you can animate your TextMeshPro UI text in a SUElement under the Animated! reaction list."
  },
  "manual/Click button.html": {
    "href": "manual/Click button.html",
    "title": "Click and Open | Copyright © 2021 ATStudio",
    "keywords": "Click and Open In order to simply trigger an OpenState action with a click , we must : Add SUElement component to a UI object like a Button Add the UIGeneric/OnClick event Add the OpenState action Like this:"
  },
  "manual/Close Mode.html": {
    "href": "manual/Close Mode.html",
    "title": "Close mode | Copyright © 2021 ATStudio",
    "keywords": "Close mode Other than opening a state, we can even close it. Normally , we can do it manually by calling a classic Surfer action by selecting Close State as a mode. But automatic is better than manually. The Close Mode of a state, it automatically closes all the states specified without having the developer closing manually all of them. Example : We have two siblings Tab Panels, Tab1 and Tab2. When one of them is open, the other one should be closed. By doing it manually, we would have to call 4 actions : OpenState Tab1 and CloseState Tab2 , or OpenState Tab2 and CloseState Tab1. By using Close Mode , if we choose Siblings as mode, the moment we call OpenState Tab1, the CloseState Tab2 action will be automatically triggered and viceversa. Anyway, this mode should be set directly in the SUElement component of each state, like : And for example, other than reacting to its MyStateEnter event, every state can also react accordingly to its MyStateExit event by moving out of camera view, like : In the Demo folder of the package, we can see this exact behaviour in the DemoScene called Tabs"
  },
  "manual/Custom Conditions.html": {
    "href": "manual/Custom Conditions.html",
    "title": "Custom Conditions | Copyright © 2021 ATStudio",
    "keywords": "Custom Conditions Let’s see how we can add Custom conditions to the inspector list of the SUElement . What we have to do is to open the script ConditionChecks that we can find in the Condition folder. Then we must simply add a new entry to the dictionary called “All”. The KeyValuePair entry is structured in this way : Key : is a string use to identify the condition in the inspector (if you change it , all the references in all the inspector will be lost) Value : is a combination of a string and a function. The string is the name/path of the condition that you will see written in the Inspector ( you can change it as many times as you want ). The function is the logic that should do the check in order to see if the condition is satisfied. Then, there is the Input value that contains the gameObject that called the condition so that you can perform some check even related to the caller itself. In the example below “_weeke” is the key, “Date/IsWeekEnd” is the inspector name and then there are two comparisons of \"DayOfWeek\". Custom Fields If you want to add custom fields to the conditions, you just have to add a list of PathField the moment you create the condition, like this :"
  },
  "manual/Custom Events.html": {
    "href": "manual/Custom Events.html",
    "title": "Custom Events | Copyright © 2021 ATStudio",
    "keywords": "Custom Events For all the events not handled natively in Surfer, we can use CustomEvents : events that we send to Surfer in order to let SUElement handle them. Animator An example of custom events can be done with the Animator . Basically : let's add the component SUAnimatorBehaviour to an animator state machine select if the behavior should run on the Animator State Enter or Exit mode create an action SendCustomEvent and choose an event from the dropdown list add SUElement to whatever scene object and , as event , select MyCustomEvent and then choose the event name chosen in the step above Now , you can react to an Animator State Enter or Exit event as you wish. LeanTouch An example of custom events can even be LeanTouch . Basically : let's add the component LeanFingerTap to a scene object let's add to the same object the component SUAction : now create a SendCustomEvent action and choose an event from the dropdown list in the public event OnWorld of LeanFingerTap , drag the SUAction component in it and select the Play method add SUElement to whatever scene object and , as event , select MyCustomEvent and then choose the event name chosen in the step 2 Now , you can react to a LeanTouch event as you wish."
  },
  "manual/Custom Reactions.html": {
    "href": "manual/Custom Reactions.html",
    "title": "Custom Reactions | Copyright © 2021 ATStudio",
    "keywords": "Custom Reactions Let’s see how we can add Custom reactions to the inspector list of the SUElement . What we have to do is to open the script CustomReactions that we can find in the Element folder. Then we must simply add a new entry to the dictionary called “All”. The KeyValuePair entry is structured in this way : Key : is a string use to identify the condition in the inspector (if you change it , all the references in all the inspector will be lost) Value : is a combination of a string and an action. The string is the name/path of the reaction that you will see written in the Inspector ( you can change it as many times as you want ). The action is the logic that it will be performed. Then, there is the Input value that contains the gameObject that called the reaction so that you can perform some logic even related to the caller itself. Custom Fields If you want to add custom fields to the reactions, you just have to add a list of PathField the moment you create the reaction, like this :"
  },
  "manual/Edit states and events.html": {
    "href": "manual/Edit states and events.html",
    "title": "Edit states and events | Copyright © 2021 ATStudio",
    "keywords": "Edit states and events Let’s see how we can rename , add or delete a state name or a custom event name . What we have to do is to go to Unity->Preferences and select Surfer . Here we are able to manage all our state and custom events name."
  },
  "manual/First Conditions Panel.html": {
    "href": "manual/First Conditions Panel.html",
    "title": "First Condition Panel | Copyright © 2021 ATStudio",
    "keywords": "First Condition Panel What if we want to show, as first panel , the Menu one only when a specific condition is satisfied and another panel when another condition if satisfied? For this scenario, we can simply use Conditions . Surfer has two type of conditions : Custom (with programmer's code) and Fast (built-in Unity API shortcuts). We’ll use Fast in this example. Setup Let's setup everything : add SUElement to a random scene object create a MySceneLoaded event add the Fast condition Application/IsLanguage and choose English add under the If Conditions True tab of the DO... section, a Surfer Action that will open a Menu panel add under the If Conditions False tab of the DO... section, a Surfer Action that will open a Settings panel Like this: Then, always in our scene Canvas : let's create two panels with two SUElement states set to Menu and Settings each other let's add to each one of them , the fast reaction called SetAnchoredPosition under the State/MyStateEnter event ( see Scene First Panel ) Move the panels out of Camera view and hit play. Surfer will show the Menu panel if our computer is set to \"English language\" and the Settings panel if not ."
  },
  "manual/Focus... and remember.html": {
    "href": "manual/Focus... and remember.html",
    "title": "Focus ... and remember | Copyright © 2021 ATStudio",
    "keywords": "Focus ... and remember When we open a UI Panel , we would like to Focus on/Select a particular UI object ( especially a button ) or maybe the last selected UI element of the panel itself. In Surfer, to accomplish this, we must simply use UIGenerics/FocusOnObjectOrStateLast and drag the object we want to “Focus on” when the state is open and when the state has no \"last selected object\" in its focus history. This approach is useful especially for normal Menus. For example : At game launch, we open the Menu and because it has no history focus , the panel will focus on the Play button. Then we select the Settings button and we open the Settings panel Then we go back from Settings panel to Menu panel and now, because the panel has history focus, it will \"Select/Focus\" the Settings button instead of the Play button."
  },
  "manual/Focus.html": {
    "href": "manual/Focus.html",
    "title": "Focus | Copyright © 2021 ATStudio",
    "keywords": "Focus When we open a UI Panel , we would like to Focus on/Select a particular UI Element, especially a button. In Surfer, to accomplish this, we must simply use UIGenerics/FocusOnObject and drag the object we want to “Focus on” when the state is open. So, if we hit play, when the UI state of that button will be open, we will see that button being automatically selected and coloured/animated/sprite swapped based on the settings of its Selectable component (in this case coloured of red) This approach is useful especially for Popups, where the focus should always be on the same UI button."
  },
  "manual/Generating Constants.html": {
    "href": "manual/Generating Constants.html",
    "title": "Generating Constants | Copyright © 2021 ATStudio",
    "keywords": "Generating Constants If we use Surfer at runtime , when listening/registering to events, we should add string-based parameters representing the names of the states or scenes. To avoid using strings , we can generate Constants by going to Unity->Preferences->Surfer and clicking the button Generate Constants : a class SUConsts will be created that will allow you to access and use all scenes, states and custom events names without using strings."
  },
  "manual/GroupState.html": {
    "href": "manual/GroupState.html",
    "title": "Group States | Copyright © 2021 ATStudio",
    "keywords": "Group States GroupStates are an easy way to handle multiple Surfer logics in just one click. For example, we would like to build a Tab Menu System where we have 4 tab screens and 4 buttons. In a normal Surfer scenario, we would add a SUElement to all the 4 tab screens and make them States . Then we would add a SUElement to all the 4 buttons and add the Surfer Action OpenState to all of them in order to open each screen. With GroupStates we can simplify all of this in two simple steps : create a parent object that will contain all the states add a SUElement to the parent and set the type to GroupStates_OnOff and then in the States list choose the name of the two states create a parent object that will contain all the buttons that will open the states add a SUElement to the parent and set the type to GroupButtons and then in the States list set the name of the two states The children buttons of the GroupButtons object will now perform (on click) the action OpenState and open the relative state based on the States list. Therefore the children states of the GroupStates object will now open or close based on the relative state of the States list ( in this case GroupStates_OnOff will activate and deactivate the State objects; instead, GroupStates_InOut will move the position of the State objects at the center and out of screen) (In the case of the images shown : State1 == ButtonState1 == Announcement, State2 == ButtonState2 == Clan ) Skipping objects Sometimes, a UI object, has the background as first child and then all the menu panels as 2,3 and 4 child. So, in order to use GroupStates and skip the \"group logic\" for the first children , we must set the variable Skip : to 1 if we want to skip just one object , 2 to skip the first two and so on..."
  },
  "manual/HealthBars.html": {
    "href": "manual/HealthBars.html",
    "title": "HealthBars | Copyright © 2021 ATStudio",
    "keywords": "HealthBars Let's see how to add an health bar to an enemy/target both in the inspector/editor and at runtime. Inspector/Editor By using the classic way, the inspector/editor one, we must do as follows : Create a prefab of the 3D enemy/target Add a SUHealthBarLink component to the prefab In the Data section , drag in the Target field the Transform the HealthBar should follow ( the enemy/prefab itself ) Then, setup all the values like TotalHp and TotalMp as you like In the AllData section list, add a new entry (add multiple entries if you are developing a split-screen game with multiple cameras) In the new entry, drag in the Prefab field the prefab BasicSquaredHB that you can find in the Surfer folder under Prefab/HealthBars/ Then, drag in the Cam field the camera where you want to see the UI healthBar shown , like the MainCamera ( if no Camera is added, the camera tagged with MainCamera will be used ) Then, set an offset like X=0 and Y=100 to put it above the target Finally, check Start On Awake Now, in a scene, drag the enemy/target prefab and the SUPersistentCanvas prefab (found in the Prefab/ folder) in it and hit play. The basic Squared HealthBar should now appear above the target. ( To apply damage, heal hp or other mechanics , see the HealthBars Demo scene ) Runtime To add an health bar at runtime instead, we must do as follows : Create a list of SUHealthBarData Add a new SUHealthBarData entry with the HB prefab and the Camera (add multiple entries if you are developing a split-screen game with multiple cameras) Then , create a SUHealthBarLinkData with the Transform of the target, the list of Data previously created and the hp and mp values that you need for you target Then, when you are ready to show your healthBars on screen, call StartFollow() from the SUHealthBarLinkData previously created Always remember to have the SUPersistentCanvas prefab in the scene. For example For Programmers The ready-made prefab uses the SUElement component in order to get HealthBar events like OnFullHp or OnEmptyHp , and also to set up the visual Data of the HB itself. These events are basically Interfaces that, if you are a programmer, you can use to create your custom script and handle them without using a SUElement component. Like below"
  },
  "manual/History focus.html": {
    "href": "manual/History focus.html",
    "title": "History Focus | Copyright © 2021 ATStudio",
    "keywords": "History Focus The History Focus feature of Surfer let's you \"highlight\" the selected button of a previosu state that led to the opening of a new one . For example : we have a panel that contains 3 buttons ( Play,Settings,About ) and then a popup. The moment we click About and we open the popup , the button About receives the callback as \"last selected object\" of a previous state and it changes its appearance based on our preferences so that the user can visually see which was the last clicked button. In order to let an object receive this callback, we must simply react ( always in a SUElement component ) to the event UIGeneric/OnBecomeLastStateSelection ."
  },
  "manual/Input.html": {
    "href": "manual/Input.html",
    "title": "Input Integration | Copyright © 2021 ATStudio",
    "keywords": "Input Integration First of all, in Unity->Preferences->Surfer we can select the current input system we are using. Then, let's select Save and Recompile and wait Unity to recompile. If we are using LeanTouch , the integration comes with the use of CustomEvents , see here Back Button Let’s setup a “Back button”, an action that will happen without clicking a specific UI element and only when that state is open. To do this, the event to use is : Input/OldInput/OnKeyDown for the Old Input System Input/NewInput/OnAction for the New Input System Input/Rewired/OnAction for Rewired Next, let's choose the input key that will trigger the action. Finally, in the If... section ( category Fast! ) let's choose State/IsMyStateOpen : this condition will make sure that the input action will be performed only when the state of the object where the component SUElement has been added on, is open; without this condition the input action will be always triggered. Now, let's add the CloseMyState action mode in the DO... -> If Conditons True section. What we have setup is a stated input, useful for Back buttons or whatever type of input actions that do not require UI elements to be clicked and that are performed only when the parent state is open."
  },
  "manual/Installation.html": {
    "href": "manual/Installation.html",
    "title": "Installation | Copyright © 2021 ATStudio",
    "keywords": "Installation First of all, the usage of Surfer requires the free tweening asset called DOTween available here Once you have downloaded and setup DOTween, go to Tools->Surfer and select “Install or Update” : Surfer will automatically install or update itself (this action has to be done every time you download a new version of Surfer) Now you can start using Surfer. DISCLAIMER : All the scripts not used in this guides should NOT be used; they’re part of a migration/deprecation process"
  },
  "manual/Loading Scene Progress.html": {
    "href": "manual/Loading Scene Progress.html",
    "title": "Loading Scene Progress | Copyright © 2021 ATStudio",
    "keywords": "Loading Scene Progress In order to show a progress bar with a progress text during the loading of a scene, we must simply use these two types of SUElement : Loading_Text : if we want to show the progress of a scene on a TextMeshPro text Loading_Image : if we want to fill an Image based on the progress of the scene ( the Image component should be of Filled type ) Automatically, Surfer will update all these elements when an async scene loading is performed ."
  },
  "manual/Local Multiplayer and PlayerID.html": {
    "href": "manual/Local Multiplayer and PlayerID.html",
    "title": "Local Multiplayer and PlayerID | Copyright © 2021 ATStudio",
    "keywords": "Local Multiplayer and PlayerID If we're dealing with a local multiplayer game , then we can use a really handy Surfer feature that will help us managing states and panel of different players as well as their EventSystem. This feature is the PlayerID . Basically, when we setup a state in our SUElement component we can see a field called Player ID : this value is accountable for handling multiple independent player UI states for a local multiplayer game. For example , if we have a 2P Local Multiplayer game with two equal state panels called Menu and two EventSystems ( or MultiplayerEventSystems ) in the scene : we set the PlayerID of the first Menu to 1 and the PlayerID of the second Menu to 2 we add to the name of an EventSystem the word 1P and to the name of the other one 2P In this way Surfer will be able to link every player state to its corresponding EventSystem. The value of the player id field has a special meaning when set to -1 , like the table shows : Value Description -1 The player ID is inherited from the parent object ( Example : if Menu state has playerID 1 , all its substates with playerID -1 will automatically change to 1 at runtime ) . If no parent found , is equal to 0. Not -1 No special use. It will be used the number specified. EventSystem Runtime By default, when we manually select by code an UI object we normally use EventSystem.current.SetSelectedGameObject(myObject) . Instead , we must let Surfer do the job and use the SurferManager.I.FocusOnObject call that will automatically check the playerID of the UI object and handle everything."
  },
  "manual/Migration v1 to v2.html": {
    "href": "manual/Migration v1 to v2.html",
    "title": "Migration v1 to v2 | Copyright © 2021 ATStudio",
    "keywords": "Migration v1 to v2 The version 2.0 of Surfer has brought lot of changes that requires ( for those that had downloaded Surfer v1 ) a “soft” migration in order to work. Soft migration means that all the old scripts will continue to work even in v2 , but you must update your Surfer logic before v2.5, version that will completely deprecate the old scripts. So, first of all, after downloading the new v2 , you will see some errors related to the script ConditionChecks . Basically, open the ConditionChecks script and every time you encounter ()=> change it to (input)=> . Save the file and you’ll be fine. Finally, in the v2 everything is around the SUElement component, so follow all the guides in the Manual section to see how the component should be used in order to substitute the old logic in v1. For any questions or problem, send us an email with subject Migration"
  },
  "manual/Mouse Cursor .html": {
    "href": "manual/Mouse Cursor .html",
    "title": "Mouse Cursor | Copyright © 2021 ATStudio",
    "keywords": "Mouse Cursor When we hover with a mouse on a clickable or specific UI element , sometimes we would like to show a different mouse cursor icon than the default one. To do this, we must simply let the SUElement react to the event UIGenerics/OnEnter or UIGenerics/OnExit and choose the fast reactions Cursor/SetIcon or Cursor/SetIconCentered to change the image of the cursor. If you want to go back to the default one , use Cursor/SetDefaultIcon ."
  },
  "manual/Mouse Hover Selection.html": {
    "href": "manual/Mouse Hover Selection.html",
    "title": "Mouse Hover Selection | Copyright © 2021 ATStudio",
    "keywords": "Mouse Hover Selection By default, when you hover on an object with the mouse, Unity won't select the UI element but will only highlight it. If you want the UI element to be selected and deselected on \"MouseEnter\" and \"MouseExit\", just add the SUElement and the Selectable component ( or one that inherits from it like the Button one) to the UI object itself and Surfer will handle all by itself. WARNING : An element hovered but without the SUElement component , won't be tracked in some Surfer mechanics like the HistoryFocus. It is recommended to use the component if we are going to use a mouse."
  },
  "manual/Notification and Stack.html": {
    "href": "manual/Notification and Stack.html",
    "title": "Notification and Stack | Copyright © 2021 ATStudio",
    "keywords": "Notification and Stack To create a Notification state panel , namely a panel that closes itself, we must simply set as CloseMode the value Myself and set a Delay after which the state will automatically close. The in and out animations are not automatically set but we should , as always , react to the events MyStateEnter and MyStateExit and setup whatever animation we want from the reaction list called Animated! . Stack When we open a specific state, if it is already opened , the call will be discarded; this is inconvenient for a notification panel. To stack all the \"Opening Calls\" we must check the value IsStackable in the SUElement component. Then we must event set the StackDelay value : this value should be HIGHER than the total duration of the MyStateExit animations , otherwise the state will instantly close and reopen itself when the previous closing animations have not finished yet."
  },
  "manual/OnOff Screen Indicators.html": {
    "href": "manual/OnOff Screen Indicators.html",
    "title": "On/Off Screen Indicators | Copyright © 2021 ATStudio",
    "keywords": "On/Off Screen Indicators Let's see how to add an on/off screen indicator to an enemy/target both in the inspector/editor and at runtime. Inspector/Editor By using the classic way, the inspector/editor one, we must do as follows : Create a prefab of the 3D enemy/target Add a SUIndicatorLink component to the prefab In the Data section , drag in the Target field the Transform the Indicator should follow ( the enemy/prefab itself ) In the AllData section list, add a new entry (add multiple entries if you are developing a split-screen game with multiple cameras) In the new entry, drag in the Prefab field the prefab BasicOnScreen that you can find in the Surfer folder under Prefab/Indicators/ Then, drag in the Cam field the camera where you want to see the UI healthBar shown , like the MainCamera ( if no Camera is added, the camera tagged with MainCamera will be used ) Then, as Type , choose OnScreen Finally, check Start On Awake Now, in a scene, drag the enemy/target prefab and the SUPersistentCanvas prefab (found in the Prefab/ folder) in it and hit play. The basic Indicator should now follow the target. Runtime To add an indicator at runtime instead, we must do as follows : Create a list of SUIndicatorData Add a new SUIndicatorData entry with the Indicator prefab, the Camera and the Type (add multiple entries if you are developing a split-screen game with multiple cameras) Then , create a SUIndicatorLinkData with the target Transform and the list of Data previously created Then, when you are ready to show your indicator on screen, call StartFollow() from the SUIndicatorLinkData previously created For example For Programmers The ready-made prefab uses the SUElement component in order to get all the Indicator events. These events are basically Interfaces that, if you are a programmer, you can use to create your custom script and handle them without using a SUElement component. Like below"
  },
  "manual/Playmaker.html": {
    "href": "manual/Playmaker.html",
    "title": "PlayMaker | Copyright © 2021 ATStudio",
    "keywords": "PlayMaker Let’s see how to use a Surfer Action with PlayMaker . First of all, unpack PlayMaker integration from Tools->Surfer->PlayMaker->Unpack Surfer has only one action for PlayMaker and it’s called TriggerAction . With this action you can run standard Surfer operations like opening a state, a scene , etc… Event Listener To receive a State or Scene Event we must : add the component SUStateEvent or SUSceneEvent to the scene object that should receive it send a PlayMaker Event directly from their UnityEvents in the inspector Then, in our PlayMaker window , we register to the event as usual"
  },
  "manual/Position Animation.html": {
    "href": "manual/Position Animation.html",
    "title": "Position Animation | Copyright © 2021 ATStudio",
    "keywords": "Position Animation In the list of animated reactions ( SUElement->Do...->Animated! ) there is an animation called Position . Basically, if we want to simply animate an anchoredPosition of an UI object, we must use the AnchoredPosition animation, but if we don't want to deal with specific values and just use percentages based , we must use the one called Position . The percentages that we see ( To Parent % and To Size % ) are related to the size of the parent RectTransform of the object animated and the size of the RectTransform animated. Below some examples by using a button inside a parent Rect Transform."
  },
  "manual/Runtime Events.html": {
    "href": "manual/Runtime Events.html",
    "title": "Runtime events | Copyright © 2021 ATStudio",
    "keywords": "Runtime events Let’s see how we can easily register to specific state/scene events by code, so that we can run our custom class logic. First, let’s create a class called, for example, MyTest. After, let’s add using Surfer; at the top, so that we can access its namespace. Next, let’s declare the interface ISUStateEnterHandler and implement its method OnSUStateEnter. Then, in the Awake (or wherever we want), we must register the class as receiver of that event , by passing all the states we want to receive the callback . Like this: To unregister use UnregisterStateEnter method and pass the same states as parameters. The same we can do for a scene event, like implementing the interface ISUSceneLoadedHandler or ISUSceneUnloadedHandler and calling their corresponding register methods."
  },
  "manual/Scene First Panel.html": {
    "href": "manual/Scene First Panel.html",
    "title": "Scene First Panel | Copyright © 2021 ATStudio",
    "keywords": "Scene First Panel Let's see how to trigger the opening of a panel when a Scene is loaded. Setup Assuming we have a scene with a Canvas and a Camera, let’s add the component SUElement to the Camera. Now, click + to add a new event and in the WHEN… section select Scene/MySceneLoaded as event. Next, in order to open a panel (UI State), we must create a Surfer Action . Basically, in the If Conditions True tab of the DO… section , let’s add a new item to the Surfer’s Actions list and as Mode let’s select OpenState and as state let’s select Menu . When editing a list of actions, sometimes you could see some strange behaviours to the inspector list items. So, fold all the actions you are not editing and edit only the one you want to Now, in our scene Canvas, let's create a UI Panel, let’s add the component SUElement to it , set the Type to State and set the State to Menu Then, add a State/MyStateEnter event and in the DO… section let’s add a fast reaction called SetAnchoredPosition and set the values to 0 ( this reaction is not mandatory , it's only for example purposes, you can choose the one it's better for you ) As last thing, move your UI Panel out of Camera view, hit play and what you will see is the same panel being shown directly in front of the Camera!"
  },
  "manual/Selection Indicator.html": {
    "href": "manual/Selection Indicator.html",
    "title": "Selection Indicator | Copyright © 2021 ATStudio",
    "keywords": "Selection Indicator A Selection Indicator is a type of UI element that is used to \"indicate\", with or without an animation, the current selected object of a UI Canvas. Here's what to do to add one : drag into a scene the SUPersistentCanvas prefab that you can find in the Prefab folder of Surfer then drag the prefab Arrows ( available in the Prefab/SelectionIndicators folder ) under the object Canvas of the prefab created above , and set 0 as playerID create a SUElement menu panel state ( with a button inside ) and set 0 as playerID of the state add , in the same panel, a MonoBehaviour/Awake event with a UIGenerics/FocusOnObject fast reaction and put the button created in the available reaction's field Like this Hit play and we'll see the two arrows of our prefab indicating the button of the menu. Extra Normally, the prefab SUPersistentCanvas should be added only to the first scene of a game, like the Splash screen. This object will then persist through all the scenes. If you want to use a different indicator for a 2nd player, just duplicate the object Canvas under SUPersistentCanvas/SelectionIndicators , then change the Indicator prefab inside the Canvas and change the playerID of the Indicator accordingly If you want to use a scale animation on a SelectionIndicator element , you should NOT run the scale animation on the element itself but you should create an empty child , put all your UI objects in it, and then run the scale animation on this child. That's because the logic of a SelectionIndicator uses the scale values and every scale animation on the object itself will break the entire logic ( see prefab Corners in Prefab/Indicators folder as scale example )"
  },
  "manual/Sibling Delay.html": {
    "href": "manual/Sibling Delay.html",
    "title": "Sibling Delay | Copyright © 2021 ATStudio",
    "keywords": "Sibling Delay When dealing with Animated! reactions sometimes we would like to start the animations of the game objects with a delay based on the hierarchy , like a particular sequence. All the Surfer inspector animations have 3 types of delay : Normal : the delay will be the one specified in the inspector WithSiblingIndex : the delay will be multiplied by the sibling index of the object ( meaning that the sibling 0 will start immediately the animation ) WithSiblingIndex : the delay will be multiplied by the sibling index of the object plus 1 ( meaning that the sibling indexes won't start at 0 but 1 ) This is particularly useful for menu buttons that needs to show up with a little bit of delay between each one of them."
  },
  "manual/SideMenu Drag.html": {
    "href": "manual/SideMenu Drag.html",
    "title": "SideMenu Drag | Copyright © 2021 ATStudio",
    "keywords": "SideMenu Drag In order to create a panel that can be opened or closed by dragging it, we must choose as type of SUElement an option between DragLeft_State , DragRight_State , DragUp_State or DragDown_State : it depends on which direction your panel is facing to . Basically the Drag State : depends on its current position depends on the parent RectTransform size and position uses the \"extruding\" part of it as part that should be dragged uses a threshold of 50% a drag limit of opening and closing doesn't work if rotated In the Demo folder of Surfer , you can find an example scene of how it works."
  },
  "manual/Sprite or Mesh.html": {
    "href": "manual/Sprite or Mesh.html",
    "title": "Sprite or Mesh? | Copyright © 2021 ATStudio",
    "keywords": "Sprite or Mesh? Sometimes we deal with sprites or meshes inside a Canvas. When using a SUElement component on these types of objects, in order to receive UIGenerics events we must check the field Is Sprite or Mesh . INFO : This value runs a logic that will check/add components like GraphicsRaycaster and Collider . So , if the expected UI events are not working, it is probably due to a conflict of the components with your current UI logic."
  },
  "manual/Tooltip.html": {
    "href": "manual/Tooltip.html",
    "title": "Tooltip | Copyright © 2021 ATStudio",
    "keywords": "Tooltip To show a tooltip on mouse over , we must simply set the type of a SUElement to Tooltip_State and then call OpenState as usual. The field Offset Factor is a value that decides the distance of the Tooltip state from the mouse cursor : negative values bring the tooltip at a left-bottom position relative to the cursor . Finally, the tooltip will always stay automatically in the Camera rect and will never go out of it : by default the position relative to the mouse is top-right ."
  },
  "manual/Tutorial Click Constraint.html": {
    "href": "manual/Tutorial Click Constraint.html",
    "title": "Tutorial Click Constraint | Copyright © 2021 ATStudio",
    "keywords": "Tutorial Click Constraint In order to create a Tutorial panel where only a specific button can be clicked , we must simply choose the fast reaction UIGenerics/EnableClickConstraint . Basically : we call OpenState for a state panel Tutorial on the MyStateEnter event of the same panel, we choose UIGenerics/EnableClickConstraint as fast reaction and we drag the button we want to enable the constraint on To disable the constraint and allow click on the entire panel, the fast reaction UIGenerics/EnableClickConstraint should be used. INFO : This fast reaction uses CanvasGroup components in order to work. So , if the expected constraint is not working, it is probably due to a conflict of the components with your current UI logic. Ideal Use In a normal ideal UI flow, the constraint click won't be used directly in a Tutorial state panel but directly on game panel like Menu or Settings because of the fact that the button will probably be part of these UI states. Basically, let's say for example that we have a Menu state panel and that, at first app launch ever, we want the user to click on the first button of this state ; what we will do is : call OpenState for the state Menu , using a specific version like 5 the Menu state will handle the MyStateEnter event with version 5 and will enable the constrain on the first button the users clicks on that button and we call OpenState for the state Menu , using version 1 now, the Menu state will handle the MyStateEnter event with version 1 and will disable all the constraints . Therefore the tutorial has ended and the Menu \"will act normally\""
  },
  "manual/Versions.html": {
    "href": "manual/Versions.html",
    "title": "Versions | Copyright © 2021 ATStudio",
    "keywords": "Versions Every time we perform a Surfer Action like OpenState or CloseState, we can see a field called Version . This value let's you handle in different ways the same panel. For example : we have a Notification panel state called Info when the player receives a friend request we call OpenState -> Info and we set the version to 1 the Info panel, receives the MyStateEnter event with version number 1, and decides to set the icon and text for the \"Friend Request\" notification then , when the player unlock an achievement we call OpenState -> Info and we set the version to 2 the Info panel, receives the MyStateEnter event with version number 2, and decides to set the icon and text for the \"Achievement Unlock\" notification This is what versions are made for : reusing the same state and handling it based the version number. Version 0 The moment we set the version to 0 , we are actually using a number that uses a \"special logic\": we are actually handling \"All versions\". Number Description 0 By setting 0, all versions will be called/opened/handled. If a state manages versions 1 and 2, the logic of both versions will run. Not 0 Only the specified version will be called/opened/handled by the state REMEMBER : If you open a state using version 1 and that state is already open with version 0 , the opening call will be discarded. The same goes for trying to close a state using version 1 when the same state with version 0 is open. Most of the times the \"closing call\" should be performed by using version 0. In the Demo folder of Surfer , you can find an example scene of how it works with a popup."
  },
  "UI Kits.html": {
    "href": "UI Kits.html",
    "title": "UI Kits | Copyright © 2021 ATStudio",
    "keywords": "UI Kits Surfer does not provide any kind of UI Kit so, here's a list of compatible free and paid UI Kits that you can use linked with the asset : Kenneys Itch AssetStore WARNING : UI Kits that use their own UI Managing System are NOT compatible with Surfer. Only Kits that are made of icons/sprites-only are compatible."
  }
}